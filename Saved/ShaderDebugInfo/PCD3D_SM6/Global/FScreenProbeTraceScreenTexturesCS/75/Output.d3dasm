;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: c3501352364276a22e39fa96523b5b61
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(8,8,1)
;
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct _RootShaderParameters
;   {
;
;       float DiffuseColorBoost;                      ; Offset:   48
;       float SkylightLeaking;                        ; Offset:   52
;       float SkylightLeakingRoughness;               ; Offset:   56
;       float InvFullSkylightLeakingDistance;         ; Offset:   60
;       uint SampleHeightFog;                         ; Offset:   64
;       uint SurfaceCacheUpdateFrameIndex;            ; Offset:  172
;       float4 HZBUvFactorAndInvFactor;               ; Offset:  288
;       float2 PrevSceneColorBilinearUVMin;           ; Offset:  304
;       float2 PrevSceneColorBilinearUVMax;           ; Offset:  312
;       float4 PrevScreenPositionScaleBias;           ; Offset:  320
;       float4 PrevScreenPositionScaleBiasForDepth;   ; Offset:  336
;       float PrevSceneColorPreExposureCorrection;    ; Offset:  352
;       float2 HZBBaseTexelSize;                      ; Offset:  360
;       float4 HZBUVToScreenUVScaleBias;              ; Offset:  368
;       float MaxHierarchicalScreenTraceIterations;   ; Offset:  496
;       float RelativeDepthThickness;                 ; Offset:  500
;       float HistoryDepthTestRelativeThickness;      ; Offset:  504
;       float NumThicknessStepsToDetermineCertainty;  ; Offset:  508
;       uint MinimumTracingThreadOccupancy;           ; Offset:  512
;       uint SkipFoliageHits;                         ; Offset:  516
;       uint ScreenProbeTracingOctahedronResolution;  ; Offset:  528
;       uint ScreenProbeLightSampleResolutionXY;      ; Offset:  532
;       uint ScreenProbeGatherOctahedronResolution;   ; Offset:  536
;       uint ScreenProbeGatherOctahedronResolutionWithBorder;; Offset:  540
;       uint ScreenProbeDownsampleFactor;             ; Offset:  544
;       uint2 ScreenProbeViewSize;                    ; Offset:  552
;       uint2 ScreenProbeAtlasViewSize;               ; Offset:  560
;       uint2 ScreenProbeAtlasBufferSize;             ; Offset:  568
;       float ScreenProbeGatherMaxMip;                ; Offset:  576
;       float RelativeSpeedDifferenceToConsiderLightingMoving;; Offset:  580
;       float ScreenTraceNoFallbackThicknessScale;    ; Offset:  584
;       float2 SampleRadianceProbeUVMul;              ; Offset:  592
;       float2 SampleRadianceProbeUVAdd;              ; Offset:  600
;       float2 SampleRadianceAtlasUVMul;              ; Offset:  608
;       uint NumUniformScreenProbes;                  ; Offset:  620
;       uint MaxNumAdaptiveProbes;                    ; Offset:  624
;       int FixedJitterIndex;                         ; Offset:  628
;       uint MaxImportanceSamplingOctahedronResolution;; Offset:  784
;       uint ScreenProbeBRDFOctahedronResolution;     ; Offset:  788
;       float StepFactor;                             ; Offset:  832
;       float CardTraceEndDistanceFromCamera;         ; Offset:  836
;       float MinSampleRadius;                        ; Offset:  848
;       float MinTraceDistance;                       ; Offset:  852
;       float MaxTraceDistance;                       ; Offset:  856
;       float MaxMeshSDFTraceDistance;                ; Offset:  860
;       float SurfaceBias;                            ; Offset:  864
;       float CardInterpolateInfluenceRadius;         ; Offset:  868
;       int HeightfieldMaxTracingSteps;               ; Offset:  880
;       float ReprojectionRadiusScale;                ; Offset:  896
;       float InvClipmapFadeSize;                     ; Offset:  908
;       uint2 ProbeAtlasResolutionInProbes;           ; Offset:  912
;       uint RadianceProbeClipmapResolution;          ; Offset:  920
;       uint NumRadianceProbeClipmaps;                ; Offset:  924
;       uint RadianceProbeResolution;                 ; Offset:  928
;       uint FinalProbeResolution;                    ; Offset:  932
;       uint FinalRadianceAtlasMaxMip;                ; Offset:  936
;       uint CalculateIrradiance;                     ; Offset:  940
;       uint IrradianceProbeResolution;               ; Offset:  944
;       uint OcclusionProbeResolution;                ; Offset:  948
;       float4 RadianceProbeSettings[6];              ; Offset: 1008
;       float4 PaddedWorldPositionToRadianceProbeCoordBias[6];; Offset: 1104
;       float4 PaddedRadianceProbeCoordToWorldPositionBias[6];; Offset: 1200
;       float2 InvProbeFinalRadianceAtlasResolution;  ; Offset: 1296
;       float2 InvProbeFinalIrradianceAtlasResolution;; Offset: 1304
;       float2 InvProbeDepthAtlasResolution;          ; Offset: 1312
;       uint OverrideCacheOcclusionLighting;          ; Offset: 1320
;       uint ShowBlackRadianceCacheLighting;          ; Offset: 1324
;       uint ProbeAtlasResolutionModuloMask;          ; Offset: 1328
;       uint ProbeAtlasResolutionDivideShift;         ; Offset: 1332
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:  1336
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; Resource bind info for NumAdaptiveScreenProbes
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for AdaptiveScreenProbeData
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; D3DStaticPointClampedSampler      sampler      NA          NA      S0   s1,space1000     1
; GBufferBTexture                   texture     f32          2d      T0             t0     1
; GBufferVelocityTexture            texture     f32          2d      T1             t1     1
; ScreenProbeSceneDepth             texture     u32          2d      T2             t2     1
; ScreenProbeWorldNormal            texture     f32          2d      T3             t3     1
; ScreenProbeWorldSpeed             texture     u32          2d      T4             t4     1
; NumAdaptiveScreenProbes           texture  struct         r/o      T5             t5     1
; AdaptiveScreenProbeData           texture  struct         r/o      T6             t6     1
; LightingChannelsTexture           texture     u32          2d      T7             t7     1
; ScreenProbeLightSampleDirection   texture     f32          2d      T8             t8     1
; ScreenProbeLightSampleFlags       texture     u32          2d      T9             t9     1
; ClosestHZBTexture                 texture     f32          2d     T10            t10     1
; HistorySceneDepth                 texture     f32          2d     T11            t11     1
; RWLightSampleTraceHit                 UAV     u32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<unsigned int>" = type { i32, %"class.Texture2D<unsigned int>::mips_type" }
%"class.Texture2D<unsigned int>::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 2> >" = type { <2 x float>, %"class.Texture2D<vector<float, 2> >::mips_type" }
%"class.Texture2D<vector<float, 2> >::mips_type" = type { i32 }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%_RootShaderParameters = type { float, float, float, float, i32, i32, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, float, <2 x float>, <4 x float>, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, <2 x i32>, <2 x i32>, <2 x i32>, float, float, float, <2 x float>, <2 x float>, <2 x float>, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, i32, float, float, <2 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], <2 x float>, <2 x float>, <2 x float>, i32, i32, i32, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%struct.SamplerState = type { i32 }

define void @ScreenProbeTraceScreenTexturesCS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 11, i32 11, i32 0, i8 0 }, i32 11, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 10, i32 10, i32 0, i8 0 }, i32 10, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 9, i32 9, i32 0, i8 0 }, i32 9, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 1000, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %16, %dx.types.ResourceProperties { i32 13, i32 1336 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %19 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %20 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %21 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 33)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.i32 %21, 1
  %23 = udiv i32 %19, %22
  %24 = udiv i32 %20, %22
  %25 = mul i32 %23, %22
  %26 = mul i32 %24, %22
  %27 = sub i32 %19, %25
  %28 = sub i32 %20, %26
  %29 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 35)  ; CBufferLoadLegacy(handle,regIndex)
  %30 = extractvalue %dx.types.CBufRet.i32 %29, 0
  %31 = mul i32 %30, %24
  %32 = add i32 %31, %23
  %33 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 34)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.i32 %33, 2
  %35 = urem i32 %32, %34
  %36 = udiv i32 %32, %34
  %37 = extractvalue %dx.types.CBufRet.i32 %33, 0
  %38 = mul i32 %37, %35
  %39 = mul i32 %37, %36
  %40 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 39)  ; CBufferLoadLegacy(handle,regIndex)
  %41 = extractvalue %dx.types.CBufRet.i32 %40, 1
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %46

; <label>:43                                      ; preds = %0
  %44 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 145)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.i32 %44, 0
  br label %46

; <label>:46                                      ; preds = %43, %0
  %47 = phi i32 [ %45, %43 ], [ %41, %0 ]
  %48 = uitofp i32 %47 to float
  %49 = fmul fast float %48, 1.250000e-01
  %50 = call float @dx.op.unary.f32(i32 22, float %49)  ; Frc(value)
  %51 = call i32 @dx.op.unary.i32(i32 30, i32 %47)  ; Bfrev(value)
  %52 = lshr i32 %51, 16
  %53 = uitofp i32 %52 to float
  %54 = fmul fast float %53, 0x3EF0000000000000
  %55 = uitofp i32 %37 to float
  %56 = fmul fast float %55, %50
  %57 = fmul fast float %54, %55
  %58 = fptoui float %56 to i32
  %59 = fptoui float %57 to i32
  %60 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 130)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.i32 %60, 0
  %62 = extractvalue %dx.types.CBufRet.i32 %60, 1
  %63 = add i32 %61, %38
  %64 = add i32 %63, %58
  %65 = add i32 %62, %39
  %66 = add i32 %65, %59
  %67 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 38)  ; CBufferLoadLegacy(handle,regIndex)
  %68 = extractvalue %dx.types.CBufRet.i32 %67, 3
  %69 = icmp ult i32 %32, %68
  br i1 %69, label %77, label %70

; <label>:70                                      ; preds = %46
  %71 = sub i32 %32, %68
  %72 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %73 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %72, i32 %71, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %74 = extractvalue %dx.types.ResRet.i32 %73, 0
  %75 = and i32 %74, 65535
  %76 = lshr i32 %74, 16
  br label %77

; <label>:77                                      ; preds = %70, %46
  %78 = phi i32 [ %75, %70 ], [ %64, %46 ]
  %79 = phi i32 [ %76, %70 ], [ %66, %46 ]
  br i1 %42, label %80, label %83

; <label>:80                                      ; preds = %77
  %81 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 145)  ; CBufferLoadLegacy(handle,regIndex)
  %82 = extractvalue %dx.types.CBufRet.i32 %81, 0
  br label %83

; <label>:83                                      ; preds = %80, %77
  %84 = phi i32 [ %82, %80 ], [ %41, %77 ]
  %85 = uitofp i32 %84 to float
  %86 = fmul fast float %85, 1.250000e-01
  %87 = call float @dx.op.unary.f32(i32 22, float %86)  ; Frc(value)
  %88 = call i32 @dx.op.unary.i32(i32 30, i32 %84)  ; Bfrev(value)
  %89 = lshr i32 %88, 16
  %90 = uitofp i32 %89 to float
  %91 = fmul fast float %90, 0x3EF0000000000000
  %92 = fmul fast float %55, %87
  %93 = fmul fast float %91, %55
  %94 = fptoui float %92 to i32
  %95 = fptoui float %93 to i32
  %96 = sub i32 %78, %61
  %97 = sub i32 %96, %94
  %98 = sub i32 %79, %62
  %99 = sub i32 %98, %95
  %100 = udiv i32 %97, %37
  %101 = udiv i32 %99, %37
  %102 = extractvalue %dx.types.CBufRet.i32 %40, 0
  %103 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %104 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %103, i32 0, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %105 = extractvalue %dx.types.ResRet.i32 %104, 0
  %106 = call i32 @dx.op.binary.i32(i32 40, i32 %105, i32 %102)  ; UMin(a,b)
  %107 = add i32 %106, %68
  %108 = icmp ult i32 %32, %107
  %109 = icmp ult i32 %23, %30
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %963

; <label>:111                                     ; preds = %83
  %112 = icmp ult i32 %27, %22
  %113 = icmp ult i32 %28, %22
  %114 = and i1 %112, %113
  br i1 %114, label %115, label %963

; <label>:115                                     ; preds = %111
  %116 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 128)  ; CBufferLoadLegacy(handle,regIndex)
  %117 = extractvalue %dx.types.CBufRet.f32 %116, 0
  %118 = extractvalue %dx.types.CBufRet.f32 %116, 1
  %119 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 129)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.f32 %119, 0
  %121 = extractvalue %dx.types.CBufRet.f32 %119, 1
  %122 = fadd fast float %117, -1.000000e+00
  %123 = fadd fast float %122, %120
  %124 = fadd fast float %118, -1.000000e+00
  %125 = fadd fast float %124, %121
  %126 = uitofp i32 %78 to float
  %127 = uitofp i32 %79 to float
  %128 = call float @dx.op.binary.f32(i32 36, float %126, float %123)  ; FMin(a,b)
  %129 = call float @dx.op.binary.f32(i32 36, float %127, float %125)  ; FMin(a,b)
  %130 = fadd fast float %128, 5.000000e-01
  %131 = fadd fast float %129, 5.000000e-01
  %132 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %133 = extractvalue %dx.types.CBufRet.f32 %132, 2
  %134 = extractvalue %dx.types.CBufRet.f32 %132, 3
  %135 = fmul fast float %133, %130
  %136 = fmul fast float %134, %131
  %137 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 2, i32 261 })  ; AnnotateHandle(res,props)  resource: Texture2D<U32>
  %138 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %137, i32 0, i32 %23, i32 %24, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %139 = extractvalue %dx.types.ResRet.i32 %138, 0
  %140 = bitcast i32 %139 to float
  %141 = fcmp fast ogt float %140, 0.000000e+00
  %142 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 2, i32 261 })  ; AnnotateHandle(res,props)  resource: Texture2D<U32>
  %143 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %142, i32 0, i32 %19, i32 %20, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %144 = extractvalue %dx.types.ResRet.i32 %143, 0
  %145 = and i32 %144, 3
  %146 = icmp eq i32 %145, 3
  %147 = and i1 %141, %146
  br i1 %147, label %148, label %963

; <label>:148                                     ; preds = %115
  %149 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 72)  ; CBufferLoadLegacy(handle,regIndex)
  %150 = extractvalue %dx.types.CBufRet.f32 %149, 2
  %151 = extractvalue %dx.types.CBufRet.f32 %149, 3
  %152 = fsub fast float %135, %151
  %153 = fsub fast float %136, %150
  %154 = extractvalue %dx.types.CBufRet.f32 %149, 0
  %155 = extractvalue %dx.types.CBufRet.f32 %149, 1
  %156 = fdiv fast float %152, %154
  %157 = fdiv fast float %153, %155
  %158 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 56)  ; CBufferLoadLegacy(handle,regIndex)
  %159 = extractvalue %dx.types.CBufRet.f32 %158, 0
  %160 = extractvalue %dx.types.CBufRet.f32 %158, 1
  %161 = extractvalue %dx.types.CBufRet.f32 %158, 2
  %162 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %163 = extractvalue %dx.types.CBufRet.f32 %162, 0
  %164 = extractvalue %dx.types.CBufRet.f32 %162, 1
  %165 = extractvalue %dx.types.CBufRet.f32 %162, 2
  %166 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 58)  ; CBufferLoadLegacy(handle,regIndex)
  %167 = extractvalue %dx.types.CBufRet.f32 %166, 0
  %168 = extractvalue %dx.types.CBufRet.f32 %166, 1
  %169 = extractvalue %dx.types.CBufRet.f32 %166, 2
  %170 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 59)  ; CBufferLoadLegacy(handle,regIndex)
  %171 = extractvalue %dx.types.CBufRet.f32 %170, 0
  %172 = extractvalue %dx.types.CBufRet.f32 %170, 1
  %173 = extractvalue %dx.types.CBufRet.f32 %170, 2
  %174 = fmul fast float %156, %140
  %175 = fmul fast float %157, %140
  %176 = fmul fast float %159, %174
  %177 = call float @dx.op.tertiary.f32(i32 46, float %175, float %163, float %176)  ; FMad(a,b,c)
  %178 = call float @dx.op.tertiary.f32(i32 46, float %140, float %167, float %177)  ; FMad(a,b,c)
  %179 = fadd fast float %178, %171
  %180 = fmul fast float %160, %174
  %181 = call float @dx.op.tertiary.f32(i32 46, float %175, float %164, float %180)  ; FMad(a,b,c)
  %182 = call float @dx.op.tertiary.f32(i32 46, float %140, float %168, float %181)  ; FMad(a,b,c)
  %183 = fadd fast float %182, %172
  %184 = fmul fast float %161, %174
  %185 = call float @dx.op.tertiary.f32(i32 46, float %175, float %165, float %184)  ; FMad(a,b,c)
  %186 = call float @dx.op.tertiary.f32(i32 46, float %140, float %169, float %185)  ; FMad(a,b,c)
  %187 = fadd fast float %186, %173
  %188 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %189 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %188, i32 0, i32 %19, i32 %20, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %190 = extractvalue %dx.types.ResRet.f32 %189, 0
  %191 = extractvalue %dx.types.ResRet.f32 %189, 1
  %192 = extractvalue %dx.types.ResRet.f32 %189, 2
  %193 = extractvalue %dx.types.ResRet.f32 %189, 3
  %194 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 2, i32 521 })  ; AnnotateHandle(res,props)  resource: Texture2D<2xF32>
  %195 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %194, i32 0, i32 %23, i32 %24, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %196 = extractvalue %dx.types.ResRet.f32 %195, 0
  %197 = extractvalue %dx.types.ResRet.f32 %195, 1
  %198 = fmul fast float %196, 2.000000e+00
  %199 = fmul fast float %197, 2.000000e+00
  %200 = fadd fast float %198, -1.000000e+00
  %201 = fadd fast float %199, -1.000000e+00
  %202 = call float @dx.op.unary.f32(i32 6, float %200)  ; FAbs(value)
  %203 = call float @dx.op.unary.f32(i32 6, float %201)  ; FAbs(value)
  %204 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %202, float %203)  ; Dot2(ax,ay,bx,by)
  %205 = fsub fast float 1.000000e+00, %204
  %206 = fsub fast float -0.000000e+00, %205
  %207 = call float @dx.op.binary.f32(i32 35, float %206, float 0.000000e+00)  ; FMax(a,b)
  %208 = fsub fast float -0.000000e+00, %207
  %209 = fcmp fast oge float %200, 0.000000e+00
  %210 = fcmp fast oge float %201, 0.000000e+00
  %211 = select i1 %209, float %208, float %207
  %212 = select i1 %210, float %208, float %207
  %213 = fadd fast float %211, %200
  %214 = fadd fast float %212, %201
  %215 = call float @dx.op.dot3.f32(i32 55, float %213, float %214, float %205, float %213, float %214, float %205)  ; Dot3(ax,ay,az,bx,by,bz)
  %216 = call float @dx.op.unary.f32(i32 25, float %215)  ; Rsqrt(value)
  %217 = fmul fast float %213, %216
  %218 = fmul fast float %214, %216
  %219 = fmul fast float %216, %205
  %220 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 2, i32 261 })  ; AnnotateHandle(res,props)  resource: Texture2D<U32>
  %221 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %220, i32 0, i32 %23, i32 %24, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %222 = extractvalue %dx.types.ResRet.i32 %221, 0
  %223 = and i32 %222, 32768
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %233, label %225

; <label>:225                                     ; preds = %148
  %226 = call float @dx.op.dot3.f32(i32 55, float %217, float %218, float %219, float %190, float %191, float %192)  ; Dot3(ax,ay,az,bx,by,bz)
  %227 = fcmp fast olt float %226, 0.000000e+00
  %228 = zext i1 %227 to i32
  br i1 %227, label %229, label %233

; <label>:229                                     ; preds = %225
  %230 = fsub fast float -0.000000e+00, %217
  %231 = fsub fast float -0.000000e+00, %218
  %232 = fsub fast float -0.000000e+00, %219
  br label %233

; <label>:233                                     ; preds = %229, %225, %148
  %234 = phi i32 [ %228, %229 ], [ %228, %225 ], [ 0, %148 ]
  %235 = phi float [ %230, %229 ], [ %217, %225 ], [ %217, %148 ]
  %236 = phi float [ %231, %229 ], [ %218, %225 ], [ %218, %148 ]
  %237 = phi float [ %232, %229 ], [ %219, %225 ], [ %219, %148 ]
  %238 = icmp eq i32 %234, 0
  %239 = or i1 %238, %224
  br i1 %239, label %240, label %963

; <label>:240                                     ; preds = %233
  %241 = fadd fast float %128, 1.000000e+00
  %242 = fmul fast float %133, %241
  %243 = fadd fast float %129, 1.000000e+00
  %244 = fmul fast float %134, %243
  %245 = fsub fast float %242, %151
  %246 = fsub fast float %244, %150
  %247 = fdiv fast float %245, %154
  %248 = fdiv fast float %246, %155
  %249 = fmul fast float %247, %140
  %250 = fmul fast float %248, %140
  %251 = fmul fast float %159, %249
  %252 = call float @dx.op.tertiary.f32(i32 46, float %250, float %163, float %251)  ; FMad(a,b,c)
  %253 = call float @dx.op.tertiary.f32(i32 46, float %140, float %167, float %252)  ; FMad(a,b,c)
  %254 = fmul fast float %160, %249
  %255 = call float @dx.op.tertiary.f32(i32 46, float %250, float %164, float %254)  ; FMad(a,b,c)
  %256 = call float @dx.op.tertiary.f32(i32 46, float %140, float %168, float %255)  ; FMad(a,b,c)
  %257 = fmul fast float %161, %249
  %258 = call float @dx.op.tertiary.f32(i32 46, float %250, float %165, float %257)  ; FMad(a,b,c)
  %259 = call float @dx.op.tertiary.f32(i32 46, float %140, float %169, float %258)  ; FMad(a,b,c)
  %260 = fsub fast float %253, %178
  %261 = fsub fast float %256, %182
  %262 = fsub fast float %259, %186
  %263 = call float @dx.op.dot3.f32(i32 55, float %260, float %261, float %262, float %235, float %236, float %237)  ; Dot3(ax,ay,az,bx,by,bz)
  %264 = call float @dx.op.unary.f32(i32 6, float %263)  ; FAbs(value)
  %265 = fmul fast float %264, 2.000000e+00
  %266 = fmul fast float %265, %235
  %267 = fmul fast float %265, %236
  %268 = fmul fast float %265, %237
  %269 = fadd fast float %266, %179
  %270 = fadd fast float %267, %183
  %271 = fadd fast float %268, %187
  %272 = extractvalue %dx.types.CBufRet.f32 %132, 0
  %273 = extractvalue %dx.types.CBufRet.f32 %132, 1
  %274 = fmul fast float %272, %135
  %275 = fmul fast float %273, %136
  %276 = fptosi float %274 to i32
  %277 = fptosi float %275 to i32
  %278 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 2, i32 261 })  ; AnnotateHandle(res,props)  resource: Texture2D<U32>
  %279 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %278, i32 0, i32 %276, i32 %277, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %280 = extractvalue %dx.types.ResRet.i32 %279, 0
  %281 = and i32 %280, 8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %286

; <label>:283                                     ; preds = %240
  %284 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 36)  ; CBufferLoadLegacy(handle,regIndex)
  %285 = extractvalue %dx.types.CBufRet.f32 %284, 2
  br label %286

; <label>:286                                     ; preds = %283, %240
  %287 = phi float [ %285, %283 ], [ 1.000000e+00, %240 ]
  br i1 %42, label %288, label %291

; <label>:288                                     ; preds = %286
  %289 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 145)  ; CBufferLoadLegacy(handle,regIndex)
  %290 = extractvalue %dx.types.CBufRet.i32 %289, 0
  br label %291

; <label>:291                                     ; preds = %288, %286
  %292 = phi i32 [ %290, %288 ], [ %41, %286 ]
  %293 = uitofp i32 %292 to float
  %294 = uitofp i32 %100 to float
  %295 = uitofp i32 %101 to float
  %296 = fmul fast float %293, 0x4040551EC0000000
  %297 = fmul fast float %293, 0x4027A147A0000000
  %298 = fadd fast float %296, %294
  %299 = fadd fast float %297, %295
  %300 = call float @dx.op.dot2.f32(i32 54, float %298, float %299, float 0x3FB12E2860000000, float 0x3F77E8B200000000)  ; Dot2(ax,ay,bx,by)
  %301 = call float @dx.op.unary.f32(i32 22, float %300)  ; Frc(value)
  %302 = fmul fast float %301, 0x404A7DD040000000
  %303 = call float @dx.op.unary.f32(i32 22, float %302)  ; Frc(value)
  %304 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %305 = extractvalue %dx.types.CBufRet.f32 %304, 0
  %306 = extractvalue %dx.types.CBufRet.f32 %304, 1
  %307 = extractvalue %dx.types.CBufRet.f32 %304, 2
  %308 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %309 = extractvalue %dx.types.CBufRet.f32 %308, 0
  %310 = extractvalue %dx.types.CBufRet.f32 %308, 1
  %311 = extractvalue %dx.types.CBufRet.f32 %308, 2
  %312 = fmul fast float %305, 2.097152e+06
  %313 = fmul fast float %306, 2.097152e+06
  %314 = fmul fast float %307, 2.097152e+06
  %315 = fadd fast float %312, %179
  %316 = fsub fast float %315, %309
  %317 = fadd fast float %313, %183
  %318 = fsub fast float %317, %310
  %319 = fadd fast float %314, %187
  %320 = fsub fast float %319, %311
  %321 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %322 = extractvalue %dx.types.CBufRet.i32 %321, 3
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %378, label %324

; <label>:324                                     ; preds = %291
  br label %325

; <label>:325                                     ; preds = %373, %324
  %326 = phi i32 [ %374, %373 ], [ 0, %324 ]
  %327 = add i32 %326, 63
  %328 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 %327)  ; CBufferLoadLegacy(handle,regIndex)
  %329 = extractvalue %dx.types.CBufRet.f32 %328, 1
  %330 = fmul fast float %329, %316
  %331 = fmul fast float %329, %318
  %332 = fmul fast float %329, %320
  %333 = add i32 %326, 69
  %334 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 %333)  ; CBufferLoadLegacy(handle,regIndex)
  %335 = extractvalue %dx.types.CBufRet.f32 %334, 0
  %336 = extractvalue %dx.types.CBufRet.f32 %334, 1
  %337 = extractvalue %dx.types.CBufRet.f32 %334, 2
  %338 = fadd fast float %330, %335
  %339 = fadd fast float %331, %336
  %340 = fadd fast float %332, %337
  %341 = fadd fast float %338, -5.000000e-01
  %342 = fadd fast float %339, -5.000000e-01
  %343 = fadd fast float %340, -5.000000e-01
  %344 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 56)  ; CBufferLoadLegacy(handle,regIndex)
  %345 = extractvalue %dx.types.CBufRet.f32 %344, 3
  %346 = fmul fast float %341, %345
  %347 = fmul fast float %342, %345
  %348 = fmul fast float %343, %345
  %349 = call float @dx.op.unary.f32(i32 7, float %346)  ; Saturate(value)
  %350 = call float @dx.op.unary.f32(i32 7, float %347)  ; Saturate(value)
  %351 = call float @dx.op.unary.f32(i32 7, float %348)  ; Saturate(value)
  %352 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %353 = extractvalue %dx.types.CBufRet.i32 %352, 2
  %354 = uitofp i32 %353 to float
  %355 = fsub fast float -5.000000e-01, %338
  %356 = fadd fast float %355, %354
  %357 = fsub fast float -5.000000e-01, %339
  %358 = fadd fast float %357, %354
  %359 = fsub fast float -5.000000e-01, %340
  %360 = fadd fast float %359, %354
  %361 = fmul fast float %356, %345
  %362 = fmul fast float %358, %345
  %363 = fmul fast float %360, %345
  %364 = call float @dx.op.unary.f32(i32 7, float %361)  ; Saturate(value)
  %365 = call float @dx.op.unary.f32(i32 7, float %362)  ; Saturate(value)
  %366 = call float @dx.op.unary.f32(i32 7, float %363)  ; Saturate(value)
  %367 = call float @dx.op.binary.f32(i32 36, float %365, float %366)  ; FMin(a,b)
  %368 = call float @dx.op.binary.f32(i32 36, float %364, float %367)  ; FMin(a,b)
  %369 = call float @dx.op.binary.f32(i32 36, float %350, float %351)  ; FMin(a,b)
  %370 = call float @dx.op.binary.f32(i32 36, float %349, float %369)  ; FMin(a,b)
  %371 = call float @dx.op.binary.f32(i32 36, float %370, float %368)  ; FMin(a,b)
  %372 = fcmp fast ogt float %371, %303
  br i1 %372, label %381, label %373

; <label>:373                                     ; preds = %325
  %374 = add i32 %326, 1
  %375 = extractvalue %dx.types.CBufRet.i32 %352, 3
  %376 = icmp ult i32 %374, %375
  br i1 %376, label %325, label %377

; <label>:377                                     ; preds = %373
  br label %378

; <label>:378                                     ; preds = %377, %291
  %379 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %380 = extractvalue %dx.types.CBufRet.i32 %379, 3
  br label %382

; <label>:381                                     ; preds = %325
  br label %382

; <label>:382                                     ; preds = %381, %378
  %383 = phi i32 [ %380, %378 ], [ %326, %381 ]
  %384 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %385 = extractvalue %dx.types.CBufRet.i32 %384, 3
  %386 = icmp ult i32 %383, %385
  br i1 %386, label %387, label %394

; <label>:387                                     ; preds = %382
  %388 = add i32 %383, 63
  %389 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 %388)  ; CBufferLoadLegacy(handle,regIndex)
  %390 = extractvalue %dx.types.CBufRet.f32 %389, 2
  %391 = fmul fast float %390, 0x3FFBB67AE0000000
  %392 = extractvalue %dx.types.CBufRet.f32 %389, 0
  %393 = fadd fast float %392, %391
  br label %394

; <label>:394                                     ; preds = %387, %382
  %395 = phi i1 [ true, %387 ], [ false, %382 ]
  %396 = phi float [ %393, %387 ], [ 1.000000e+07, %382 ]
  br i1 %395, label %397, label %399

; <label>:397                                     ; preds = %394
  %398 = call float @dx.op.binary.f32(i32 36, float %193, float %396)  ; FMin(a,b)
  br label %399

; <label>:399                                     ; preds = %397, %394
  %400 = phi float [ %398, %397 ], [ %193, %394 ]
  %401 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 31)  ; CBufferLoadLegacy(handle,regIndex)
  %402 = extractvalue %dx.types.CBufRet.f32 %401, 3
  %403 = extractvalue %dx.types.CBufRet.f32 %401, 1
  %404 = fmul fast float %403, %287
  %405 = extractvalue %dx.types.CBufRet.f32 %401, 0
  %406 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %407 = extractvalue %dx.types.CBufRet.f32 %406, 0
  %408 = extractvalue %dx.types.CBufRet.f32 %406, 1
  %409 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %410 = extractvalue %dx.types.CBufRet.f32 %409, 0
  %411 = extractvalue %dx.types.CBufRet.f32 %409, 1
  %412 = extractvalue %dx.types.CBufRet.f32 %409, 2
  %413 = extractvalue %dx.types.CBufRet.f32 %409, 3
  %414 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %415 = extractvalue %dx.types.CBufRet.f32 %414, 2
  %416 = extractvalue %dx.types.CBufRet.f32 %414, 3
  %417 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %418 = extractvalue %dx.types.CBufRet.f32 %417, 0
  %419 = extractvalue %dx.types.CBufRet.f32 %417, 1
  %420 = extractvalue %dx.types.CBufRet.f32 %417, 2
  %421 = extractvalue %dx.types.CBufRet.f32 %417, 3
  %422 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %423 = extractvalue %dx.types.CBufRet.f32 %422, 0
  %424 = extractvalue %dx.types.CBufRet.f32 %422, 1
  %425 = extractvalue %dx.types.CBufRet.f32 %422, 2
  %426 = extractvalue %dx.types.CBufRet.f32 %422, 3
  %427 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %428 = extractvalue %dx.types.CBufRet.f32 %427, 0
  %429 = extractvalue %dx.types.CBufRet.f32 %427, 1
  %430 = extractvalue %dx.types.CBufRet.f32 %427, 2
  %431 = extractvalue %dx.types.CBufRet.f32 %427, 3
  %432 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %433 = extractvalue %dx.types.CBufRet.f32 %432, 0
  %434 = extractvalue %dx.types.CBufRet.f32 %432, 1
  %435 = extractvalue %dx.types.CBufRet.f32 %432, 2
  %436 = extractvalue %dx.types.CBufRet.f32 %432, 3
  %437 = fmul fast float %418, %269
  %438 = call float @dx.op.tertiary.f32(i32 46, float %270, float %423, float %437)  ; FMad(a,b,c)
  %439 = call float @dx.op.tertiary.f32(i32 46, float %271, float %428, float %438)  ; FMad(a,b,c)
  %440 = fadd fast float %439, %433
  %441 = fmul fast float %419, %269
  %442 = call float @dx.op.tertiary.f32(i32 46, float %270, float %424, float %441)  ; FMad(a,b,c)
  %443 = call float @dx.op.tertiary.f32(i32 46, float %271, float %429, float %442)  ; FMad(a,b,c)
  %444 = fadd fast float %443, %434
  %445 = fmul fast float %420, %269
  %446 = call float @dx.op.tertiary.f32(i32 46, float %270, float %425, float %445)  ; FMad(a,b,c)
  %447 = call float @dx.op.tertiary.f32(i32 46, float %271, float %430, float %446)  ; FMad(a,b,c)
  %448 = fadd fast float %447, %435
  %449 = fmul fast float %421, %269
  %450 = call float @dx.op.tertiary.f32(i32 46, float %270, float %426, float %449)  ; FMad(a,b,c)
  %451 = call float @dx.op.tertiary.f32(i32 46, float %271, float %431, float %450)  ; FMad(a,b,c)
  %452 = fadd fast float %451, %436
  %453 = call float @dx.op.binary.f32(i32 35, float %452, float 1.000000e+00)  ; FMax(a,b)
  %454 = fdiv fast float %440, %453
  %455 = fdiv fast float %444, %453
  %456 = fdiv fast float %448, %453
  %457 = fmul fast float %454, 5.000000e-01
  %458 = fmul fast float %455, 5.000000e-01
  %459 = fadd fast float %457, 5.000000e-01
  %460 = fsub fast float 5.000000e-01, %458
  %461 = fmul fast float %459, %407
  %462 = fmul fast float %460, %408
  %463 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %464 = extractvalue %dx.types.CBufRet.f32 %463, 2
  %465 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %466 = extractvalue %dx.types.CBufRet.f32 %465, 2
  %467 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %468 = extractvalue %dx.types.CBufRet.f32 %467, 2
  %469 = fmul fast float %464, %190
  %470 = call float @dx.op.tertiary.f32(i32 46, float %191, float %466, float %469)  ; FMad(a,b,c)
  %471 = call float @dx.op.tertiary.f32(i32 46, float %192, float %468, float %470)  ; FMad(a,b,c)
  %472 = fcmp fast olt float %471, 0.000000e+00
  br i1 %472, label %473, label %483

; <label>:473                                     ; preds = %399
  %474 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %475 = extractvalue %dx.types.CBufRet.f32 %474, 2
  %476 = fmul fast float %464, %269
  %477 = call float @dx.op.tertiary.f32(i32 46, float %270, float %466, float %476)  ; FMad(a,b,c)
  %478 = call float @dx.op.tertiary.f32(i32 46, float %271, float %468, float %477)  ; FMad(a,b,c)
  %479 = fadd fast float %478, %475
  %480 = fmul fast float %479, 0xBFEFAE1480000000
  %481 = fdiv fast float %480, %471
  %482 = call float @dx.op.binary.f32(i32 36, float %481, float %400)  ; FMin(a,b)
  br label %483

; <label>:483                                     ; preds = %473, %399
  %484 = phi float [ %482, %473 ], [ %400, %399 ]
  %485 = fmul fast float %484, %190
  %486 = fmul fast float %484, %191
  %487 = fmul fast float %484, %192
  %488 = fadd fast float %485, %269
  %489 = fadd fast float %486, %270
  %490 = fadd fast float %487, %271
  %491 = fmul fast float %488, %418
  %492 = call float @dx.op.tertiary.f32(i32 46, float %489, float %423, float %491)  ; FMad(a,b,c)
  %493 = call float @dx.op.tertiary.f32(i32 46, float %490, float %428, float %492)  ; FMad(a,b,c)
  %494 = fadd fast float %493, %433
  %495 = fmul fast float %488, %419
  %496 = call float @dx.op.tertiary.f32(i32 46, float %489, float %424, float %495)  ; FMad(a,b,c)
  %497 = call float @dx.op.tertiary.f32(i32 46, float %490, float %429, float %496)  ; FMad(a,b,c)
  %498 = fadd fast float %497, %434
  %499 = fmul fast float %488, %420
  %500 = call float @dx.op.tertiary.f32(i32 46, float %489, float %425, float %499)  ; FMad(a,b,c)
  %501 = call float @dx.op.tertiary.f32(i32 46, float %490, float %430, float %500)  ; FMad(a,b,c)
  %502 = fadd fast float %501, %435
  %503 = fmul fast float %488, %421
  %504 = call float @dx.op.tertiary.f32(i32 46, float %489, float %426, float %503)  ; FMad(a,b,c)
  %505 = call float @dx.op.tertiary.f32(i32 46, float %490, float %431, float %504)  ; FMad(a,b,c)
  %506 = fadd fast float %505, %436
  %507 = fdiv fast float %494, %506
  %508 = fdiv fast float %498, %506
  %509 = fdiv fast float %502, %506
  %510 = fmul fast float %507, 5.000000e-01
  %511 = fmul fast float %508, 5.000000e-01
  %512 = fadd fast float %510, 5.000000e-01
  %513 = fsub fast float 5.000000e-01, %511
  %514 = fsub fast float %512, %459
  %515 = fmul fast float %514, %407
  %516 = fsub fast float %513, %460
  %517 = fmul fast float %516, %408
  %518 = fsub fast float %509, %456
  %519 = fdiv fast float 1.000000e+00, %515
  %520 = fdiv fast float 1.000000e+00, %517
  %521 = fdiv fast float 1.000000e+00, %518
  %522 = fmul fast float %461, %519
  %523 = fsub fast float -0.000000e+00, %522
  %524 = fmul fast float %462, %520
  %525 = fsub fast float -0.000000e+00, %524
  %526 = fmul fast float %456, %521
  %527 = fsub fast float -0.000000e+00, %526
  %528 = fsub fast float %407, %461
  %529 = fsub fast float %408, %462
  %530 = fsub fast float 1.000000e+00, %456
  %531 = fmul fast float %519, %528
  %532 = fmul fast float %520, %529
  %533 = fmul fast float %521, %530
  %534 = call float @dx.op.binary.f32(i32 35, float %523, float %531)  ; FMax(a,b)
  %535 = call float @dx.op.binary.f32(i32 35, float %525, float %532)  ; FMax(a,b)
  %536 = call float @dx.op.binary.f32(i32 35, float %527, float %533)  ; FMax(a,b)
  %537 = call float @dx.op.binary.f32(i32 36, float %535, float %536)  ; FMin(a,b)
  %538 = call float @dx.op.binary.f32(i32 36, float %534, float %537)  ; FMin(a,b)
  %539 = call float @dx.op.unary.f32(i32 7, float %538)  ; Saturate(value)
  %540 = fmul fast float %515, %539
  %541 = fmul fast float %517, %539
  %542 = fmul fast float %539, %518
  %543 = fadd fast float %540, %461
  %544 = fadd fast float %541, %462
  %545 = fadd fast float %542, %456
  %546 = fcmp fast olt float %540, 0.000000e+00
  %547 = fcmp fast olt float %541, 0.000000e+00
  %548 = select i1 %546, float 0.000000e+00, float 1.000000e+00
  %549 = select i1 %547, float 0.000000e+00, float 1.000000e+00
  %550 = fdiv fast float 1.000000e+00, %415
  %551 = fdiv fast float 1.000000e+00, %416
  %552 = fmul fast float %415, 0x3F747AE140000000
  %553 = fmul fast float %416, 0x3F747AE140000000
  %554 = fsub fast float -0.000000e+00, %552
  %555 = fsub fast float -0.000000e+00, %553
  %556 = select i1 %546, float %554, float %552
  %557 = select i1 %547, float %555, float %553
  %558 = fmul fast float %550, %461
  %559 = fmul fast float %551, %462
  %560 = call float @dx.op.unary.f32(i32 27, float %558)  ; Round_ni(value)
  %561 = call float @dx.op.unary.f32(i32 27, float %559)  ; Round_ni(value)
  %562 = fadd fast float %560, %548
  %563 = fadd fast float %561, %549
  %564 = fmul fast float %562, %415
  %565 = fmul fast float %563, %416
  %566 = fsub fast float %556, %461
  %567 = fadd fast float %566, %564
  %568 = fsub fast float %557, %462
  %569 = fadd fast float %568, %565
  %570 = fdiv fast float %567, %540
  %571 = fdiv fast float %569, %541
  %572 = call float @dx.op.binary.f32(i32 36, float %570, float %571)  ; FMin(a,b)
  %573 = fmul float %542, %572
  %574 = fmul float %541, %572
  %575 = fmul float %540, %572
  %576 = fadd float %456, %573
  %577 = fadd float %462, %574
  %578 = fadd float %461, %575
  %579 = fcmp fast ogt float %405, 0.000000e+00
  %580 = fcmp fast olt float %572, 1.000000e+00
  %581 = and i1 %580, %579
  br i1 %581, label %582, label %653

; <label>:582                                     ; preds = %483
  br label %583

; <label>:583                                     ; preds = %583, %582
  %584 = phi float [ %645, %583 ], [ %578, %582 ]
  %585 = phi float [ %644, %583 ], [ %577, %582 ]
  %586 = phi float [ %643, %583 ], [ %576, %582 ]
  %587 = phi float [ %634, %583 ], [ %572, %582 ]
  %588 = phi float [ %639, %583 ], [ 0.000000e+00, %582 ]
  %589 = phi float [ %635, %583 ], [ %572, %582 ]
  %590 = phi float [ %638, %583 ], [ 0.000000e+00, %582 ]
  %591 = call float @dx.op.unary.f32(i32 21, float %590)  ; Exp(value)
  %592 = fmul fast float %591, %415
  %593 = fmul fast float %591, %416
  %594 = fdiv fast float 1.000000e+00, %592
  %595 = fdiv fast float 1.000000e+00, %593
  %596 = fmul fast float %592, 0x3F747AE140000000
  %597 = fmul fast float %593, 0x3F747AE140000000
  %598 = fsub fast float -0.000000e+00, %596
  %599 = fsub fast float -0.000000e+00, %597
  %600 = select i1 %546, float %598, float %596
  %601 = select i1 %547, float %599, float %597
  %602 = fmul fast float %594, %584
  %603 = fmul fast float %595, %585
  %604 = call float @dx.op.unary.f32(i32 27, float %602)  ; Round_ni(value)
  %605 = call float @dx.op.unary.f32(i32 27, float %603)  ; Round_ni(value)
  %606 = fadd fast float %604, %548
  %607 = fadd fast float %605, %549
  %608 = fmul fast float %606, %592
  %609 = fmul fast float %607, %593
  %610 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %611 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %612 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %610, %dx.types.Handle %611, float %584, float %585, float undef, float undef, i32 0, i32 0, i32 undef, float %590)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %613 = extractvalue %dx.types.ResRet.f32 %612, 0
  %614 = fmul fast float %589, 1.000000e+01
  %615 = call float @dx.op.unary.f32(i32 7, float %614)  ; Saturate(value)
  %616 = fmul fast float %615, 0x3F847AE000000000
  %617 = fadd fast float %616, 0x3FEFAE1480000000
  %618 = fmul fast float %617, %613
  %619 = fsub fast float %600, %461
  %620 = fadd fast float %619, %608
  %621 = fsub fast float %601, %462
  %622 = fadd fast float %621, %609
  %623 = fsub fast float %618, %456
  %624 = fdiv fast float %620, %540
  %625 = fdiv fast float %622, %541
  %626 = fdiv fast float %623, %542
  %627 = fcmp fast olt float %542, 0.000000e+00
  %628 = select i1 %627, float %626, float 1.000000e+00
  %629 = call float @dx.op.binary.f32(i32 36, float %625, float %628)  ; FMin(a,b)
  %630 = call float @dx.op.binary.f32(i32 36, float %624, float %629)  ; FMin(a,b)
  %631 = fcmp fast ogt float %586, %618
  %632 = fcmp fast une float %630, %628
  %633 = and i1 %631, %632
  %634 = select i1 %633, float %630, float %587
  %635 = select i1 %631, float %630, float %589
  %636 = call float @dx.op.binary.f32(i32 36, float %635, float 1.000000e+00)  ; FMin(a,b)
  %637 = select i1 %633, float 1.000000e+00, float -1.000000e+00
  %638 = fadd fast float %637, %590
  %639 = fadd fast float %588, 1.000000e+00
  %640 = fmul float %542, %636
  %641 = fmul float %541, %636
  %642 = fmul float %540, %636
  %643 = fadd float %456, %640
  %644 = fadd float %462, %641
  %645 = fadd float %461, %642
  %646 = fcmp fast oge float %638, 0.000000e+00
  %647 = fcmp fast olt float %639, %405
  %648 = and i1 %646, %647
  %649 = fcmp fast olt float %635, 1.000000e+00
  %650 = and i1 %649, %648
  br i1 %650, label %583, label %651

; <label>:651                                     ; preds = %583
  %652 = fcmp olt float %638, 0.000000e+00
  br label %653

; <label>:653                                     ; preds = %651, %483
  %654 = phi float [ %645, %651 ], [ %578, %483 ]
  %655 = phi float [ %644, %651 ], [ %577, %483 ]
  %656 = phi float [ %643, %651 ], [ %576, %483 ]
  %657 = phi float [ %634, %651 ], [ %572, %483 ]
  %658 = phi i1 [ %652, %651 ], [ false, %483 ]
  br i1 %658, label %659, label %693

; <label>:659                                     ; preds = %653
  %660 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %661 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %662 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %660, %dx.types.Handle %661, float %654, float %655, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %663 = extractvalue %dx.types.ResRet.f32 %662, 0
  %664 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 71)  ; CBufferLoadLegacy(handle,regIndex)
  %665 = extractvalue %dx.types.CBufRet.f32 %664, 0
  %666 = fmul fast float %665, %663
  %667 = extractvalue %dx.types.CBufRet.f32 %664, 1
  %668 = fadd fast float %666, %667
  %669 = extractvalue %dx.types.CBufRet.f32 %664, 2
  %670 = fmul fast float %669, %663
  %671 = extractvalue %dx.types.CBufRet.f32 %664, 3
  %672 = fsub fast float %670, %671
  %673 = fdiv fast float 1.000000e+00, %672
  %674 = fadd fast float %668, %673
  %675 = fmul fast float %665, %656
  %676 = fmul fast float %669, %656
  %677 = fsub fast float %676, %671
  %678 = fdiv fast float 1.000000e+00, %677
  %679 = fsub fast float %667, %674
  %680 = fadd fast float %679, %675
  %681 = fadd fast float %680, %678
  %682 = call float @dx.op.binary.f32(i32 35, float %674, float 0x3EE4F8B580000000)  ; FMax(a,b)
  %683 = fmul fast float %404, %682
  %684 = fcmp fast olt float %681, %683
  %685 = zext i1 %684 to i32
  br i1 %684, label %693, label %686

; <label>:686                                     ; preds = %659
  %687 = fmul fast float %657, %540
  %688 = fmul fast float %657, %541
  %689 = fmul fast float %657, %542
  %690 = fadd fast float %687, %461
  %691 = fadd fast float %688, %462
  %692 = fadd fast float %689, %456
  br label %693

; <label>:693                                     ; preds = %686, %659, %653
  %694 = phi float [ %654, %659 ], [ %690, %686 ], [ %654, %653 ]
  %695 = phi float [ %655, %659 ], [ %691, %686 ], [ %655, %653 ]
  %696 = phi float [ %656, %659 ], [ %692, %686 ], [ %656, %653 ]
  %697 = phi i32 [ %685, %659 ], [ %685, %686 ], [ 0, %653 ]
  %698 = icmp ne i32 %697, 0
  %699 = fcmp fast ogt float %402, 0.000000e+00
  %700 = and i1 %699, %698
  br i1 %700, label %701, label %749

; <label>:701                                     ; preds = %693
  %702 = fmul fast float %415, %402
  %703 = fmul fast float %702, %540
  %704 = fmul fast float %416, %402
  %705 = fmul fast float %704, %541
  %706 = fmul fast float %703, %703
  %707 = fmul fast float %705, %705
  %708 = fadd fast float %706, %707
  %709 = call float @dx.op.unary.f32(i32 24, float %708)  ; Sqrt(value)
  %710 = fsub fast float %543, %694
  %711 = fsub fast float %544, %695
  %712 = fmul fast float %710, %710
  %713 = fmul fast float %711, %711
  %714 = fadd fast float %713, %712
  %715 = call float @dx.op.unary.f32(i32 24, float %714)  ; Sqrt(value)
  %716 = fdiv fast float %709, %715
  %717 = call float @dx.op.binary.f32(i32 36, float %716, float 1.000000e+00)  ; FMin(a,b)
  br label %718

; <label>:718                                     ; preds = %744, %701
  %719 = phi float [ %746, %744 ], [ 0.000000e+00, %701 ]
  %720 = phi i32 [ %745, %744 ], [ 0, %701 ]
  %721 = fdiv fast float %719, %402
  %722 = fmul fast float %721, %717
  %723 = fmul fast float %722, %710
  %724 = fmul fast float %722, %711
  %725 = fadd fast float %723, %694
  %726 = fadd fast float %724, %695
  %727 = fcmp fast olt float %725, %407
  %728 = fcmp fast olt float %726, %408
  %729 = fcmp fast ogt float %725, 0.000000e+00
  %730 = fcmp fast ogt float %726, 0.000000e+00
  %731 = and i1 %729, %727
  %732 = and i1 %730, %728
  %733 = and i1 %731, %732
  br i1 %733, label %734, label %744

; <label>:734                                     ; preds = %718
  %735 = fsub fast float %545, %696
  %736 = fmul fast float %722, %735
  %737 = fadd fast float %736, %696
  %738 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %739 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %740 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %738, %dx.types.Handle %739, float %725, float %726, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %741 = extractvalue %dx.types.ResRet.f32 %740, 0
  %742 = fcmp fast ogt float %737, %741
  br i1 %742, label %743, label %744

; <label>:743                                     ; preds = %734
  br label %744

; <label>:744                                     ; preds = %743, %734, %718
  %745 = phi i32 [ 1, %743 ], [ %720, %734 ], [ %720, %718 ]
  %746 = fadd fast float %719, 1.000000e+00
  %747 = fcmp fast olt float %746, %402
  br i1 %747, label %718, label %748

; <label>:748                                     ; preds = %744
  br label %749

; <label>:749                                     ; preds = %748, %693
  %750 = phi i32 [ 0, %693 ], [ %745, %748 ]
  %751 = fmul fast float %694, %410
  %752 = fmul fast float %695, %411
  %753 = fadd fast float %751, %412
  %754 = fadd fast float %752, %413
  %755 = icmp eq i32 %750, 0
  %756 = and i1 %698, %755
  %757 = zext i1 %756 to i32
  %758 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 53)  ; CBufferLoadLegacy(handle,regIndex)
  %759 = extractvalue %dx.types.CBufRet.f32 %758, 2
  %760 = fsub fast float %753, %151
  %761 = fsub fast float %754, %150
  %762 = fdiv fast float %760, %154
  %763 = fdiv fast float %761, %155
  %764 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 71)  ; CBufferLoadLegacy(handle,regIndex)
  %765 = extractvalue %dx.types.CBufRet.f32 %764, 0
  %766 = fmul fast float %765, %696
  %767 = extractvalue %dx.types.CBufRet.f32 %764, 1
  %768 = fadd fast float %766, %767
  %769 = extractvalue %dx.types.CBufRet.f32 %764, 2
  %770 = fmul fast float %769, %696
  %771 = extractvalue %dx.types.CBufRet.f32 %764, 3
  %772 = fsub fast float %770, %771
  %773 = fdiv fast float 1.000000e+00, %772
  %774 = fadd fast float %768, %773
  %775 = fmul fast float %774, %762
  %776 = fmul fast float %774, %763
  %777 = fmul fast float %775, %159
  %778 = call float @dx.op.tertiary.f32(i32 46, float %776, float %163, float %777)  ; FMad(a,b,c)
  %779 = call float @dx.op.tertiary.f32(i32 46, float %774, float %167, float %778)  ; FMad(a,b,c)
  %780 = fmul fast float %775, %160
  %781 = call float @dx.op.tertiary.f32(i32 46, float %776, float %164, float %780)  ; FMad(a,b,c)
  %782 = call float @dx.op.tertiary.f32(i32 46, float %774, float %168, float %781)  ; FMad(a,b,c)
  %783 = fmul fast float %775, %161
  %784 = call float @dx.op.tertiary.f32(i32 46, float %776, float %165, float %783)  ; FMad(a,b,c)
  %785 = call float @dx.op.tertiary.f32(i32 46, float %774, float %169, float %784)  ; FMad(a,b,c)
  %786 = fsub fast float %269, %171
  %787 = fsub fast float %786, %779
  %788 = fsub fast float %270, %172
  %789 = fsub fast float %788, %782
  %790 = fsub fast float %271, %173
  %791 = fsub fast float %790, %785
  %792 = call float @dx.op.dot3.f32(i32 55, float %787, float %789, float %791, float %787, float %789, float %791)  ; Dot3(ax,ay,az,bx,by,bz)
  %793 = call float @dx.op.unary.f32(i32 24, float %792)  ; Sqrt(value)
  %794 = call float @dx.op.binary.f32(i32 36, float %793, float %759)  ; FMin(a,b)
  br i1 %756, label %795, label %952

; <label>:795                                     ; preds = %749
  %796 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 117)  ; CBufferLoadLegacy(handle,regIndex)
  %797 = extractvalue %dx.types.CBufRet.f32 %796, 0
  %798 = extractvalue %dx.types.CBufRet.f32 %796, 1
  %799 = extractvalue %dx.types.CBufRet.f32 %796, 2
  %800 = extractvalue %dx.types.CBufRet.f32 %796, 3
  %801 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 118)  ; CBufferLoadLegacy(handle,regIndex)
  %802 = extractvalue %dx.types.CBufRet.f32 %801, 0
  %803 = extractvalue %dx.types.CBufRet.f32 %801, 1
  %804 = extractvalue %dx.types.CBufRet.f32 %801, 2
  %805 = extractvalue %dx.types.CBufRet.f32 %801, 3
  %806 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 119)  ; CBufferLoadLegacy(handle,regIndex)
  %807 = extractvalue %dx.types.CBufRet.f32 %806, 0
  %808 = extractvalue %dx.types.CBufRet.f32 %806, 1
  %809 = extractvalue %dx.types.CBufRet.f32 %806, 2
  %810 = extractvalue %dx.types.CBufRet.f32 %806, 3
  %811 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 120)  ; CBufferLoadLegacy(handle,regIndex)
  %812 = extractvalue %dx.types.CBufRet.f32 %811, 0
  %813 = extractvalue %dx.types.CBufRet.f32 %811, 1
  %814 = extractvalue %dx.types.CBufRet.f32 %811, 2
  %815 = extractvalue %dx.types.CBufRet.f32 %811, 3
  %816 = fmul fast float %797, %762
  %817 = call float @dx.op.tertiary.f32(i32 46, float %763, float %802, float %816)  ; FMad(a,b,c)
  %818 = call float @dx.op.tertiary.f32(i32 46, float %696, float %807, float %817)  ; FMad(a,b,c)
  %819 = fadd fast float %818, %812
  %820 = fmul fast float %798, %762
  %821 = call float @dx.op.tertiary.f32(i32 46, float %763, float %803, float %820)  ; FMad(a,b,c)
  %822 = call float @dx.op.tertiary.f32(i32 46, float %696, float %808, float %821)  ; FMad(a,b,c)
  %823 = fadd fast float %822, %813
  %824 = fmul fast float %799, %762
  %825 = call float @dx.op.tertiary.f32(i32 46, float %763, float %804, float %824)  ; FMad(a,b,c)
  %826 = call float @dx.op.tertiary.f32(i32 46, float %696, float %809, float %825)  ; FMad(a,b,c)
  %827 = fadd fast float %826, %814
  %828 = fmul fast float %800, %762
  %829 = call float @dx.op.tertiary.f32(i32 46, float %763, float %805, float %828)  ; FMad(a,b,c)
  %830 = call float @dx.op.tertiary.f32(i32 46, float %696, float %810, float %829)  ; FMad(a,b,c)
  %831 = fadd fast float %830, %815
  %832 = fdiv fast float %819, %831
  %833 = fdiv fast float %823, %831
  %834 = fdiv fast float %827, %831
  %835 = fsub fast float %762, %832
  %836 = fsub fast float %763, %833
  %837 = fsub fast float %696, %834
  %838 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %839 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %840 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %838, %dx.types.Handle %839, float %753, float %754, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %841 = extractvalue %dx.types.ResRet.f32 %840, 0
  %842 = fcmp fast ogt float %841, 0.000000e+00
  br i1 %842, label %843, label %868

; <label>:843                                     ; preds = %795
  %844 = extractvalue %dx.types.ResRet.f32 %840, 3
  %845 = extractvalue %dx.types.ResRet.f32 %840, 2
  %846 = extractvalue %dx.types.ResRet.f32 %840, 1
  %847 = fmul fast float %841, 0x4010083560000000
  %848 = fmul fast float %846, 0x4010083560000000
  %849 = fadd fast float %847, 0xC000082560000000
  %850 = fadd fast float %848, 0xC000082560000000
  %851 = fmul fast float %845, 6.553500e+04
  %852 = call float @dx.op.unary.f32(i32 26, float %851)  ; Round_ne(value)
  %853 = fptoui float %852 to i32
  %854 = shl i32 %853, 16
  %855 = fmul fast float %844, 6.553500e+04
  %856 = call float @dx.op.unary.f32(i32 26, float %855)  ; Round_ne(value)
  %857 = fptoui float %856 to i32
  %858 = or i32 %854, %857
  %859 = bitcast i32 %858 to float
  %860 = call float @dx.op.unary.f32(i32 6, float %849)  ; FAbs(value)
  %861 = call float @dx.op.unary.f32(i32 6, float %850)  ; FAbs(value)
  %862 = fmul fast float %841, 0x4000083560000000
  %863 = fadd fast float %862, 0xBFF0082560000000
  %864 = fmul fast float %863, %860
  %865 = fmul fast float %846, 0x4000083560000000
  %866 = fadd fast float %865, 0xBFF0082560000000
  %867 = fmul fast float %866, %861
  br label %868

; <label>:868                                     ; preds = %843, %795
  %869 = phi float [ %864, %843 ], [ %835, %795 ]
  %870 = phi float [ %867, %843 ], [ %836, %795 ]
  %871 = phi float [ %859, %843 ], [ %837, %795 ]
  %872 = fsub fast float %762, %869
  %873 = fsub fast float %763, %870
  %874 = call float @dx.op.unary.f32(i32 6, float %872)  ; FAbs(value)
  %875 = call float @dx.op.unary.f32(i32 6, float %873)  ; FAbs(value)
  %876 = fmul fast float %874, 5.000000e+00
  %877 = fmul fast float %875, 5.000000e+00
  %878 = fadd fast float %876, -4.000000e+00
  %879 = fadd fast float %877, -4.000000e+00
  %880 = call float @dx.op.unary.f32(i32 7, float %878)  ; Saturate(value)
  %881 = call float @dx.op.unary.f32(i32 7, float %879)  ; Saturate(value)
  %882 = call float @dx.op.dot2.f32(i32 54, float %880, float %881, float %880, float %881)  ; Dot2(ax,ay,bx,by)
  %883 = fsub fast float 1.000000e+00, %882
  %884 = call float @dx.op.unary.f32(i32 7, float %883)  ; Saturate(value)
  %885 = call float @dx.op.unary.f32(i32 6, float %762)  ; FAbs(value)
  %886 = call float @dx.op.unary.f32(i32 6, float %763)  ; FAbs(value)
  %887 = fmul fast float %885, 5.000000e+00
  %888 = fmul fast float %886, 5.000000e+00
  %889 = fadd fast float %887, -4.000000e+00
  %890 = fadd fast float %888, -4.000000e+00
  %891 = call float @dx.op.unary.f32(i32 7, float %889)  ; Saturate(value)
  %892 = call float @dx.op.unary.f32(i32 7, float %890)  ; Saturate(value)
  %893 = call float @dx.op.dot2.f32(i32 54, float %891, float %892, float %891, float %892)  ; Dot2(ax,ay,bx,by)
  %894 = fsub fast float 1.000000e+00, %893
  %895 = call float @dx.op.unary.f32(i32 7, float %894)  ; Saturate(value)
  %896 = call float @dx.op.binary.f32(i32 36, float %895, float %884)  ; FMin(a,b)
  %897 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 145)  ; CBufferLoadLegacy(handle,regIndex)
  %898 = extractvalue %dx.types.CBufRet.i32 %897, 0
  %899 = uitofp i32 %898 to float
  %900 = uitofp i32 %19 to float
  %901 = uitofp i32 %20 to float
  %902 = fadd fast float %900, 5.000000e-01
  %903 = fadd fast float %901, 5.000000e-01
  %904 = fmul fast float %899, 0x4040551EC0000000
  %905 = fmul fast float %899, 0x4027A147A0000000
  %906 = fadd fast float %902, %904
  %907 = fadd fast float %903, %905
  %908 = call float @dx.op.dot2.f32(i32 54, float %906, float %907, float 0x3FB12E2860000000, float 0x3F77E8B200000000)  ; Dot2(ax,ay,bx,by)
  %909 = call float @dx.op.unary.f32(i32 22, float %908)  ; Frc(value)
  %910 = fmul fast float %909, 0x404A7DD040000000
  %911 = call float @dx.op.unary.f32(i32 22, float %910)  ; Frc(value)
  %912 = fcmp fast olt float %896, %911
  br i1 %912, label %935, label %913

; <label>:913                                     ; preds = %868
  %914 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %915 = extractvalue %dx.types.CBufRet.f32 %914, 0
  %916 = extractvalue %dx.types.CBufRet.f32 %914, 1
  %917 = fmul fast float %915, %872
  %918 = fmul fast float %916, %873
  %919 = extractvalue %dx.types.CBufRet.f32 %914, 2
  %920 = extractvalue %dx.types.CBufRet.f32 %914, 3
  %921 = fadd fast float %917, %919
  %922 = fadd fast float %918, %920
  %923 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %924 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %923, %dx.types.Handle %839, float %921, float %922, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %925 = extractvalue %dx.types.ResRet.f32 %924, 0
  %926 = fsub fast float %871, %696
  %927 = fadd fast float %926, %925
  %928 = call float @dx.op.unary.f32(i32 6, float %927)  ; FAbs(value)
  %929 = extractvalue %dx.types.CBufRet.f32 %401, 2
  %930 = fmul fast float %911, 1.500000e+00
  %931 = fadd fast float %930, 5.000000e-01
  %932 = fmul fast float %929, %931
  %933 = fcmp fast olt float %928, %932
  %934 = zext i1 %933 to i32
  br label %935

; <label>:935                                     ; preds = %913, %868
  %936 = phi i32 [ %934, %913 ], [ 0, %868 ]
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %952, label %938

; <label>:938                                     ; preds = %935
  %939 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 32)  ; CBufferLoadLegacy(handle,regIndex)
  %940 = extractvalue %dx.types.CBufRet.i32 %939, 1
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %952, label %942

; <label>:942                                     ; preds = %938
  %943 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %944 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %943, %dx.types.Handle %839, float %753, float %754, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %945 = extractvalue %dx.types.ResRet.f32 %944, 3
  %946 = fmul fast float %945, 2.550000e+02
  %947 = fadd fast float %946, 5.000000e-01
  %948 = fptoui float %947 to i32
  %949 = and i32 %948, 11
  %950 = icmp eq i32 %949, 2
  %951 = select i1 %950, i32 0, i32 %936
  br label %952

; <label>:952                                     ; preds = %942, %938, %935, %749
  %953 = phi i32 [ %936, %938 ], [ 0, %935 ], [ %757, %749 ], [ %951, %942 ]
  %954 = icmp ne i32 %953, 0
  %955 = call float @dx.op.binary.f32(i32 35, float %794, float 0.000000e+00)  ; FMax(a,b)
  %956 = fmul fast float %955, 0x3FB99999A0000000
  %957 = fadd fast float %956, 5.000000e-01
  %958 = fptoui float %957 to i32
  %959 = call i32 @dx.op.binary.i32(i32 40, i32 %958, i32 1073741823)  ; UMin(a,b)
  %960 = select i1 %954, i32 1073741824, i32 0
  %961 = or i32 %959, %960
  %962 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<U32>
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %962, i32 %19, i32 %20, i32 undef, i32 %961, i32 %961, i32 %961, i32 %961, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %963

; <label>:963                                     ; preds = %952, %233, %115, %111, %83
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.unary.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!28}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{!5, !21, !23, !26}
!5 = !{!6, !8, !9, !11, !12, !13, !15, !16, !17, !18, !19, !20}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<unsigned int>"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !10}
!10 = !{i32 0, i32 5}
!11 = !{i32 3, %"class.Texture2D<vector<float, 2> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !7}
!12 = !{i32 4, %"class.Texture2D<unsigned int>"* undef, !"", i32 0, i32 4, i32 1, i32 2, i32 0, !10}
!13 = !{i32 5, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 5, i32 1, i32 12, i32 0, !14}
!14 = !{i32 1, i32 4}
!15 = !{i32 6, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 6, i32 1, i32 12, i32 0, !14}
!16 = !{i32 7, %"class.Texture2D<unsigned int>"* undef, !"", i32 0, i32 7, i32 1, i32 2, i32 0, !10}
!17 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 8, i32 1, i32 2, i32 0, !7}
!18 = !{i32 9, %"class.Texture2D<unsigned int>"* undef, !"", i32 0, i32 9, i32 1, i32 2, i32 0, !10}
!19 = !{i32 10, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 10, i32 1, i32 2, i32 0, !7}
!20 = !{i32 11, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 11, i32 1, i32 2, i32 0, !7}
!21 = !{!22}
!22 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !10}
!23 = !{!24, !25}
!24 = !{i32 0, %_RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 1336, null}
!25 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!26 = !{!27}
!27 = !{i32 0, %struct.SamplerState* undef, !"", i32 1000, i32 1, i32 1, i32 0, null}
!28 = !{void ()* @ScreenProbeTraceScreenTexturesCS, !"ScreenProbeTraceScreenTexturesCS", null, !4, !29}
!29 = !{i32 0, i64 16, i32 4, !30, i32 5, !31}
!30 = !{i32 8, i32 8, i32 1}
!31 = !{i32 0}
