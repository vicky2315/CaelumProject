;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: b155692d7ff8b0ea97e2cd32cf4b6a9f
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(8,8,1)
;
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct hostlayout._RootShaderParameters
;   {
;
;       float2 NumGroups;                             ; Offset:   80
;       float3 LightDirection;                        ; Offset:   96
;       float4 LightTranslatedPositionAndInvRadius;   ; Offset:  112
;       float LightSourceRadius;                      ; Offset:  128
;       float RayStartOffsetDepthScale;               ; Offset:  132
;       float3 TanLightAngleAndNormalThreshold;       ; Offset:  144
;       int4 ScissorRectMinAndSize;                   ; Offset:  160
;       uint NumSceneObjects;                         ; Offset:  192
;       uint NumSceneHeightfieldObjects;              ; Offset:  216
;       uint2 ShadowTileListGroupSize;                ; Offset:  344
;       uint ShadowMaxObjectsPerTile;                 ; Offset:  352
;       float3 DistanceFieldBrickSize;                ; Offset:  416
;       float3 DistanceFieldUniqueDataBrickSize;      ; Offset:  432
;       uint3 DistanceFieldBrickAtlasSizeInBricks;    ; Offset:  448
;       uint3 DistanceFieldBrickAtlasMask;            ; Offset:  464
;       uint3 DistanceFieldBrickAtlasSizeLog2;        ; Offset:  480
;       float3 DistanceFieldBrickAtlasTexelSize;      ; Offset:  496
;       float3 DistanceFieldBrickAtlasHalfTexelSize;  ; Offset:  512
;       float3 DistanceFieldBrickOffsetToAtlasUVScale;; Offset:  528
;       float3 DistanceFieldUniqueDataBrickSizeInAtlasTexels;; Offset:  544
;       row_major float4x4 TranslatedWorldToShadow;   ; Offset:  576
;       float TwoSidedMeshDistanceBiasScale;          ; Offset:  640
;       float MinDepth;                               ; Offset:  644
;       float MaxDepth;                               ; Offset:  648
;       uint DownsampleFactor;                        ; Offset:  652
;       float2 InvOutputBufferSize;                   ; Offset:  656
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:   664
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; Resource bind info for SceneDistanceFieldAssetData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for CulledObjectIndices
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for SceneObjectBounds
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for SceneObjectData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; D3DStaticBilinearWrappedSampler   sampler      NA          NA      S0   s2,space1000     1
; SceneTexturesStruct_PointClampSampler   sampler      NA          NA      S1             s0     1
; SceneTexturesStruct_SceneDepthTexture   texture     f32          2d      T0             t0     1
; SceneTexturesStruct_GBufferBTexture   texture     f32          2d      T1             t1     1
; SceneTexturesStruct_GBufferDTexture   texture     f32          2d      T2             t2     1
; DistanceFieldIndirection2Table    texture     f32         buf      T3             t3     1
; DistanceFieldBrickTexture         texture     f32          3d      T4             t4     1
; SceneDistanceFieldAssetData       texture  struct         r/o      T5             t5     1
; ObjectIndirectArguments           texture     u32         buf      T6             t6     1
; CulledObjectIndices               texture  struct         r/o      T7             t7     1
; SceneObjectBounds                 texture  struct         r/o      T8             t8     1
; SceneObjectData                   texture  struct         r/o      T9             t9     1
; RWShadowFactors                       UAV     f32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Buffer<vector<float, 4> >" = type { <4 x float> }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.RWTexture2D<vector<float, 2> >" = type { <2 x float> }
%hostlayout._RootShaderParameters = type { <2 x float>, <3 x float>, <4 x float>, float, float, <3 x float>, <4 x i32>, i32, i32, <2 x i32>, i32, <3 x float>, <3 x float>, <3 x i32>, <3 x i32>, <3 x i32>, <3 x float>, <3 x float>, <3 x float>, <3 x float>, [4 x <4 x float>], float, float, float, i32, <2 x float> }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%struct.SamplerState = type { i32 }

@"\01?IntersectingObjectIndices@@3PAIA" = external addrspace(3) global [2048 x i32], align 4
@"\01?IntegerTileMinZ@@3IA" = external addrspace(3) global i32, align 4
@"\01?IntegerTileMaxZ@@3IA" = external addrspace(3) global i32, align 4
@"\01?IntegerTileMinZ2@@3IA" = external addrspace(3) global i32, align 4
@"\01?IntegerTileMaxZ2@@3IA" = external addrspace(3) global i32, align 4
@"\01?TileNumObjects0@@3IA" = external addrspace(3) global i32, align 4
@"\01?TileNumObjects1@@3IA" = external addrspace(3) global i32, align 4

define void @DistanceFieldShadowingCS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 9, i32 9, i32 0, i8 0 }, i32 9, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 1000, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 664 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %19 = call i32 @dx.op.groupId.i32(i32 94, i32 1)  ; GroupId(component)
  %20 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %21 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %22 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %23 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %24 = shl i32 %23, 3
  %25 = add i32 %24, %22
  %26 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.i32 %26, 3
  %28 = mul i32 %27, %20
  %29 = mul i32 %27, %21
  %30 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.i32 %30, 0
  %32 = extractvalue %dx.types.CBufRet.i32 %30, 1
  %33 = add i32 %28, %31
  %34 = add i32 %29, %32
  %35 = uitofp i32 %33 to float
  %36 = uitofp i32 %34 to float
  %37 = fadd fast float %35, 5.000000e-01
  %38 = fadd fast float %36, 5.000000e-01
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 3
  %42 = fmul fast float %37, %40
  %43 = fmul fast float %38, %41
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 72)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 2
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 3
  %47 = fsub fast float %42, %46
  %48 = fsub fast float %43, %45
  %49 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %50 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %51 = fdiv fast float %47, %49
  %52 = fdiv fast float %48, %50
  %53 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %54 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %55 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %53, %dx.types.Handle %54, float %42, float %43, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %56 = extractvalue %dx.types.ResRet.f32 %55, 0
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 71)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = fmul fast float %58, %56
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %61 = fadd fast float %59, %60
  %62 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %63 = fmul fast float %62, %56
  %64 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %65 = fsub fast float %63, %64
  %66 = fdiv fast float 1.000000e+00, %65
  %67 = fadd fast float %61, %66
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 56)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %73 = extractvalue %dx.types.CBufRet.f32 %72, 0
  %74 = extractvalue %dx.types.CBufRet.f32 %72, 1
  %75 = extractvalue %dx.types.CBufRet.f32 %72, 2
  %76 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 58)  ; CBufferLoadLegacy(handle,regIndex)
  %77 = extractvalue %dx.types.CBufRet.f32 %76, 0
  %78 = extractvalue %dx.types.CBufRet.f32 %76, 1
  %79 = extractvalue %dx.types.CBufRet.f32 %76, 2
  %80 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 59)  ; CBufferLoadLegacy(handle,regIndex)
  %81 = extractvalue %dx.types.CBufRet.f32 %80, 0
  %82 = extractvalue %dx.types.CBufRet.f32 %80, 1
  %83 = extractvalue %dx.types.CBufRet.f32 %80, 2
  %84 = fmul fast float %67, %51
  %85 = fmul fast float %67, %52
  %86 = fmul fast float %84, %69
  %87 = call float @dx.op.tertiary.f32(i32 46, float %85, float %73, float %86)  ; FMad(a,b,c)
  %88 = call float @dx.op.tertiary.f32(i32 46, float %67, float %77, float %87)  ; FMad(a,b,c)
  %89 = fadd fast float %88, %81
  %90 = fmul fast float %84, %70
  %91 = call float @dx.op.tertiary.f32(i32 46, float %85, float %74, float %90)  ; FMad(a,b,c)
  %92 = call float @dx.op.tertiary.f32(i32 46, float %67, float %78, float %91)  ; FMad(a,b,c)
  %93 = fadd fast float %92, %82
  %94 = fmul fast float %84, %71
  %95 = call float @dx.op.tertiary.f32(i32 46, float %85, float %75, float %94)  ; FMad(a,b,c)
  %96 = call float @dx.op.tertiary.f32(i32 46, float %67, float %79, float %95)  ; FMad(a,b,c)
  %97 = fadd fast float %96, %83
  %98 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %99 = extractvalue %dx.types.CBufRet.f32 %98, 2
  %100 = icmp eq i32 %25, 0
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %0
  store i32 2139095039, i32 addrspace(3)* @"\01?IntegerTileMinZ@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?IntegerTileMaxZ@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 2139095039, i32 addrspace(3)* @"\01?IntegerTileMinZ2@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?IntegerTileMaxZ2@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?TileNumObjects0@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?TileNumObjects1@@3IA", align 4, !tbaa !32, !noalias !36
  br label %102

; <label>:102                                     ; preds = %101, %0
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %103 = fcmp fast ogt float %67, 0.000000e+00
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %102
  %105 = bitcast float %67 to i32
  %106 = atomicrmw umin i32 addrspace(3)* @"\01?IntegerTileMinZ@@3IA", i32 %105 seq_cst
  %107 = atomicrmw umax i32 addrspace(3)* @"\01?IntegerTileMaxZ@@3IA", i32 %105 seq_cst
  br label %108

; <label>:108                                     ; preds = %104, %102
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %109 = load i32, i32 addrspace(3)* @"\01?IntegerTileMinZ@@3IA", align 4, !tbaa !32, !noalias !36
  %110 = bitcast i32 %109 to float
  %111 = load i32, i32 addrspace(3)* @"\01?IntegerTileMaxZ@@3IA", align 4, !tbaa !32, !noalias !36
  %112 = bitcast i32 %111 to float
  %113 = fadd fast float %112, %110
  %114 = fmul fast float %113, 5.000000e-01
  %115 = fcmp fast oge float %67, %114
  %116 = and i1 %103, %115
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %108
  %118 = bitcast float %67 to i32
  %119 = atomicrmw umin i32 addrspace(3)* @"\01?IntegerTileMinZ2@@3IA", i32 %118 seq_cst
  br label %120

; <label>:120                                     ; preds = %117, %108
  %121 = fcmp fast ole float %67, %114
  %122 = and i1 %103, %121
  br i1 %122, label %123, label %126

; <label>:123                                     ; preds = %120
  %124 = bitcast float %67 to i32
  %125 = atomicrmw umax i32 addrspace(3)* @"\01?IntegerTileMaxZ2@@3IA", i32 %124 seq_cst
  br label %126

; <label>:126                                     ; preds = %123, %120
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %127 = load i32, i32 addrspace(3)* @"\01?IntegerTileMinZ2@@3IA", align 4, !tbaa !32, !noalias !36
  %128 = bitcast i32 %127 to float
  %129 = load i32, i32 addrspace(3)* @"\01?IntegerTileMaxZ2@@3IA", align 4, !tbaa !32, !noalias !36
  %130 = bitcast i32 %129 to float
  %131 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %132 = extractvalue %dx.types.CBufRet.f32 %131, 0
  %133 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 41)  ; CBufferLoadLegacy(handle,regIndex)
  %134 = extractvalue %dx.types.CBufRet.f32 %133, 1
  %135 = fmul fast float %132, 2.000000e+00
  %136 = fmul fast float %134, 2.000000e+00
  %137 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %138 = extractvalue %dx.types.CBufRet.i32 %137, 2
  %139 = extractvalue %dx.types.CBufRet.i32 %137, 3
  %140 = sitofp i32 %138 to float
  %141 = sitofp i32 %139 to float
  %142 = fmul fast float %135, %140
  %143 = fmul fast float %136, %141
  %144 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 129)  ; CBufferLoadLegacy(handle,regIndex)
  %145 = extractvalue %dx.types.CBufRet.f32 %144, 0
  %146 = extractvalue %dx.types.CBufRet.f32 %144, 1
  %147 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %148 = extractvalue %dx.types.CBufRet.f32 %147, 0
  %149 = extractvalue %dx.types.CBufRet.f32 %147, 1
  %150 = fmul fast float %148, %145
  %151 = fmul fast float %149, %146
  %152 = fdiv fast float %142, %150
  %153 = fdiv fast float %143, %151
  %154 = extractvalue %dx.types.CBufRet.i32 %137, 0
  %155 = extractvalue %dx.types.CBufRet.i32 %137, 1
  %156 = sitofp i32 %154 to float
  %157 = sitofp i32 %155 to float
  %158 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 128)  ; CBufferLoadLegacy(handle,regIndex)
  %159 = extractvalue %dx.types.CBufRet.f32 %158, 0
  %160 = extractvalue %dx.types.CBufRet.f32 %158, 1
  %161 = fsub fast float %156, %159
  %162 = fsub fast float %157, %160
  %163 = fmul fast float %135, %161
  %164 = fmul fast float %136, %162
  %165 = extractvalue %dx.types.CBufRet.f32 %144, 2
  %166 = extractvalue %dx.types.CBufRet.f32 %144, 3
  %167 = fmul fast float %163, %165
  %168 = fmul fast float %164, %166
  %169 = fsub fast float %167, %132
  %170 = fsub fast float %168, %134
  %171 = uitofp i32 %18 to float
  %172 = uitofp i32 %19 to float
  %173 = fmul fast float %152, %171
  %174 = fmul fast float %153, %172
  %175 = fadd fast float %169, %173
  %176 = fadd fast float %174, %170
  %177 = fsub fast float -0.000000e+00, %176
  %178 = add i32 %18, 1
  %179 = add i32 %19, 1
  %180 = uitofp i32 %178 to float
  %181 = uitofp i32 %179 to float
  %182 = fmul fast float %152, %180
  %183 = fmul fast float %153, %181
  %184 = fadd fast float %169, %182
  %185 = fadd fast float %183, %170
  %186 = fsub fast float -0.000000e+00, %185
  %187 = fmul fast float %175, %130
  %188 = fmul fast float %130, %177
  %189 = fmul fast float %175, %110
  %190 = fmul fast float %110, %177
  %191 = call float @dx.op.binary.f32(i32 36, float %189, float %187)  ; FMin(a,b)
  %192 = call float @dx.op.binary.f32(i32 36, float %190, float %188)  ; FMin(a,b)
  %193 = fmul fast float %184, %130
  %194 = fmul fast float %130, %186
  %195 = fmul fast float %184, %110
  %196 = fmul fast float %110, %186
  %197 = call float @dx.op.binary.f32(i32 35, float %195, float %193)  ; FMax(a,b)
  %198 = call float @dx.op.binary.f32(i32 35, float %196, float %194)  ; FMax(a,b)
  %199 = fmul fast float %175, %112
  %200 = fmul fast float %112, %177
  %201 = fmul fast float %175, %128
  %202 = fmul fast float %128, %177
  %203 = call float @dx.op.binary.f32(i32 36, float %201, float %199)  ; FMin(a,b)
  %204 = call float @dx.op.binary.f32(i32 36, float %202, float %200)  ; FMin(a,b)
  %205 = fmul fast float %184, %112
  %206 = fmul fast float %112, %186
  %207 = fmul fast float %184, %128
  %208 = fmul fast float %128, %186
  %209 = call float @dx.op.binary.f32(i32 35, float %207, float %205)  ; FMax(a,b)
  %210 = call float @dx.op.binary.f32(i32 35, float %208, float %206)  ; FMax(a,b)
  %211 = fadd fast float %197, %191
  %212 = fadd fast float %198, %192
  %213 = fadd fast float %130, %110
  %214 = fmul fast float %211, 5.000000e-01
  %215 = fmul fast float %212, 5.000000e-01
  %216 = fmul fast float %213, 5.000000e-01
  %217 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %218 = extractvalue %dx.types.CBufRet.f32 %217, 0
  %219 = extractvalue %dx.types.CBufRet.f32 %217, 1
  %220 = extractvalue %dx.types.CBufRet.f32 %217, 2
  %221 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %222 = extractvalue %dx.types.CBufRet.f32 %221, 0
  %223 = extractvalue %dx.types.CBufRet.f32 %221, 1
  %224 = extractvalue %dx.types.CBufRet.f32 %221, 2
  %225 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %226 = extractvalue %dx.types.CBufRet.f32 %225, 0
  %227 = extractvalue %dx.types.CBufRet.f32 %225, 1
  %228 = extractvalue %dx.types.CBufRet.f32 %225, 2
  %229 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %230 = extractvalue %dx.types.CBufRet.f32 %229, 0
  %231 = extractvalue %dx.types.CBufRet.f32 %229, 1
  %232 = extractvalue %dx.types.CBufRet.f32 %229, 2
  %233 = fmul fast float %218, %214
  %234 = call float @dx.op.tertiary.f32(i32 46, float %215, float %222, float %233)  ; FMad(a,b,c)
  %235 = call float @dx.op.tertiary.f32(i32 46, float %216, float %226, float %234)  ; FMad(a,b,c)
  %236 = fadd fast float %235, %230
  %237 = fmul fast float %219, %214
  %238 = call float @dx.op.tertiary.f32(i32 46, float %215, float %223, float %237)  ; FMad(a,b,c)
  %239 = call float @dx.op.tertiary.f32(i32 46, float %216, float %227, float %238)  ; FMad(a,b,c)
  %240 = fadd fast float %239, %231
  %241 = fmul fast float %220, %214
  %242 = call float @dx.op.tertiary.f32(i32 46, float %215, float %224, float %241)  ; FMad(a,b,c)
  %243 = call float @dx.op.tertiary.f32(i32 46, float %216, float %228, float %242)  ; FMad(a,b,c)
  %244 = fadd fast float %243, %232
  %245 = fsub fast float %214, %197
  %246 = fsub fast float %215, %198
  %247 = fsub fast float %216, %130
  %248 = fmul fast float %245, %245
  %249 = fmul fast float %246, %246
  %250 = fmul fast float %247, %247
  %251 = fadd fast float %248, %250
  %252 = fadd fast float %251, %249
  %253 = call float @dx.op.unary.f32(i32 24, float %252)  ; Sqrt(value)
  %254 = fadd fast float %209, %203
  %255 = fadd fast float %210, %204
  %256 = fadd fast float %128, %112
  %257 = fmul fast float %254, 5.000000e-01
  %258 = fmul fast float %255, 5.000000e-01
  %259 = fmul fast float %256, 5.000000e-01
  %260 = fmul fast float %218, %257
  %261 = call float @dx.op.tertiary.f32(i32 46, float %258, float %222, float %260)  ; FMad(a,b,c)
  %262 = call float @dx.op.tertiary.f32(i32 46, float %259, float %226, float %261)  ; FMad(a,b,c)
  %263 = fadd fast float %262, %230
  %264 = fmul fast float %219, %257
  %265 = call float @dx.op.tertiary.f32(i32 46, float %258, float %223, float %264)  ; FMad(a,b,c)
  %266 = call float @dx.op.tertiary.f32(i32 46, float %259, float %227, float %265)  ; FMad(a,b,c)
  %267 = fadd fast float %266, %231
  %268 = fmul fast float %220, %257
  %269 = call float @dx.op.tertiary.f32(i32 46, float %258, float %224, float %268)  ; FMad(a,b,c)
  %270 = call float @dx.op.tertiary.f32(i32 46, float %259, float %228, float %269)  ; FMad(a,b,c)
  %271 = fadd fast float %270, %232
  %272 = fsub fast float %257, %209
  %273 = fsub fast float %258, %210
  %274 = fsub fast float %259, %112
  %275 = fmul fast float %272, %272
  %276 = fmul fast float %273, %273
  %277 = fmul fast float %274, %274
  %278 = fadd fast float %275, %277
  %279 = fadd fast float %278, %276
  %280 = call float @dx.op.unary.f32(i32 24, float %279)  ; Sqrt(value)
  %281 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %282 = extractvalue %dx.types.CBufRet.f32 %281, 0
  %283 = extractvalue %dx.types.CBufRet.f32 %281, 1
  %284 = extractvalue %dx.types.CBufRet.f32 %281, 2
  br i1 %103, label %285, label %392, !dx.controlflow.hints !41

; <label>:285                                     ; preds = %126
  %286 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %287 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %286, i32 1, i32 undef)  ; BufferLoad(srv,index,wot)
  %288 = extractvalue %dx.types.ResRet.i32 %287, 0
  %289 = icmp ult i32 %25, %288
  br i1 %289, label %290, label %392

; <label>:290                                     ; preds = %285
  br label %291

; <label>:291                                     ; preds = %388, %290
  %292 = phi i32 [ %389, %388 ], [ %25, %290 ]
  %293 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %294 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %293, i32 %292, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %295 = extractvalue %dx.types.ResRet.i32 %294, 0
  %296 = mul i32 %295, 3
  %297 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %298 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %297, i32 %296, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %299 = extractvalue %dx.types.ResRet.f32 %298, 0
  %300 = extractvalue %dx.types.ResRet.f32 %298, 1
  %301 = extractvalue %dx.types.ResRet.f32 %298, 2
  %302 = add i32 %296, 1
  %303 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %297, i32 %302, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %304 = extractvalue %dx.types.ResRet.f32 %303, 0
  %305 = extractvalue %dx.types.ResRet.f32 %303, 1
  %306 = extractvalue %dx.types.ResRet.f32 %303, 2
  %307 = extractvalue %dx.types.ResRet.f32 %303, 3
  %308 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %309 = extractvalue %dx.types.CBufRet.f32 %308, 0
  %310 = extractvalue %dx.types.CBufRet.f32 %308, 1
  %311 = extractvalue %dx.types.CBufRet.f32 %308, 2
  %312 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %313 = extractvalue %dx.types.CBufRet.f32 %312, 0
  %314 = extractvalue %dx.types.CBufRet.f32 %312, 1
  %315 = extractvalue %dx.types.CBufRet.f32 %312, 2
  %316 = fadd fast float %313, %304
  %317 = fadd fast float %314, %305
  %318 = fadd fast float %315, %306
  %319 = fsub fast float %299, %309
  %320 = fsub fast float %300, %310
  %321 = fsub fast float %301, %311
  %322 = fmul fast float %319, 2.097152e+06
  %323 = fmul fast float %320, 2.097152e+06
  %324 = fmul fast float %321, 2.097152e+06
  %325 = fadd fast float %316, %322
  %326 = fadd fast float %317, %323
  %327 = fadd fast float %318, %324
  %328 = fadd fast float %307, %253
  %329 = fsub fast float %325, %236
  %330 = fsub fast float %326, %240
  %331 = fsub fast float %327, %244
  %332 = call float @dx.op.dot3.f32(i32 55, float %329, float %330, float %331, float %282, float %283, float %284)  ; Dot3(ax,ay,az,bx,by,bz)
  %333 = fmul fast float %332, %282
  %334 = fmul fast float %332, %283
  %335 = fmul fast float %332, %284
  %336 = fadd fast float %333, %236
  %337 = fadd fast float %334, %240
  %338 = fadd fast float %335, %244
  %339 = fsub fast float %336, %325
  %340 = fsub fast float %337, %326
  %341 = fsub fast float %338, %327
  %342 = call float @dx.op.dot3.f32(i32 55, float %339, float %340, float %341, float %339, float %340, float %341)  ; Dot3(ax,ay,az,bx,by,bz)
  %343 = fmul fast float %328, %328
  %344 = fcmp fast ole float %342, %343
  %345 = fsub fast float -0.000000e+00, %328
  %346 = fcmp fast ogt float %332, %345
  %347 = and i1 %346, %344
  br i1 %347, label %348, label %351

; <label>:348                                     ; preds = %291
  %349 = fsub fast float %332, %328
  %350 = fcmp fast olt float %349, %99
  br label %351

; <label>:351                                     ; preds = %348, %291
  %352 = phi i1 [ false, %291 ], [ %350, %348 ]
  br i1 %352, label %353, label %357, !dx.controlflow.hints !42

; <label>:353                                     ; preds = %351
  %354 = atomicrmw add i32 addrspace(3)* @"\01?TileNumObjects0@@3IA", i32 1 seq_cst
  %355 = call i32 @dx.op.binary.i32(i32 40, i32 %354, i32 1023)  ; UMin(a,b)
  %356 = getelementptr [2048 x i32], [2048 x i32] addrspace(3)* @"\01?IntersectingObjectIndices@@3PAIA", i32 0, i32 %355
  store i32 %295, i32 addrspace(3)* %356, align 4, !tbaa !32, !noalias !36
  br label %357

; <label>:357                                     ; preds = %353, %351
  %358 = fadd fast float %307, %280
  %359 = fsub fast float %325, %263
  %360 = fsub fast float %326, %267
  %361 = fsub fast float %327, %271
  %362 = call float @dx.op.dot3.f32(i32 55, float %359, float %360, float %361, float %282, float %283, float %284)  ; Dot3(ax,ay,az,bx,by,bz)
  %363 = fmul fast float %362, %282
  %364 = fmul fast float %362, %283
  %365 = fmul fast float %362, %284
  %366 = fsub fast float %263, %325
  %367 = fadd fast float %366, %363
  %368 = fsub fast float %267, %326
  %369 = fadd fast float %368, %364
  %370 = fsub fast float %271, %327
  %371 = fadd fast float %370, %365
  %372 = call float @dx.op.dot3.f32(i32 55, float %367, float %369, float %371, float %367, float %369, float %371)  ; Dot3(ax,ay,az,bx,by,bz)
  %373 = fmul fast float %358, %358
  %374 = fcmp fast ole float %372, %373
  %375 = fsub fast float -0.000000e+00, %358
  %376 = fcmp fast ogt float %362, %375
  %377 = and i1 %376, %374
  br i1 %377, label %378, label %381

; <label>:378                                     ; preds = %357
  %379 = fsub fast float %362, %358
  %380 = fcmp fast olt float %379, %99
  br label %381

; <label>:381                                     ; preds = %378, %357
  %382 = phi i1 [ false, %357 ], [ %380, %378 ]
  br i1 %382, label %383, label %388, !dx.controlflow.hints !43

; <label>:383                                     ; preds = %381
  %384 = atomicrmw add i32 addrspace(3)* @"\01?TileNumObjects1@@3IA", i32 1 seq_cst
  %385 = call i32 @dx.op.binary.i32(i32 40, i32 %384, i32 1023)  ; UMin(a,b)
  %386 = add i32 %385, 1024
  %387 = getelementptr [2048 x i32], [2048 x i32] addrspace(3)* @"\01?IntersectingObjectIndices@@3PAIA", i32 0, i32 %386
  store i32 %295, i32 addrspace(3)* %387, align 4, !tbaa !32, !noalias !36
  br label %388

; <label>:388                                     ; preds = %383, %381
  %389 = add i32 %292, 64
  %390 = icmp ult i32 %389, %288
  br i1 %390, label %291, label %391, !llvm.loop !44

; <label>:391                                     ; preds = %388
  br label %392

; <label>:392                                     ; preds = %391, %285, %126
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %393 = fcmp fast ogt float %67, %130
  %394 = zext i1 %393 to i32
  %395 = load i32, i32 addrspace(3)* @"\01?TileNumObjects0@@3IA", align 4, !tbaa !32, !noalias !36
  %396 = load i32, i32 addrspace(3)* @"\01?TileNumObjects1@@3IA", align 4, !tbaa !32, !noalias !36
  %397 = select i1 %393, i32 %396, i32 %395
  %398 = call i32 @dx.op.binary.i32(i32 40, i32 %397, i32 1024)  ; UMin(a,b)
  br i1 %103, label %399, label %803, !dx.controlflow.hints !46

; <label>:399                                     ; preds = %392
  %400 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %401 = extractvalue %dx.types.CBufRet.f32 %400, 1
  %402 = fmul fast float %401, %67
  %403 = fadd fast float %402, 2.000000e+00
  %404 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %405 = extractvalue %dx.types.CBufRet.f32 %404, 0
  %406 = extractvalue %dx.types.CBufRet.f32 %404, 1
  %407 = extractvalue %dx.types.CBufRet.f32 %404, 2
  %408 = fmul fast float %403, %405
  %409 = fmul fast float %403, %406
  %410 = fmul fast float %403, %407
  %411 = fadd fast float %408, %89
  %412 = fadd fast float %409, %93
  %413 = fadd fast float %410, %97
  %414 = fmul fast float %405, %99
  %415 = fmul fast float %406, %99
  %416 = fmul fast float %407, %99
  %417 = fadd fast float %414, %89
  %418 = fadd fast float %415, %93
  %419 = fadd fast float %416, %97
  %420 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %421 = extractvalue %dx.types.CBufRet.f32 %420, 0
  %422 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %423 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %424 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %422, %dx.types.Handle %423, float %42, float %43, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %425 = extractvalue %dx.types.ResRet.f32 %424, 3
  %426 = fmul fast float %425, 2.550000e+02
  %427 = fadd fast float %426, 5.000000e-01
  %428 = fptoui float %427 to i32
  %429 = and i32 %428, 15
  %430 = and i32 %428, 14
  %431 = icmp eq i32 %430, 2
  %432 = add nsw i32 %429, -5
  %433 = icmp ult i32 %432, 3
  %434 = or i1 %431, %433
  %435 = icmp eq i32 %429, 9
  %436 = or i1 %435, %434
  br i1 %436, label %437, label %452, !dx.controlflow.hints !47

; <label>:437                                     ; preds = %399
  %438 = icmp eq i32 %430, 8
  %439 = and i32 %428, 12
  %440 = icmp eq i32 %439, 4
  %441 = or i1 %440, %431
  %442 = or i1 %438, %441
  %443 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %444 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %443, %dx.types.Handle %423, float %42, float %43, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %445 = extractvalue %dx.types.ResRet.f32 %444, 3
  %446 = select i1 %442, float %445, float 0.000000e+00
  %447 = call float @dx.op.binary.f32(i32 36, float %446, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %448 = fsub fast float 1.000000e+00, %447
  %449 = call float @dx.op.unary.f32(i32 23, float %448)  ; Log(value)
  %450 = fmul fast float %449, 0xBFA1BE9C00000000
  %451 = fmul float %450, 0xBFF7154760000000
  br label %452

; <label>:452                                     ; preds = %437, %399
  %453 = phi float [ %451, %437 ], [ -0.000000e+00, %399 ]
  %454 = phi i1 [ true, %437 ], [ false, %399 ]
  %455 = icmp eq i32 %398, 0
  br i1 %455, label %803, label %456

; <label>:456                                     ; preds = %452
  br label %457

; <label>:457                                     ; preds = %798, %456
  %458 = phi float [ %796, %798 ], [ 1.000000e+00, %456 ]
  %459 = phi i32 [ %799, %798 ], [ 0, %456 ]
  %460 = shl nuw nsw i32 %394, 10
  %461 = add i32 %459, %460
  %462 = getelementptr [2048 x i32], [2048 x i32] addrspace(3)* @"\01?IntersectingObjectIndices@@3PAIA", i32 0, i32 %461
  %463 = load i32, i32 addrspace(3)* %462, align 4, !tbaa !32
  %464 = mul i32 %463, 10
  %465 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %466 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %464, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %467 = extractvalue %dx.types.ResRet.f32 %466, 0
  %468 = extractvalue %dx.types.ResRet.f32 %466, 1
  %469 = extractvalue %dx.types.ResRet.f32 %466, 2
  %470 = or i32 %464, 1
  %471 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %470, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %472 = extractvalue %dx.types.ResRet.f32 %471, 0
  %473 = extractvalue %dx.types.ResRet.f32 %471, 1
  %474 = extractvalue %dx.types.ResRet.f32 %471, 2
  %475 = extractvalue %dx.types.ResRet.f32 %471, 3
  %476 = add i32 %464, 2
  %477 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %476, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %478 = extractvalue %dx.types.ResRet.f32 %477, 0
  %479 = extractvalue %dx.types.ResRet.f32 %477, 1
  %480 = extractvalue %dx.types.ResRet.f32 %477, 2
  %481 = extractvalue %dx.types.ResRet.f32 %477, 3
  %482 = add i32 %464, 3
  %483 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %482, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %484 = extractvalue %dx.types.ResRet.f32 %483, 0
  %485 = extractvalue %dx.types.ResRet.f32 %483, 1
  %486 = extractvalue %dx.types.ResRet.f32 %483, 2
  %487 = extractvalue %dx.types.ResRet.f32 %483, 3
  %488 = add i32 %464, 4
  %489 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %488, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %490 = extractvalue %dx.types.ResRet.f32 %489, 0
  %491 = extractvalue %dx.types.ResRet.f32 %489, 1
  %492 = extractvalue %dx.types.ResRet.f32 %489, 2
  %493 = extractvalue %dx.types.ResRet.f32 %489, 3
  %494 = fcmp fast olt float %493, 0.000000e+00
  %495 = add i32 %464, 5
  %496 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %495, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %497 = extractvalue %dx.types.ResRet.f32 %496, 2
  %498 = add i32 %464, 9
  %499 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %465, i32 %498, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %500 = extractvalue %dx.types.ResRet.f32 %499, 0
  %501 = extractvalue %dx.types.ResRet.f32 %499, 1
  %502 = extractvalue %dx.types.ResRet.f32 %499, 2
  %503 = call float @dx.op.binary.f32(i32 36, float %501, float %502)  ; FMin(a,b)
  %504 = call float @dx.op.binary.f32(i32 36, float %500, float %503)  ; FMin(a,b)
  %505 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %506 = extractvalue %dx.types.CBufRet.f32 %505, 0
  %507 = extractvalue %dx.types.CBufRet.f32 %505, 1
  %508 = extractvalue %dx.types.CBufRet.f32 %505, 2
  %509 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %510 = extractvalue %dx.types.CBufRet.f32 %509, 0
  %511 = extractvalue %dx.types.CBufRet.f32 %509, 1
  %512 = extractvalue %dx.types.CBufRet.f32 %509, 2
  %513 = fsub fast float %506, %467
  %514 = fsub fast float %507, %468
  %515 = fsub fast float %508, %469
  %516 = fmul fast float %513, 2.097152e+06
  %517 = fmul fast float %514, 2.097152e+06
  %518 = fmul fast float %515, 2.097152e+06
  %519 = fsub fast float %516, %510
  %520 = fsub fast float %517, %511
  %521 = fsub fast float %518, %512
  %522 = fmul fast float %519, %472
  %523 = call float @dx.op.tertiary.f32(i32 46, float %520, float %473, float %522)  ; FMad(a,b,c)
  %524 = call float @dx.op.tertiary.f32(i32 46, float %521, float %474, float %523)  ; FMad(a,b,c)
  %525 = fadd fast float %524, %475
  %526 = fmul fast float %519, %478
  %527 = call float @dx.op.tertiary.f32(i32 46, float %520, float %479, float %526)  ; FMad(a,b,c)
  %528 = call float @dx.op.tertiary.f32(i32 46, float %521, float %480, float %527)  ; FMad(a,b,c)
  %529 = fadd fast float %528, %481
  %530 = fmul fast float %519, %484
  %531 = call float @dx.op.tertiary.f32(i32 46, float %520, float %485, float %530)  ; FMad(a,b,c)
  %532 = call float @dx.op.tertiary.f32(i32 46, float %521, float %486, float %531)  ; FMad(a,b,c)
  %533 = fadd fast float %532, %487
  %534 = fmul fast float %472, %411
  %535 = call float @dx.op.tertiary.f32(i32 46, float %412, float %473, float %534)  ; FMad(a,b,c)
  %536 = call float @dx.op.tertiary.f32(i32 46, float %413, float %474, float %535)  ; FMad(a,b,c)
  %537 = fadd fast float %525, %536
  %538 = fsub fast float -0.000000e+00, %537
  %539 = fmul fast float %478, %411
  %540 = call float @dx.op.tertiary.f32(i32 46, float %412, float %479, float %539)  ; FMad(a,b,c)
  %541 = call float @dx.op.tertiary.f32(i32 46, float %413, float %480, float %540)  ; FMad(a,b,c)
  %542 = fadd fast float %529, %541
  %543 = fsub fast float -0.000000e+00, %542
  %544 = fmul fast float %484, %411
  %545 = call float @dx.op.tertiary.f32(i32 46, float %412, float %485, float %544)  ; FMad(a,b,c)
  %546 = call float @dx.op.tertiary.f32(i32 46, float %413, float %486, float %545)  ; FMad(a,b,c)
  %547 = fadd fast float %533, %546
  %548 = fsub fast float -0.000000e+00, %547
  %549 = fmul fast float %472, %417
  %550 = call float @dx.op.tertiary.f32(i32 46, float %418, float %473, float %549)  ; FMad(a,b,c)
  %551 = call float @dx.op.tertiary.f32(i32 46, float %419, float %474, float %550)  ; FMad(a,b,c)
  %552 = fmul fast float %478, %417
  %553 = call float @dx.op.tertiary.f32(i32 46, float %418, float %479, float %552)  ; FMad(a,b,c)
  %554 = call float @dx.op.tertiary.f32(i32 46, float %419, float %480, float %553)  ; FMad(a,b,c)
  %555 = fmul fast float %484, %417
  %556 = call float @dx.op.tertiary.f32(i32 46, float %418, float %485, float %555)  ; FMad(a,b,c)
  %557 = call float @dx.op.tertiary.f32(i32 46, float %419, float %486, float %556)  ; FMad(a,b,c)
  %558 = fsub fast float %551, %536
  %559 = fsub fast float %554, %541
  %560 = fsub fast float %557, %546
  %561 = fmul fast float %558, %558
  %562 = fmul fast float %559, %559
  %563 = fadd fast float %562, %561
  %564 = fmul fast float %560, %560
  %565 = fadd fast float %563, %564
  %566 = call float @dx.op.unary.f32(i32 24, float %565)  ; Sqrt(value)
  %567 = fdiv fast float %558, %566
  %568 = fdiv fast float %559, %566
  %569 = fdiv fast float %560, %566
  %570 = call float @dx.op.binary.f32(i32 35, float %501, float %502)  ; FMax(a,b)
  %571 = call float @dx.op.binary.f32(i32 35, float %500, float %570)  ; FMax(a,b)
  %572 = fdiv fast float 1.000000e+00, %571
  %573 = fmul fast float %572, 0x3FD99999A0000000
  %574 = fmul fast float %572, 1.000000e+02
  %575 = fmul fast float %572, %497
  %576 = call float @dx.op.binary.f32(i32 35, float %575, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %577 = fdiv fast float 1.000000e+00, %576
  %578 = call float @dx.op.dot3.f32(i32 55, float %538, float %543, float %548, float %567, float %568, float %569)  ; Dot3(ax,ay,az,bx,by,bz)
  %579 = call float @dx.op.binary.f32(i32 35, float %578, float 0.000000e+00)  ; FMax(a,b)
  %580 = fmul fast float %579, %421
  %581 = call float @dx.op.binary.f32(i32 36, float %580, float %574)  ; FMin(a,b)
  %582 = fsub fast float -0.000000e+00, %490
  %583 = fsub fast float -0.000000e+00, %491
  %584 = fsub fast float -0.000000e+00, %492
  %585 = fdiv fast float 1.000000e+00, %558
  %586 = fdiv fast float 1.000000e+00, %559
  %587 = fdiv fast float 1.000000e+00, %560
  %588 = fsub fast float %582, %537
  %589 = fsub fast float %588, %581
  %590 = fsub fast float %583, %542
  %591 = fsub fast float %590, %581
  %592 = fsub fast float %584, %547
  %593 = fsub fast float %592, %581
  %594 = fmul fast float %589, %585
  %595 = fmul fast float %586, %591
  %596 = fmul fast float %587, %593
  %597 = fsub fast float %490, %537
  %598 = fadd fast float %597, %581
  %599 = fsub fast float %491, %542
  %600 = fadd fast float %599, %581
  %601 = fsub fast float %492, %547
  %602 = fadd fast float %601, %581
  %603 = fmul fast float %598, %585
  %604 = fmul fast float %586, %600
  %605 = fmul fast float %587, %602
  %606 = call float @dx.op.binary.f32(i32 36, float %594, float %603)  ; FMin(a,b)
  %607 = call float @dx.op.binary.f32(i32 36, float %595, float %604)  ; FMin(a,b)
  %608 = call float @dx.op.binary.f32(i32 36, float %596, float %605)  ; FMin(a,b)
  %609 = call float @dx.op.binary.f32(i32 35, float %594, float %603)  ; FMax(a,b)
  %610 = call float @dx.op.binary.f32(i32 35, float %595, float %604)  ; FMax(a,b)
  %611 = call float @dx.op.binary.f32(i32 35, float %596, float %605)  ; FMax(a,b)
  %612 = call float @dx.op.binary.f32(i32 35, float %607, float %608)  ; FMax(a,b)
  %613 = call float @dx.op.binary.f32(i32 35, float %606, float %612)  ; FMax(a,b)
  %614 = call float @dx.op.binary.f32(i32 36, float %610, float %611)  ; FMin(a,b)
  %615 = call float @dx.op.binary.f32(i32 36, float %609, float %614)  ; FMin(a,b)
  %616 = call float @dx.op.unary.f32(i32 7, float %613)  ; Saturate(value)
  %617 = call float @dx.op.unary.f32(i32 7, float %615)  ; Saturate(value)
  %618 = fcmp fast olt float %616, %617
  br i1 %618, label %619, label %795, !dx.controlflow.hints !48

; <label>:619                                     ; preds = %457
  %620 = extractvalue %dx.types.ResRet.f32 %499, 3
  %621 = bitcast float %620 to i32
  %622 = call float @dx.op.unary.f32(i32 6, float %493)  ; FAbs(value)
  %623 = mul i32 %621, 9
  %624 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %625 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %624, i32 %623, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %626 = extractvalue %dx.types.ResRet.f32 %625, 0
  %627 = bitcast float %626 to i32
  %628 = lshr i32 %627, 30
  %629 = mul nuw nsw i32 %628, 3
  %630 = add i32 %623, -3
  %631 = add i32 %630, %629
  %632 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %624, i32 %631, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %633 = extractvalue %dx.types.ResRet.f32 %632, 0
  %634 = extractvalue %dx.types.ResRet.f32 %632, 1
  %635 = bitcast float %633 to i32
  %636 = bitcast float %634 to i32
  %637 = add i32 %631, 1
  %638 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %624, i32 %637, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %639 = extractvalue %dx.types.ResRet.f32 %638, 0
  %640 = extractvalue %dx.types.ResRet.f32 %638, 1
  %641 = extractvalue %dx.types.ResRet.f32 %638, 2
  %642 = extractvalue %dx.types.ResRet.f32 %638, 3
  %643 = add i32 %631, 2
  %644 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %624, i32 %643, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %645 = extractvalue %dx.types.ResRet.f32 %644, 0
  %646 = extractvalue %dx.types.ResRet.f32 %644, 1
  %647 = extractvalue %dx.types.ResRet.f32 %644, 2
  %648 = extractvalue %dx.types.ResRet.f32 %644, 3
  %649 = and i32 %635, 1023
  %650 = lshr i32 %635, 10
  %651 = and i32 %650, 1023
  %652 = xor i32 %628, 3
  %653 = uitofp i32 %652 to float
  %654 = call float @dx.op.unary.f32(i32 21, float %653)  ; Exp(value)
  %655 = fmul fast float %654, %622
  br i1 %494, label %656, label %659

; <label>:656                                     ; preds = %619
  %657 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %658 = extractvalue %dx.types.CBufRet.f32 %657, 0
  br label %659

; <label>:659                                     ; preds = %656, %619
  %660 = phi float [ %658, %656 ], [ 1.000000e+00, %619 ]
  %661 = fmul fast float %655, %660
  %662 = fmul fast float %661, 2.000000e+00
  %663 = fadd fast float %648, %642
  %664 = fsub fast float %663, %661
  %665 = select i1 %494, float %664, float %663
  %666 = call float @dx.op.binary.f32(i32 36, float %574, float %665)  ; FMin(a,b)
  %667 = fmul fast float %616, %566
  %668 = fmul fast float %617, %566
  br label %669

; <label>:669                                     ; preds = %786, %659
  %670 = phi float [ %458, %659 ], [ %779, %786 ]
  %671 = phi float [ %667, %659 ], [ %782, %786 ]
  %672 = phi i32 [ 0, %659 ], [ %787, %786 ]
  %673 = fmul fast float %671, %567
  %674 = fmul fast float %671, %568
  %675 = fmul fast float %671, %569
  %676 = fadd fast float %673, %537
  %677 = fadd fast float %674, %542
  %678 = fadd fast float %675, %547
  %679 = call float @dx.op.binary.f32(i32 35, float %676, float %582)  ; FMax(a,b)
  %680 = call float @dx.op.binary.f32(i32 35, float %677, float %583)  ; FMax(a,b)
  %681 = call float @dx.op.binary.f32(i32 35, float %678, float %584)  ; FMax(a,b)
  %682 = call float @dx.op.binary.f32(i32 36, float %679, float %490)  ; FMin(a,b)
  %683 = call float @dx.op.binary.f32(i32 36, float %680, float %491)  ; FMin(a,b)
  %684 = call float @dx.op.binary.f32(i32 36, float %681, float %492)  ; FMin(a,b)
  %685 = fsub fast float %682, %676
  %686 = fsub fast float %683, %677
  %687 = fsub fast float %684, %678
  %688 = fmul fast float %685, %685
  %689 = fmul fast float %686, %686
  %690 = fadd fast float %689, %688
  %691 = fmul fast float %687, %687
  %692 = fadd fast float %690, %691
  %693 = call float @dx.op.unary.f32(i32 24, float %692)  ; Sqrt(value)
  %694 = fmul fast float %682, %639
  %695 = fmul fast float %683, %640
  %696 = fmul fast float %684, %641
  %697 = fadd fast float %694, %645
  %698 = fadd fast float %695, %646
  %699 = fadd fast float %696, %647
  %700 = fptosi float %697 to i32
  %701 = fptosi float %698 to i32
  %702 = fptosi float %699 to i32
  %703 = mul i32 %702, %651
  %704 = add i32 %703, %701
  %705 = mul i32 %704, %649
  %706 = add i32 %700, %636
  %707 = add i32 %706, %705
  %708 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %709 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %708, i32 %707, i32 undef)  ; BufferLoad(srv,index,wot)
  %710 = extractvalue %dx.types.ResRet.f32 %709, 3
  %711 = fcmp fast ogt float %710, 0.000000e+00
  br i1 %711, label %712, label %751

; <label>:712                                     ; preds = %669
  %713 = extractvalue %dx.types.ResRet.f32 %709, 2
  %714 = extractvalue %dx.types.ResRet.f32 %709, 1
  %715 = extractvalue %dx.types.ResRet.f32 %709, 0
  %716 = sitofp i32 %700 to float
  %717 = sitofp i32 %701 to float
  %718 = sitofp i32 %702 to float
  %719 = fsub fast float %697, %716
  %720 = fsub fast float %698, %717
  %721 = fsub fast float %699, %718
  %722 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 33)  ; CBufferLoadLegacy(handle,regIndex)
  %723 = extractvalue %dx.types.CBufRet.f32 %722, 0
  %724 = extractvalue %dx.types.CBufRet.f32 %722, 1
  %725 = extractvalue %dx.types.CBufRet.f32 %722, 2
  %726 = fmul fast float %723, %715
  %727 = fmul fast float %724, %714
  %728 = fmul fast float %725, %713
  %729 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 34)  ; CBufferLoadLegacy(handle,regIndex)
  %730 = extractvalue %dx.types.CBufRet.f32 %729, 0
  %731 = extractvalue %dx.types.CBufRet.f32 %729, 1
  %732 = extractvalue %dx.types.CBufRet.f32 %729, 2
  %733 = fmul fast float %730, %719
  %734 = fmul fast float %731, %720
  %735 = fmul fast float %732, %721
  %736 = fadd fast float %733, %726
  %737 = fadd fast float %734, %727
  %738 = fadd fast float %735, %728
  %739 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 32)  ; CBufferLoadLegacy(handle,regIndex)
  %740 = extractvalue %dx.types.CBufRet.f32 %739, 0
  %741 = extractvalue %dx.types.CBufRet.f32 %739, 1
  %742 = extractvalue %dx.types.CBufRet.f32 %739, 2
  %743 = fadd fast float %736, %740
  %744 = fadd fast float %737, %741
  %745 = fadd fast float %738, %742
  %746 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %747 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %748 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %746, %dx.types.Handle %747, float %743, float %744, float %745, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %749 = extractvalue %dx.types.ResRet.f32 %748, 0
  %750 = fmul fast float %749, %642
  br label %751

; <label>:751                                     ; preds = %712, %669
  %752 = phi float [ %750, %712 ], [ %642, %669 ]
  %753 = fadd float %648, %752
  %754 = fadd fast float %753, %693
  br i1 %494, label %755, label %760

; <label>:755                                     ; preds = %751
  %756 = fdiv fast float %671, %662
  %757 = call float @dx.op.unary.f32(i32 7, float %756)  ; Saturate(value)
  %758 = fmul fast float %757, %661
  %759 = fsub fast float %754, %758
  br label %760

; <label>:760                                     ; preds = %755, %751
  %761 = phi float [ %759, %755 ], [ %754, %751 ]
  %762 = fmul fast float %671, %577
  %763 = call float @dx.op.unary.f32(i32 7, float %762)  ; Saturate(value)
  %764 = fsub fast float 1.000000e+00, %763
  %765 = fmul fast float %671, %421
  %766 = call float @dx.op.binary.f32(i32 35, float %765, float %573)  ; FMax(a,b)
  %767 = call float @dx.op.binary.f32(i32 36, float %766, float %666)  ; FMin(a,b)
  %768 = fdiv fast float %761, %767
  %769 = call float @dx.op.unary.f32(i32 7, float %768)  ; Saturate(value)
  %770 = call float @dx.op.binary.f32(i32 35, float %769, float %764)  ; FMax(a,b)
  br i1 %454, label %771, label %777

; <label>:771                                     ; preds = %760
  %772 = fmul fast float %453, %504
  %773 = fmul fast float %772, %671
  %774 = call float @dx.op.unary.f32(i32 21, float %773)  ; Exp(value)
  %775 = call float @dx.op.unary.f32(i32 7, float %774)  ; Saturate(value)
  %776 = call float @dx.op.binary.f32(i32 35, float %770, float %775)  ; FMax(a,b)
  br label %777

; <label>:777                                     ; preds = %771, %760
  %778 = phi float [ %776, %771 ], [ %770, %760 ]
  %779 = call float @dx.op.binary.f32(i32 36, float %670, float %778)  ; FMin(a,b)
  %780 = call float @dx.op.unary.f32(i32 6, float %761)  ; FAbs(value)
  %781 = call float @dx.op.binary.f32(i32 35, float %780, float 3.906250e-03)  ; FMax(a,b)
  %782 = fadd fast float %781, %671
  %783 = fcmp fast olt float %779, 0x3F847AE140000000
  %784 = fcmp fast ogt float %782, %668
  %785 = or i1 %783, %784
  br i1 %785, label %789, label %786

; <label>:786                                     ; preds = %777
  %787 = add nuw nsw i32 %672, 1
  %788 = icmp ult i32 %787, 64
  br i1 %788, label %669, label %789, !llvm.loop !49

; <label>:789                                     ; preds = %786, %777
  %790 = phi i32 [ %672, %777 ], [ %787, %786 ]
  %791 = uitofp i32 %790 to float
  %792 = fmul fast float %791, 1.562500e-02
  %793 = fsub fast float 1.000000e+00, %792
  %794 = call float @dx.op.binary.f32(i32 36, float %779, float %793)  ; FMin(a,b)
  br label %795

; <label>:795                                     ; preds = %789, %457
  %796 = phi float [ %794, %789 ], [ %458, %457 ]
  %797 = fcmp fast olt float %796, 0x3F847AE140000000
  br i1 %797, label %801, label %798

; <label>:798                                     ; preds = %795
  %799 = add nuw i32 %459, 1
  %800 = icmp ult i32 %799, %398
  br i1 %800, label %457, label %801, !llvm.loop !50

; <label>:801                                     ; preds = %798, %795
  %802 = phi float [ %796, %798 ], [ 0.000000e+00, %795 ]
  br label %803

; <label>:803                                     ; preds = %801, %452, %392
  %804 = phi float [ 1.000000e+00, %392 ], [ 1.000000e+00, %452 ], [ %802, %801 ]
  %805 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 521 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<2xF32>
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %805, i32 %20, i32 %21, i32 undef, float %804, float %67, float %804, float %804, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #3

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }
attributes #3 = { noduplicate nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!28}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{!5, !20, !22, !25}
!5 = !{!6, !8, !9, !10, !11, !12, !14, !16, !18, !19}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !7}
!11 = !{i32 4, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 4, i32 1, i32 4, i32 0, !7}
!12 = !{i32 5, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 12, i32 0, !13}
!13 = !{i32 1, i32 16}
!14 = !{i32 6, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 6, i32 1, i32 10, i32 0, !15}
!15 = !{i32 0, i32 5}
!16 = !{i32 7, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 7, i32 1, i32 12, i32 0, !17}
!17 = !{i32 1, i32 4}
!18 = !{i32 8, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 8, i32 1, i32 12, i32 0, !13}
!19 = !{i32 9, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 9, i32 1, i32 12, i32 0, !13}
!20 = !{!21}
!21 = !{i32 0, %"class.RWTexture2D<vector<float, 2> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!22 = !{!23, !24}
!23 = !{i32 0, %hostlayout._RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 664, null}
!24 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!25 = !{!26, !27}
!26 = !{i32 0, %struct.SamplerState* undef, !"", i32 1000, i32 2, i32 1, i32 0, null}
!27 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!28 = !{void ()* @DistanceFieldShadowingCS, !"DistanceFieldShadowingCS", null, !4, !29}
!29 = !{i32 0, i64 16, i32 4, !30, i32 5, !31}
!30 = !{i32 8, i32 8, i32 1}
!31 = !{i32 0}
!32 = !{!33, !33, i64 0}
!33 = !{!"int", !34, i64 0}
!34 = !{!"omnipotent char", !35, i64 0}
!35 = !{!"Simple C/C++ TBAA"}
!36 = !{!37, !39, !40}
!37 = distinct !{!37, !38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z: %NumIntersectingObjects"}
!38 = distinct !{!38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z"}
!39 = distinct !{!39, !38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z: %bTileShouldComputeShadowing"}
!40 = distinct !{!40, !38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z: %GroupIndex"}
!41 = distinct !{!41, !"dx.controlflow.hints", i32 1}
!42 = distinct !{!42, !"dx.controlflow.hints", i32 1}
!43 = distinct !{!43, !"dx.controlflow.hints", i32 1}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.unroll.disable"}
!46 = distinct !{!46, !"dx.controlflow.hints", i32 1}
!47 = distinct !{!47, !"dx.controlflow.hints", i32 1}
!48 = distinct !{!48, !"dx.controlflow.hints", i32 1}
!49 = distinct !{!49, !45}
!50 = distinct !{!50, !45}
