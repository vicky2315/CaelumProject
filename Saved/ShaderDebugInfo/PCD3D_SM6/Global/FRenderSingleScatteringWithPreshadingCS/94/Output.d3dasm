;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: b47f672a5af8417249f4ac3627d188a6
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(64,1,1)
;
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct hostlayout._RootShaderParameters
;   {
;
;       int bApplyEmissionAndTransmittance;           ; Offset:   96
;       int bApplyDirectLighting;                     ; Offset:  100
;       int LightType;                                ; Offset:  104
;       float VolumetricScatteringIntensity;          ; Offset:  128
;       row_major float4x4 TranslatedWorldToShadowMatrix;; Offset:  160
;       float4 ShadowmapMinMax;                       ; Offset:  224
;       float4 DepthBiasParameters;                   ; Offset:  240
;       float4 ShadowInjectParams;                    ; Offset:  256
;       row_major float4x4 ShadowViewProjectionMatrices[6];; Offset:  352
;       float InvShadowmapResolution;                 ; Offset:  736
;       uint bStaticallyShadowed;                     ; Offset:  752
;       row_major float4x4 TranslatedWorldToStaticShadowMatrix;; Offset:  784
;       float4 StaticShadowBufferSize;                ; Offset:  848
;       uint VirtualShadowMapId;                      ; Offset:  880
;       int MipLevel;                                 ; Offset:  912
;       uint3 LightingCacheResolution;                ; Offset:  944
;       float MaxTraceDistance;                       ; Offset:  976
;       float StepSize;                               ; Offset:  980
;       int MaxStepCount;                             ; Offset:  984
;       int bJitter;                                  ; Offset:  988
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:   992
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; cbuffer UniformBufferConstants_SparseVoxelUniformBuffer
; {
;
;   struct hostlayout.UniformBufferConstants_SparseVoxelUniformBuffer
;   {
;
;       row_major float4x4 SparseVoxelUniformBuffer_LocalToWorld;; Offset:    0
;       row_major float4x4 SparseVoxelUniformBuffer_WorldToLocal;; Offset:   64
;       float3 SparseVoxelUniformBuffer_LocalBoundsOrigin;; Offset:  128
;       float PrePadding_SparseVoxelUniformBuffer_140;; Offset:  140
;       float3 SparseVoxelUniformBuffer_LocalBoundsExtent;; Offset:  144
;       float PrePadding_SparseVoxelUniformBuffer_156;; Offset:  156
;       int3 SparseVoxelUniformBuffer_VolumeResolution;; Offset:  160
;       int PrePadding_SparseVoxelUniformBuffer_172;  ; Offset:  172
;       uint BindlessResource_SparseVoxelUniformBuffer_ExtinctionTexture;; Offset:  176
;       uint PrePadding_SparseVoxelUniformBuffer_180; ; Offset:  180
;       uint BindlessResource_SparseVoxelUniformBuffer_EmissionTexture;; Offset:  184
;       uint PrePadding_SparseVoxelUniformBuffer_188; ; Offset:  188
;       uint BindlessResource_SparseVoxelUniformBuffer_AlbedoTexture;; Offset:  192
;       uint PrePadding_SparseVoxelUniformBuffer_196; ; Offset:  196
;       uint BindlessSampler_SparseVoxelUniformBuffer_TextureSampler;; Offset:  200
;       uint PrePadding_SparseVoxelUniformBuffer_204; ; Offset:  204
;       int3 SparseVoxelUniformBuffer_LightingCacheResolution;; Offset:  208
;       int PrePadding_SparseVoxelUniformBuffer_220;  ; Offset:  220
;       uint BindlessResource_SparseVoxelUniformBuffer_NumVoxelsBuffer;; Offset:  224
;       uint PrePadding_SparseVoxelUniformBuffer_228; ; Offset:  228
;       uint BindlessResource_SparseVoxelUniformBuffer_VoxelBuffer;; Offset:  232
;       uint PrePadding_SparseVoxelUniformBuffer_236; ; Offset:  236
;       int SparseVoxelUniformBuffer_MipLevel;        ; Offset:  240
;       float SparseVoxelUniformBuffer_MaxTraceDistance;; Offset:  244
;       float SparseVoxelUniformBuffer_MaxShadowTraceDistance;; Offset:  248
;       float SparseVoxelUniformBuffer_StepSize;      ; Offset:  252
;       float SparseVoxelUniformBuffer_ShadowStepSize;; Offset:  256
;   
;   } UniformBufferConstants_SparseVoxelUniformBuffer;; Offset:    0 Size:   260
;
; }
;
; Resource bind info for SparseVoxelUniformBuffer_VoxelBuffer
; {
;
;   struct struct.FVoxelDataPacked
;   {
;
;       uint LinearIndex;                             ; Offset:    0
;       uint MipLevel;                                ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
; Resource bind info for VoxelsPerTileBuffer
; {
;
;   struct struct.FVoxelDataPacked
;   {
;
;       uint LinearIndex;                             ; Offset:    0
;       uint MipLevel;                                ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
; Resource bind info for RayMarchingTilesBuffer
; {
;
;   struct struct.FRayMarchingTile
;   {
;
;       uint2 PixelOffset;                            ; Offset:    0
;       uint Voxels[2];                               ; Offset:    8
;       uint Id;                                      ; Offset:   16
;       uint Padding[3];                              ; Offset:   20
;   
;   } $Element;                                       ; Offset:    0 Size:    32
;
; }
;
; Resource bind info for RWVoxelOutputBuffer
; {
;
;   struct struct.FVoxelDataPacked
;   {
;
;       uint LinearIndex;                             ; Offset:    0
;       uint MipLevel;                                ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_SparseVoxelUniformBuffer   cbuffer      NA          NA     CB2            cb2     1
; View_SharedTrilinearClampedSampler   sampler      NA          NA      S0             s0     1
; SparseVoxelUniformBuffer_TextureSampler   sampler      NA          NA      S1             s1     1
; SparseVoxelUniformBuffer_ExtinctionTexture   texture     f32          3d      T0             t0     1
; SparseVoxelUniformBuffer_EmissionTexture   texture     f32          3d      T1             t1     1
; SparseVoxelUniformBuffer_AlbedoTexture   texture     f32          3d      T2             t2     1
; SparseVoxelUniformBuffer_NumVoxelsBuffer   texture     u32         buf      T3             t3     1
; SparseVoxelUniformBuffer_VoxelBuffer   texture  struct         r/o      T4             t4     1
; SceneDepthTexture                 texture     f32          2d      T5             t5     1
; VoxelsPerTileBuffer               texture  struct         r/o      T6             t6     1
; LightingCacheTexture              texture     f32          3d      T7             t7     1
; RayMarchingTilesBuffer            texture  struct         r/o      T8             t8     1
; RWLightingTexture                     UAV     f32          2d      U0             u0     1
; RWVoxelOutputBuffer                   UAV  struct         r/w      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.StructuredBuffer<FVoxelDataPacked>" = type { %struct.FVoxelDataPacked }
%struct.FVoxelDataPacked = type { i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<FRayMarchingTile>" = type { %struct.FRayMarchingTile }
%struct.FRayMarchingTile = type { <2 x i32>, [2 x i32], i32, [3 x i32] }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%"class.RWStructuredBuffer<FVoxelDataPacked>" = type { %struct.FVoxelDataPacked }
%hostlayout._RootShaderParameters = type { i32, i32, i32, float, [4 x <4 x float>], <4 x float>, <4 x float>, <4 x float>, [6 x [4 x <4 x float>]], float, i32, [4 x <4 x float>], <4 x float>, i32, i32, <3 x i32>, float, float, i32, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%hostlayout.UniformBufferConstants_SparseVoxelUniformBuffer = type { [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x i32>, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.SamplerState = type { i32 }

define void @RenderSingleScatteringWithPreshadingCS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 1 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 260 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %16, %dx.types.ResourceProperties { i32 13, i32 992 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %20 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %21 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %22 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 524, i32 32 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=32>
  %23 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %22, i32 %20, i32 0, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %24 = extractvalue %dx.types.ResRet.i32 %23, 0
  %25 = extractvalue %dx.types.ResRet.i32 %23, 1
  %26 = and i32 %21, 7
  %27 = lshr i32 %21, 3
  %28 = add i32 %24, %26
  %29 = add i32 %25, %27
  %30 = uitofp i32 %28 to float
  %31 = uitofp i32 %29 to float
  %32 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 129)  ; CBufferLoadLegacy(handle,regIndex)
  %33 = extractvalue %dx.types.CBufRet.f32 %32, 0
  %34 = extractvalue %dx.types.CBufRet.f32 %32, 1
  %35 = fcmp fast oge float %30, %33
  %36 = fcmp fast oge float %31, %34
  %37 = or i1 %35, %36
  br i1 %37, label %830, label %38

; <label>:38                                      ; preds = %0
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 128)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = fadd fast float %40, %30
  %43 = fadd fast float %41, %31
  %44 = fptosi float %42 to i32
  %45 = fptosi float %43 to i32
  %46 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %47 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %46, i32 0, i32 %44, i32 %45, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %48 = extractvalue %dx.types.ResRet.f32 %47, 0
  %49 = call float @dx.op.binary.f32(i32 35, float 0x3D71979980000000, float %48)  ; FMax(a,b)
  %50 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %51 = extractvalue %dx.types.CBufRet.f32 %50, 0
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 71)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = fmul fast float %53, %49
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %56 = fadd fast float %54, %55
  %57 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %58 = fmul fast float %57, %49
  %59 = extractvalue %dx.types.CBufRet.f32 %52, 3
  %60 = fsub fast float %58, %59
  %61 = fdiv fast float 1.000000e+00, %60
  %62 = fadd fast float %56, %61
  %63 = call float @dx.op.binary.f32(i32 36, float %62, float %51)  ; FMin(a,b)
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 35)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 3
  %66 = fcmp fast ult float %65, 1.000000e+00
  br i1 %66, label %73, label %67, !dx.controlflow.hints !33

; <label>:67                                      ; preds = %38
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 34)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %70 = fmul fast float %69, %63
  %71 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %72 = fadd fast float %70, %71
  br label %77

; <label>:73                                      ; preds = %38
  %74 = fadd fast float %59, %63
  %75 = fmul fast float %74, %57
  %76 = fdiv fast float 1.000000e+00, %75
  br label %77

; <label>:77                                      ; preds = %73, %67
  %78 = phi float [ %72, %67 ], [ %76, %73 ]
  %79 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %19, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %80 = extractvalue %dx.types.CBufRet.i32 %79, 3
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %94, label %82

; <label>:82                                      ; preds = %77
  %83 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 145)  ; CBufferLoadLegacy(handle,regIndex)
  %84 = extractvalue %dx.types.CBufRet.i32 %83, 0
  %85 = uitofp i32 %84 to float
  %86 = fmul fast float %85, 0x4040551EC0000000
  %87 = fmul fast float %85, 0x4027A147A0000000
  %88 = fadd fast float %86, %42
  %89 = fadd fast float %87, %43
  %90 = call float @dx.op.dot2.f32(i32 54, float %88, float %89, float 0x3FB12E2860000000, float 0x3F77E8B200000000)  ; Dot2(ax,ay,bx,by)
  %91 = call float @dx.op.unary.f32(i32 22, float %90)  ; Frc(value)
  %92 = fmul fast float %91, 0x404A7DD040000000
  %93 = call float @dx.op.unary.f32(i32 22, float %92)  ; Frc(value)
  br label %94

; <label>:94                                      ; preds = %82, %77
  %95 = phi float [ %93, %82 ], [ 0.000000e+00, %77 ]
  %96 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %97 = extractvalue %dx.types.CBufRet.f32 %96, 0
  %98 = extractvalue %dx.types.CBufRet.f32 %96, 1
  %99 = extractvalue %dx.types.CBufRet.f32 %96, 2
  %100 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %101 = extractvalue %dx.types.CBufRet.f32 %100, 0
  %102 = extractvalue %dx.types.CBufRet.f32 %100, 1
  %103 = extractvalue %dx.types.CBufRet.f32 %100, 2
  %104 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 74)  ; CBufferLoadLegacy(handle,regIndex)
  %105 = extractvalue %dx.types.CBufRet.f32 %104, 0
  %106 = extractvalue %dx.types.CBufRet.f32 %104, 1
  %107 = extractvalue %dx.types.CBufRet.f32 %104, 2
  %108 = fsub fast float %105, %101
  %109 = fsub fast float %106, %102
  %110 = fsub fast float %107, %103
  %111 = fmul fast float %97, 2.097152e+06
  %112 = fmul fast float %98, 2.097152e+06
  %113 = fmul fast float %99, 2.097152e+06
  %114 = fadd fast float %108, %111
  %115 = fadd fast float %109, %112
  %116 = fadd fast float %110, %113
  %117 = fadd fast float %42, 5.000000e-01
  %118 = fadd fast float %43, 5.000000e-01
  %119 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 48)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.f32 %119, 0
  %121 = extractvalue %dx.types.CBufRet.f32 %119, 1
  %122 = extractvalue %dx.types.CBufRet.f32 %119, 2
  %123 = extractvalue %dx.types.CBufRet.f32 %119, 3
  %124 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 49)  ; CBufferLoadLegacy(handle,regIndex)
  %125 = extractvalue %dx.types.CBufRet.f32 %124, 0
  %126 = extractvalue %dx.types.CBufRet.f32 %124, 1
  %127 = extractvalue %dx.types.CBufRet.f32 %124, 2
  %128 = extractvalue %dx.types.CBufRet.f32 %124, 3
  %129 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 50)  ; CBufferLoadLegacy(handle,regIndex)
  %130 = extractvalue %dx.types.CBufRet.f32 %129, 0
  %131 = extractvalue %dx.types.CBufRet.f32 %129, 1
  %132 = extractvalue %dx.types.CBufRet.f32 %129, 2
  %133 = extractvalue %dx.types.CBufRet.f32 %129, 3
  %134 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 51)  ; CBufferLoadLegacy(handle,regIndex)
  %135 = extractvalue %dx.types.CBufRet.f32 %134, 0
  %136 = extractvalue %dx.types.CBufRet.f32 %134, 1
  %137 = extractvalue %dx.types.CBufRet.f32 %134, 2
  %138 = extractvalue %dx.types.CBufRet.f32 %134, 3
  %139 = fmul fast float %120, %117
  %140 = call float @dx.op.tertiary.f32(i32 46, float %118, float %125, float %139)  ; FMad(a,b,c)
  %141 = call float @dx.op.tertiary.f32(i32 46, float %78, float %130, float %140)  ; FMad(a,b,c)
  %142 = fadd fast float %141, %135
  %143 = fmul fast float %121, %117
  %144 = call float @dx.op.tertiary.f32(i32 46, float %118, float %126, float %143)  ; FMad(a,b,c)
  %145 = call float @dx.op.tertiary.f32(i32 46, float %78, float %131, float %144)  ; FMad(a,b,c)
  %146 = fadd fast float %145, %136
  %147 = fmul fast float %122, %117
  %148 = call float @dx.op.tertiary.f32(i32 46, float %118, float %127, float %147)  ; FMad(a,b,c)
  %149 = call float @dx.op.tertiary.f32(i32 46, float %78, float %132, float %148)  ; FMad(a,b,c)
  %150 = fadd fast float %149, %137
  %151 = fmul fast float %123, %117
  %152 = call float @dx.op.tertiary.f32(i32 46, float %118, float %128, float %151)  ; FMad(a,b,c)
  %153 = call float @dx.op.tertiary.f32(i32 46, float %78, float %133, float %152)  ; FMad(a,b,c)
  %154 = fadd fast float %153, %138
  %155 = fdiv fast float %142, %154
  %156 = fdiv fast float %146, %154
  %157 = fdiv fast float %150, %154
  %158 = fsub fast float %155, %101
  %159 = fsub fast float %156, %102
  %160 = fsub fast float %157, %103
  %161 = fadd fast float %158, %111
  %162 = fadd fast float %159, %112
  %163 = fadd fast float %160, %113
  %164 = fsub fast float %155, %105
  %165 = fsub fast float %156, %106
  %166 = fsub fast float %157, %107
  %167 = fmul fast float %164, %164
  %168 = fmul fast float %165, %165
  %169 = fadd fast float %167, %168
  %170 = fmul fast float %166, %166
  %171 = fadd fast float %169, %170
  %172 = call float @dx.op.unary.f32(i32 24, float %171)  ; Sqrt(value)
  %173 = fdiv fast float %164, %172
  %174 = fdiv fast float %165, %172
  %175 = fdiv fast float %166, %172
  %176 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %177 = extractvalue %dx.types.CBufRet.f32 %176, 0
  %178 = extractvalue %dx.types.CBufRet.f32 %176, 1
  %179 = extractvalue %dx.types.CBufRet.f32 %176, 2
  %180 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %181 = extractvalue %dx.types.CBufRet.f32 %180, 0
  %182 = extractvalue %dx.types.CBufRet.f32 %180, 1
  %183 = extractvalue %dx.types.CBufRet.f32 %180, 2
  %184 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %185 = extractvalue %dx.types.CBufRet.f32 %184, 0
  %186 = extractvalue %dx.types.CBufRet.f32 %184, 1
  %187 = extractvalue %dx.types.CBufRet.f32 %184, 2
  %188 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %189 = extractvalue %dx.types.CBufRet.f32 %188, 0
  %190 = extractvalue %dx.types.CBufRet.f32 %188, 1
  %191 = extractvalue %dx.types.CBufRet.f32 %188, 2
  %192 = fmul fast float %177, %114
  %193 = call float @dx.op.tertiary.f32(i32 46, float %115, float %181, float %192)  ; FMad(a,b,c)
  %194 = call float @dx.op.tertiary.f32(i32 46, float %116, float %185, float %193)  ; FMad(a,b,c)
  %195 = fadd fast float %194, %189
  %196 = fmul fast float %178, %114
  %197 = call float @dx.op.tertiary.f32(i32 46, float %115, float %182, float %196)  ; FMad(a,b,c)
  %198 = call float @dx.op.tertiary.f32(i32 46, float %116, float %186, float %197)  ; FMad(a,b,c)
  %199 = fadd fast float %198, %190
  %200 = fmul fast float %179, %114
  %201 = call float @dx.op.tertiary.f32(i32 46, float %115, float %183, float %200)  ; FMad(a,b,c)
  %202 = call float @dx.op.tertiary.f32(i32 46, float %116, float %187, float %201)  ; FMad(a,b,c)
  %203 = fadd fast float %202, %191
  %204 = fmul fast float %177, %161
  %205 = call float @dx.op.tertiary.f32(i32 46, float %162, float %181, float %204)  ; FMad(a,b,c)
  %206 = call float @dx.op.tertiary.f32(i32 46, float %163, float %185, float %205)  ; FMad(a,b,c)
  %207 = fmul fast float %178, %161
  %208 = call float @dx.op.tertiary.f32(i32 46, float %162, float %182, float %207)  ; FMad(a,b,c)
  %209 = call float @dx.op.tertiary.f32(i32 46, float %163, float %186, float %208)  ; FMad(a,b,c)
  %210 = fmul fast float %179, %161
  %211 = call float @dx.op.tertiary.f32(i32 46, float %162, float %183, float %210)  ; FMad(a,b,c)
  %212 = call float @dx.op.tertiary.f32(i32 46, float %163, float %187, float %211)  ; FMad(a,b,c)
  %213 = fsub fast float %206, %194
  %214 = fsub fast float %209, %198
  %215 = fsub fast float %212, %202
  %216 = fmul fast float %213, %213
  %217 = fmul fast float %214, %214
  %218 = fadd fast float %217, %216
  %219 = fmul fast float %215, %215
  %220 = fadd fast float %218, %219
  %221 = call float @dx.op.unary.f32(i32 24, float %220)  ; Sqrt(value)
  %222 = fdiv fast float %213, %221
  %223 = fdiv fast float %214, %221
  %224 = fdiv fast float %215, %221
  %225 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %226 = extractvalue %dx.types.CBufRet.f32 %225, 0
  %227 = extractvalue %dx.types.CBufRet.f32 %225, 1
  %228 = extractvalue %dx.types.CBufRet.f32 %225, 2
  %229 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %230 = extractvalue %dx.types.CBufRet.f32 %229, 0
  %231 = extractvalue %dx.types.CBufRet.f32 %229, 1
  %232 = extractvalue %dx.types.CBufRet.f32 %229, 2
  %233 = fsub fast float %226, %230
  %234 = fsub fast float %227, %231
  %235 = fsub fast float %228, %232
  %236 = fadd fast float %230, %226
  %237 = fadd fast float %231, %227
  %238 = fadd fast float %232, %228
  %239 = fdiv fast float 1.000000e+00, %222
  %240 = fdiv fast float 1.000000e+00, %223
  %241 = fdiv fast float 1.000000e+00, %224
  %242 = fsub fast float %233, %195
  %243 = fsub fast float %234, %199
  %244 = fsub fast float %235, %203
  %245 = fmul fast float %242, %239
  %246 = fmul fast float %240, %243
  %247 = fmul fast float %241, %244
  %248 = fsub fast float %236, %195
  %249 = fsub fast float %237, %199
  %250 = fsub fast float %238, %203
  %251 = fmul fast float %248, %239
  %252 = fmul fast float %249, %240
  %253 = fmul fast float %250, %241
  %254 = call float @dx.op.binary.f32(i32 36, float %245, float %251)  ; FMin(a,b)
  %255 = call float @dx.op.binary.f32(i32 36, float %246, float %252)  ; FMin(a,b)
  %256 = call float @dx.op.binary.f32(i32 36, float %247, float %253)  ; FMin(a,b)
  %257 = call float @dx.op.binary.f32(i32 35, float %245, float %251)  ; FMax(a,b)
  %258 = call float @dx.op.binary.f32(i32 35, float %246, float %252)  ; FMax(a,b)
  %259 = call float @dx.op.binary.f32(i32 35, float %247, float %253)  ; FMax(a,b)
  %260 = call float @dx.op.binary.f32(i32 35, float %255, float %256)  ; FMax(a,b)
  %261 = call float @dx.op.binary.f32(i32 35, float %254, float %260)  ; FMax(a,b)
  %262 = call float @dx.op.binary.f32(i32 36, float %258, float %259)  ; FMin(a,b)
  %263 = call float @dx.op.binary.f32(i32 36, float %257, float %262)  ; FMin(a,b)
  %264 = call float @dx.op.binary.f32(i32 35, float %261, float 0.000000e+00)  ; FMax(a,b)
  %265 = call float @dx.op.binary.f32(i32 36, float %263, float %221)  ; FMin(a,b)
  %266 = fsub fast float %265, %264
  %267 = fcmp fast ugt float %266, 0.000000e+00
  br i1 %267, label %268, label %830

; <label>:268                                     ; preds = %94
  %269 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %22, i32 %20, i32 12, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %270 = extractvalue %dx.types.ResRet.i32 %269, 0
  %271 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %22, i32 %20, i32 8, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %272 = extractvalue %dx.types.ResRet.i32 %271, 0
  %273 = icmp ult i32 %272, %270
  br i1 %273, label %274, label %371

; <label>:274                                     ; preds = %268
  br label %275

; <label>:275                                     ; preds = %275, %274
  %276 = phi float [ %366, %275 ], [ %265, %274 ]
  %277 = phi float [ %367, %275 ], [ %265, %274 ]
  %278 = phi i32 [ %368, %275 ], [ %272, %274 ]
  %279 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 524, i32 8 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=8>
  %280 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %279, i32 %278, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %281 = extractvalue %dx.types.ResRet.i32 %280, 0
  %282 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %279, i32 %278, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %283 = extractvalue %dx.types.ResRet.i32 %282, 0
  %284 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %285 = extractvalue %dx.types.CBufRet.i32 %284, 0
  %286 = extractvalue %dx.types.CBufRet.i32 %284, 1
  %287 = and i32 %283, 31
  %288 = lshr i32 %285, %287
  %289 = lshr i32 %286, %287
  %290 = mul i32 %288, %289
  %291 = urem i32 %281, %290
  %292 = urem i32 %291, %288
  %293 = udiv i32 %291, %288
  %294 = udiv i32 %281, %290
  %295 = extractvalue %dx.types.CBufRet.i32 %284, 2
  %296 = ashr i32 %285, %287
  %297 = sitofp i32 %296 to float
  %298 = ashr i32 %286, %287
  %299 = sitofp i32 %298 to float
  %300 = ashr i32 %295, %287
  %301 = sitofp i32 %300 to float
  %302 = uitofp i32 %292 to float
  %303 = uitofp i32 %293 to float
  %304 = uitofp i32 %294 to float
  %305 = fdiv fast float %302, %297
  %306 = fdiv fast float %303, %299
  %307 = fdiv fast float %304, %301
  %308 = add i32 %292, 1
  %309 = add i32 %293, 1
  %310 = add i32 %294, 1
  %311 = uitofp i32 %308 to float
  %312 = uitofp i32 %309 to float
  %313 = uitofp i32 %310 to float
  %314 = fdiv fast float %311, %297
  %315 = fdiv fast float %312, %299
  %316 = fdiv fast float %313, %301
  %317 = fadd fast float %230, %230
  %318 = fadd fast float %231, %231
  %319 = fadd fast float %232, %232
  %320 = fmul fast float %305, %317
  %321 = fmul fast float %306, %318
  %322 = fmul fast float %307, %319
  %323 = fmul fast float %314, %317
  %324 = fmul fast float %315, %318
  %325 = fmul fast float %316, %319
  %326 = fsub fast float 0xBF1A36E2E0000000, %195
  %327 = fadd fast float %326, %233
  %328 = fadd fast float %327, %320
  %329 = fsub fast float 0xBF1A36E2E0000000, %199
  %330 = fadd fast float %329, %234
  %331 = fadd fast float %330, %321
  %332 = fsub fast float 0xBF1A36E2E0000000, %203
  %333 = fadd fast float %332, %235
  %334 = fadd fast float %333, %322
  %335 = fmul fast float %239, %328
  %336 = fmul fast float %240, %331
  %337 = fmul fast float %241, %334
  %338 = fsub fast float 0x3F1A36E2E0000000, %195
  %339 = fadd fast float %338, %233
  %340 = fadd fast float %339, %323
  %341 = fsub fast float 0x3F1A36E2E0000000, %199
  %342 = fadd fast float %341, %234
  %343 = fadd fast float %342, %324
  %344 = fsub fast float 0x3F1A36E2E0000000, %203
  %345 = fadd fast float %344, %235
  %346 = fadd fast float %345, %325
  %347 = fmul fast float %340, %239
  %348 = fmul fast float %343, %240
  %349 = fmul fast float %346, %241
  %350 = call float @dx.op.binary.f32(i32 36, float %335, float %347)  ; FMin(a,b)
  %351 = call float @dx.op.binary.f32(i32 36, float %336, float %348)  ; FMin(a,b)
  %352 = call float @dx.op.binary.f32(i32 36, float %337, float %349)  ; FMin(a,b)
  %353 = call float @dx.op.binary.f32(i32 35, float %335, float %347)  ; FMax(a,b)
  %354 = call float @dx.op.binary.f32(i32 35, float %336, float %348)  ; FMax(a,b)
  %355 = call float @dx.op.binary.f32(i32 35, float %337, float %349)  ; FMax(a,b)
  %356 = call float @dx.op.binary.f32(i32 35, float %351, float %352)  ; FMax(a,b)
  %357 = call float @dx.op.binary.f32(i32 35, float %350, float %356)  ; FMax(a,b)
  %358 = call float @dx.op.binary.f32(i32 36, float %354, float %355)  ; FMin(a,b)
  %359 = call float @dx.op.binary.f32(i32 36, float %353, float %358)  ; FMin(a,b)
  %360 = call float @dx.op.binary.f32(i32 35, float %357, float 0.000000e+00)  ; FMax(a,b)
  %361 = call float @dx.op.binary.f32(i32 36, float %359, float %265)  ; FMin(a,b)
  %362 = fsub fast float %361, %360
  %363 = fcmp fast ogt float %362, 0.000000e+00
  %364 = fcmp fast olt float %360, %276
  %365 = and i1 %364, %363
  %366 = select i1 %365, float %360, float %276
  %367 = select i1 %365, float %361, float %277
  %368 = add nuw i32 %278, 1
  %369 = icmp eq i32 %368, %270
  br i1 %369, label %370, label %275

; <label>:370                                     ; preds = %275
  br label %371

; <label>:371                                     ; preds = %370, %268
  %372 = phi float [ %265, %268 ], [ %366, %370 ]
  %373 = phi float [ %265, %268 ], [ %367, %370 ]
  %374 = fsub fast float %373, %372
  %375 = fcmp fast ogt float %374, 0.000000e+00
  br i1 %375, label %376, label %770

; <label>:376                                     ; preds = %371
  br label %377

; <label>:377                                     ; preds = %764, %376
  %378 = phi float [ %655, %764 ], [ 0.000000e+00, %376 ]
  %379 = phi float [ %656, %764 ], [ 0.000000e+00, %376 ]
  %380 = phi float [ %657, %764 ], [ 0.000000e+00, %376 ]
  %381 = phi float [ %658, %764 ], [ 1.000000e+00, %376 ]
  %382 = phi float [ %659, %764 ], [ 1.000000e+00, %376 ]
  %383 = phi float [ %660, %764 ], [ 1.000000e+00, %376 ]
  %384 = phi float [ %765, %764 ], [ %372, %376 ]
  %385 = phi float [ %766, %764 ], [ %373, %376 ]
  %386 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %19, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %387 = extractvalue %dx.types.CBufRet.i32 %386, 1
  %388 = extractvalue %dx.types.CBufRet.i32 %386, 0
  %389 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %19, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %390 = extractvalue %dx.types.CBufRet.i32 %389, 2
  %391 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 61)  ; CBufferLoadLegacy(handle,regIndex)
  %392 = extractvalue %dx.types.CBufRet.f32 %391, 1
  %393 = fmul fast float %385, %222
  %394 = fmul fast float %385, %223
  %395 = fmul fast float %385, %224
  %396 = fadd fast float %393, %195
  %397 = fadd fast float %394, %199
  %398 = fadd fast float %395, %203
  %399 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %400 = extractvalue %dx.types.CBufRet.f32 %399, 0
  %401 = extractvalue %dx.types.CBufRet.f32 %399, 1
  %402 = extractvalue %dx.types.CBufRet.f32 %399, 2
  %403 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %404 = extractvalue %dx.types.CBufRet.f32 %403, 0
  %405 = extractvalue %dx.types.CBufRet.f32 %403, 1
  %406 = extractvalue %dx.types.CBufRet.f32 %403, 2
  %407 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %408 = extractvalue %dx.types.CBufRet.f32 %407, 0
  %409 = extractvalue %dx.types.CBufRet.f32 %407, 1
  %410 = extractvalue %dx.types.CBufRet.f32 %407, 2
  %411 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %412 = extractvalue %dx.types.CBufRet.f32 %411, 0
  %413 = extractvalue %dx.types.CBufRet.f32 %411, 1
  %414 = extractvalue %dx.types.CBufRet.f32 %411, 2
  %415 = fmul fast float %400, %396
  %416 = call float @dx.op.tertiary.f32(i32 46, float %397, float %404, float %415)  ; FMad(a,b,c)
  %417 = call float @dx.op.tertiary.f32(i32 46, float %398, float %408, float %416)  ; FMad(a,b,c)
  %418 = fmul fast float %401, %396
  %419 = call float @dx.op.tertiary.f32(i32 46, float %397, float %405, float %418)  ; FMad(a,b,c)
  %420 = call float @dx.op.tertiary.f32(i32 46, float %398, float %409, float %419)  ; FMad(a,b,c)
  %421 = fmul fast float %402, %396
  %422 = call float @dx.op.tertiary.f32(i32 46, float %397, float %406, float %421)  ; FMad(a,b,c)
  %423 = call float @dx.op.tertiary.f32(i32 46, float %398, float %410, float %422)  ; FMad(a,b,c)
  %424 = fsub fast float %412, %114
  %425 = fadd fast float %424, %417
  %426 = fsub fast float %413, %115
  %427 = fadd fast float %426, %420
  %428 = fsub fast float %414, %116
  %429 = fadd fast float %428, %423
  %430 = fmul fast float %425, %425
  %431 = fmul fast float %427, %427
  %432 = fadd fast float %431, %430
  %433 = fmul fast float %429, %429
  %434 = fadd fast float %432, %433
  %435 = call float @dx.op.unary.f32(i32 24, float %434)  ; Sqrt(value)
  %436 = fdiv fast float %435, %385
  %437 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %438 = extractvalue %dx.types.CBufRet.f32 %437, 0
  %439 = extractvalue %dx.types.CBufRet.f32 %437, 1
  %440 = extractvalue %dx.types.CBufRet.f32 %437, 2
  %441 = fmul fast float %438, 2.000000e+00
  %442 = fmul fast float %439, 2.000000e+00
  %443 = fmul fast float %440, 2.000000e+00
  %444 = fmul fast float %441, %441
  %445 = fmul fast float %442, %442
  %446 = fadd fast float %444, %445
  %447 = fmul fast float %443, %443
  %448 = fadd fast float %446, %447
  %449 = call float @dx.op.unary.f32(i32 24, float %448)  ; Sqrt(value)
  %450 = fdiv fast float %449, %392
  %451 = call float @dx.op.binary.f32(i32 35, float %450, float 1.000000e+00)  ; FMax(a,b)
  %452 = fptoui float %451 to i32
  %453 = icmp ugt i32 %452, %390
  %454 = uitofp i32 %390 to float
  %455 = fdiv fast float %449, %454
  %456 = select i1 %453, float %455, float %392
  %457 = fsub fast float %385, %384
  %458 = call float @dx.op.unary.f32(i32 6, float %457)  ; FAbs(value)
  %459 = fdiv fast float %458, %456
  %460 = call float @dx.op.unary.f32(i32 28, float %459)  ; Round_pi(value)
  %461 = call float @dx.op.binary.f32(i32 35, float %460, float 1.000000e+00)  ; FMax(a,b)
  %462 = fptoui float %461 to i32
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %654, label %464

; <label>:464                                     ; preds = %377
  br label %465

; <label>:465                                     ; preds = %647, %464
  %466 = phi i32 [ %648, %647 ], [ 0, %464 ]
  %467 = phi float [ %629, %647 ], [ %378, %464 ]
  %468 = phi float [ %630, %647 ], [ %379, %464 ]
  %469 = phi float [ %631, %647 ], [ %380, %464 ]
  %470 = phi float [ %639, %647 ], [ %381, %464 ]
  %471 = phi float [ %640, %647 ], [ %382, %464 ]
  %472 = phi float [ %641, %647 ], [ %383, %464 ]
  %473 = uitofp i32 %466 to float
  %474 = fadd fast float %473, %95
  %475 = fmul fast float %474, %456
  %476 = fadd fast float %475, %384
  %477 = fmul fast float %476, %222
  %478 = fmul fast float %476, %223
  %479 = fmul fast float %476, %224
  %480 = fadd fast float %477, %195
  %481 = fadd fast float %478, %199
  %482 = fadd fast float %479, %203
  %483 = fmul fast float %436, %173
  %484 = fmul fast float %483, %476
  %485 = fmul fast float %436, %174
  %486 = fmul fast float %485, %476
  %487 = fmul fast float %436, %175
  %488 = fmul fast float %487, %476
  %489 = fadd fast float %484, %114
  %490 = fadd fast float %486, %115
  %491 = fadd fast float %488, %116
  %492 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %493 = extractvalue %dx.types.CBufRet.f32 %492, 0
  %494 = extractvalue %dx.types.CBufRet.f32 %492, 1
  %495 = extractvalue %dx.types.CBufRet.f32 %492, 2
  %496 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %497 = extractvalue %dx.types.CBufRet.f32 %496, 0
  %498 = extractvalue %dx.types.CBufRet.f32 %496, 1
  %499 = extractvalue %dx.types.CBufRet.f32 %496, 2
  %500 = fsub fast float %493, %497
  %501 = fsub fast float %494, %498
  %502 = fsub fast float %495, %499
  %503 = fsub fast float %480, %500
  %504 = fsub fast float %481, %501
  %505 = fsub fast float %482, %502
  %506 = fadd fast float %497, %497
  %507 = fadd fast float %498, %498
  %508 = fadd fast float %499, %499
  %509 = fdiv fast float %503, %506
  %510 = fdiv fast float %504, %507
  %511 = fdiv fast float %505, %508
  %512 = icmp eq i32 %388, 0
  br i1 %512, label %529, label %513

; <label>:513                                     ; preds = %465
  %514 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %515 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %516 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %514, %dx.types.Handle %515, float %509, float %510, float %511, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %517 = extractvalue %dx.types.ResRet.f32 %516, 0
  %518 = extractvalue %dx.types.ResRet.f32 %516, 1
  %519 = extractvalue %dx.types.ResRet.f32 %516, 2
  %520 = fmul fast float %470, %456
  %521 = fmul fast float %520, %517
  %522 = fmul fast float %471, %456
  %523 = fmul fast float %522, %518
  %524 = fmul fast float %472, %456
  %525 = fmul fast float %524, %519
  %526 = fadd fast float %521, %467
  %527 = fadd fast float %523, %468
  %528 = fadd fast float %525, %469
  br label %529

; <label>:529                                     ; preds = %513, %465
  %530 = phi float [ %526, %513 ], [ %467, %465 ]
  %531 = phi float [ %527, %513 ], [ %468, %465 ]
  %532 = phi float [ %528, %513 ], [ %469, %465 ]
  %533 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %534 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %535 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %533, %dx.types.Handle %534, float %509, float %510, float %511, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %536 = extractvalue %dx.types.ResRet.f32 %535, 0
  %537 = extractvalue %dx.types.ResRet.f32 %535, 1
  %538 = extractvalue %dx.types.ResRet.f32 %535, 2
  %539 = icmp eq i32 %387, 0
  br i1 %539, label %628, label %540

; <label>:540                                     ; preds = %529
  %541 = fcmp fast ogt float %536, 0.000000e+00
  %542 = fcmp fast ogt float %537, 0.000000e+00
  %543 = fcmp fast ogt float %538, 0.000000e+00
  %544 = or i1 %541, %542
  %545 = or i1 %543, %544
  br i1 %545, label %546, label %628

; <label>:546                                     ; preds = %540
  %547 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %548 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %547, %dx.types.Handle %534, float %509, float %510, float %511, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %549 = extractvalue %dx.types.ResRet.f32 %548, 0
  %550 = extractvalue %dx.types.ResRet.f32 %548, 1
  %551 = extractvalue %dx.types.ResRet.f32 %548, 2
  %552 = fcmp fast ogt float %549, 0.000000e+00
  %553 = fcmp fast ogt float %550, 0.000000e+00
  %554 = fcmp fast ogt float %551, 0.000000e+00
  %555 = or i1 %552, %553
  %556 = or i1 %554, %555
  br i1 %556, label %557, label %628

; <label>:557                                     ; preds = %546
  %558 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %559 = extractvalue %dx.types.CBufRet.f32 %558, 0
  %560 = extractvalue %dx.types.CBufRet.f32 %558, 1
  %561 = extractvalue %dx.types.CBufRet.f32 %558, 2
  %562 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %563 = extractvalue %dx.types.CBufRet.f32 %562, 0
  %564 = extractvalue %dx.types.CBufRet.f32 %562, 1
  %565 = extractvalue %dx.types.CBufRet.f32 %562, 2
  %566 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %567 = extractvalue %dx.types.CBufRet.f32 %566, 0
  %568 = extractvalue %dx.types.CBufRet.f32 %566, 1
  %569 = extractvalue %dx.types.CBufRet.f32 %566, 2
  %570 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %571 = extractvalue %dx.types.CBufRet.f32 %570, 0
  %572 = extractvalue %dx.types.CBufRet.f32 %570, 1
  %573 = extractvalue %dx.types.CBufRet.f32 %570, 2
  %574 = fmul fast float %559, %489
  %575 = call float @dx.op.tertiary.f32(i32 46, float %490, float %563, float %574)  ; FMad(a,b,c)
  %576 = call float @dx.op.tertiary.f32(i32 46, float %491, float %567, float %575)  ; FMad(a,b,c)
  %577 = fmul fast float %560, %489
  %578 = call float @dx.op.tertiary.f32(i32 46, float %490, float %564, float %577)  ; FMad(a,b,c)
  %579 = call float @dx.op.tertiary.f32(i32 46, float %491, float %568, float %578)  ; FMad(a,b,c)
  %580 = fmul fast float %561, %489
  %581 = call float @dx.op.tertiary.f32(i32 46, float %490, float %565, float %580)  ; FMad(a,b,c)
  %582 = call float @dx.op.tertiary.f32(i32 46, float %491, float %569, float %581)  ; FMad(a,b,c)
  %583 = fadd fast float %576, %571
  %584 = fsub fast float %583, %493
  %585 = fadd fast float %584, %497
  %586 = fadd fast float %579, %572
  %587 = fsub fast float %586, %494
  %588 = fadd fast float %587, %498
  %589 = fadd fast float %582, %573
  %590 = fsub fast float %589, %495
  %591 = fadd fast float %590, %499
  %592 = fmul fast float %497, 2.000000e+00
  %593 = fmul fast float %498, 2.000000e+00
  %594 = fmul fast float %499, 2.000000e+00
  %595 = fdiv fast float %585, %592
  %596 = fdiv fast float %588, %593
  %597 = fdiv fast float %591, %594
  %598 = call float @dx.op.unary.f32(i32 7, float %595)  ; Saturate(value)
  %599 = call float @dx.op.unary.f32(i32 7, float %596)  ; Saturate(value)
  %600 = call float @dx.op.unary.f32(i32 7, float %597)  ; Saturate(value)
  %601 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %602 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %603 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %601, %dx.types.Handle %602, float %598, float %599, float %600, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %604 = extractvalue %dx.types.ResRet.f32 %603, 0
  %605 = extractvalue %dx.types.ResRet.f32 %603, 1
  %606 = extractvalue %dx.types.ResRet.f32 %603, 2
  %607 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 136)  ; CBufferLoadLegacy(handle,regIndex)
  %608 = extractvalue %dx.types.CBufRet.f32 %607, 2
  %609 = fmul fast float %456, 0x3FB45F3060000000
  %610 = fmul fast float %609, %470
  %611 = fmul fast float %610, %536
  %612 = fmul fast float %611, %549
  %613 = fmul fast float %612, %604
  %614 = fmul fast float %613, %608
  %615 = fmul fast float %609, %471
  %616 = fmul fast float %615, %537
  %617 = fmul fast float %616, %550
  %618 = fmul fast float %617, %605
  %619 = fmul fast float %618, %608
  %620 = fmul fast float %609, %472
  %621 = fmul fast float %620, %538
  %622 = fmul fast float %621, %551
  %623 = fmul fast float %622, %606
  %624 = fmul fast float %623, %608
  %625 = fadd fast float %614, %530
  %626 = fadd fast float %619, %531
  %627 = fadd fast float %624, %532
  br label %628

; <label>:628                                     ; preds = %557, %546, %540, %529
  %629 = phi float [ %625, %557 ], [ %530, %546 ], [ %530, %540 ], [ %530, %529 ]
  %630 = phi float [ %626, %557 ], [ %531, %546 ], [ %531, %540 ], [ %531, %529 ]
  %631 = phi float [ %627, %557 ], [ %532, %546 ], [ %532, %540 ], [ %532, %529 ]
  %632 = fmul fast float %456, 0xBFF7154760000000
  %633 = fmul fast float %632, %536
  %634 = fmul fast float %632, %537
  %635 = fmul fast float %632, %538
  %636 = call float @dx.op.unary.f32(i32 21, float %633)  ; Exp(value)
  %637 = call float @dx.op.unary.f32(i32 21, float %634)  ; Exp(value)
  %638 = call float @dx.op.unary.f32(i32 21, float %635)  ; Exp(value)
  %639 = fmul fast float %636, %470
  %640 = fmul fast float %637, %471
  %641 = fmul fast float %638, %472
  %642 = fcmp fast olt float %639, 0x3E7AD7F2A0000000
  %643 = fcmp fast olt float %640, 0x3E7AD7F2A0000000
  %644 = fcmp fast olt float %641, 0x3E7AD7F2A0000000
  %645 = and i1 %642, %643
  %646 = and i1 %645, %644
  br i1 %646, label %650, label %647

; <label>:647                                     ; preds = %628
  %648 = add nuw i32 %466, 1
  %649 = icmp ult i32 %648, %462
  br i1 %649, label %465, label %650

; <label>:650                                     ; preds = %647, %628
  %651 = phi float [ %639, %647 ], [ 0.000000e+00, %628 ]
  %652 = phi float [ %640, %647 ], [ 0.000000e+00, %628 ]
  %653 = phi float [ %641, %647 ], [ 0.000000e+00, %628 ]
  br label %654

; <label>:654                                     ; preds = %650, %377
  %655 = phi float [ %378, %377 ], [ %629, %650 ]
  %656 = phi float [ %379, %377 ], [ %630, %650 ]
  %657 = phi float [ %380, %377 ], [ %631, %650 ]
  %658 = phi float [ %381, %377 ], [ %651, %650 ]
  %659 = phi float [ %382, %377 ], [ %652, %650 ]
  %660 = phi float [ %383, %377 ], [ %653, %650 ]
  %661 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %22, i32 %20, i32 12, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %662 = extractvalue %dx.types.ResRet.i32 %661, 0
  %663 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %22, i32 %20, i32 8, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %664 = extractvalue %dx.types.ResRet.i32 %663, 0
  %665 = fadd fast float %385, 0x3F847AE140000000
  %666 = icmp ult i32 %664, %662
  br i1 %666, label %667, label %764

; <label>:667                                     ; preds = %654
  br label %668

; <label>:668                                     ; preds = %668, %667
  %669 = phi float [ %759, %668 ], [ %265, %667 ]
  %670 = phi float [ %760, %668 ], [ %265, %667 ]
  %671 = phi i32 [ %761, %668 ], [ %664, %667 ]
  %672 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 524, i32 8 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=8>
  %673 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %672, i32 %671, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %674 = extractvalue %dx.types.ResRet.i32 %673, 0
  %675 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %672, i32 %671, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %676 = extractvalue %dx.types.ResRet.i32 %675, 0
  %677 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %678 = extractvalue %dx.types.CBufRet.i32 %677, 0
  %679 = extractvalue %dx.types.CBufRet.i32 %677, 1
  %680 = and i32 %676, 31
  %681 = lshr i32 %678, %680
  %682 = lshr i32 %679, %680
  %683 = mul i32 %681, %682
  %684 = urem i32 %674, %683
  %685 = urem i32 %684, %681
  %686 = udiv i32 %684, %681
  %687 = udiv i32 %674, %683
  %688 = extractvalue %dx.types.CBufRet.i32 %677, 2
  %689 = ashr i32 %678, %680
  %690 = sitofp i32 %689 to float
  %691 = ashr i32 %679, %680
  %692 = sitofp i32 %691 to float
  %693 = ashr i32 %688, %680
  %694 = sitofp i32 %693 to float
  %695 = uitofp i32 %685 to float
  %696 = uitofp i32 %686 to float
  %697 = uitofp i32 %687 to float
  %698 = fdiv fast float %695, %690
  %699 = fdiv fast float %696, %692
  %700 = fdiv fast float %697, %694
  %701 = add i32 %685, 1
  %702 = add i32 %686, 1
  %703 = add i32 %687, 1
  %704 = uitofp i32 %701 to float
  %705 = uitofp i32 %702 to float
  %706 = uitofp i32 %703 to float
  %707 = fdiv fast float %704, %690
  %708 = fdiv fast float %705, %692
  %709 = fdiv fast float %706, %694
  %710 = fadd fast float %230, %230
  %711 = fadd fast float %231, %231
  %712 = fadd fast float %232, %232
  %713 = fmul fast float %698, %710
  %714 = fmul fast float %699, %711
  %715 = fmul fast float %700, %712
  %716 = fmul fast float %707, %710
  %717 = fmul fast float %708, %711
  %718 = fmul fast float %709, %712
  %719 = fsub fast float 0xBF1A36E2E0000000, %195
  %720 = fadd fast float %719, %233
  %721 = fadd fast float %720, %713
  %722 = fsub fast float 0xBF1A36E2E0000000, %199
  %723 = fadd fast float %722, %234
  %724 = fadd fast float %723, %714
  %725 = fsub fast float 0xBF1A36E2E0000000, %203
  %726 = fadd fast float %725, %235
  %727 = fadd fast float %726, %715
  %728 = fmul fast float %239, %721
  %729 = fmul fast float %240, %724
  %730 = fmul fast float %241, %727
  %731 = fsub fast float 0x3F1A36E2E0000000, %195
  %732 = fadd fast float %731, %233
  %733 = fadd fast float %732, %716
  %734 = fsub fast float 0x3F1A36E2E0000000, %199
  %735 = fadd fast float %734, %234
  %736 = fadd fast float %735, %717
  %737 = fsub fast float 0x3F1A36E2E0000000, %203
  %738 = fadd fast float %737, %235
  %739 = fadd fast float %738, %718
  %740 = fmul fast float %733, %239
  %741 = fmul fast float %736, %240
  %742 = fmul fast float %739, %241
  %743 = call float @dx.op.binary.f32(i32 36, float %728, float %740)  ; FMin(a,b)
  %744 = call float @dx.op.binary.f32(i32 36, float %729, float %741)  ; FMin(a,b)
  %745 = call float @dx.op.binary.f32(i32 36, float %730, float %742)  ; FMin(a,b)
  %746 = call float @dx.op.binary.f32(i32 35, float %728, float %740)  ; FMax(a,b)
  %747 = call float @dx.op.binary.f32(i32 35, float %729, float %741)  ; FMax(a,b)
  %748 = call float @dx.op.binary.f32(i32 35, float %730, float %742)  ; FMax(a,b)
  %749 = call float @dx.op.binary.f32(i32 35, float %744, float %745)  ; FMax(a,b)
  %750 = call float @dx.op.binary.f32(i32 35, float %743, float %749)  ; FMax(a,b)
  %751 = call float @dx.op.binary.f32(i32 36, float %747, float %748)  ; FMin(a,b)
  %752 = call float @dx.op.binary.f32(i32 36, float %746, float %751)  ; FMin(a,b)
  %753 = call float @dx.op.binary.f32(i32 35, float %750, float %665)  ; FMax(a,b)
  %754 = call float @dx.op.binary.f32(i32 36, float %752, float %265)  ; FMin(a,b)
  %755 = fsub fast float %754, %753
  %756 = fcmp fast ogt float %755, 0.000000e+00
  %757 = fcmp fast olt float %753, %669
  %758 = and i1 %757, %756
  %759 = select i1 %758, float %753, float %669
  %760 = select i1 %758, float %754, float %670
  %761 = add nuw i32 %671, 1
  %762 = icmp eq i32 %761, %662
  br i1 %762, label %763, label %668

; <label>:763                                     ; preds = %668
  br label %764

; <label>:764                                     ; preds = %763, %654
  %765 = phi float [ %265, %654 ], [ %759, %763 ]
  %766 = phi float [ %265, %654 ], [ %760, %763 ]
  %767 = fsub fast float %766, %765
  %768 = fcmp fast ogt float %767, 0.000000e+00
  br i1 %768, label %377, label %769

; <label>:769                                     ; preds = %764
  br label %770

; <label>:770                                     ; preds = %769, %371
  %771 = phi float [ 0.000000e+00, %371 ], [ %655, %769 ]
  %772 = phi float [ 0.000000e+00, %371 ], [ %656, %769 ]
  %773 = phi float [ 0.000000e+00, %371 ], [ %657, %769 ]
  %774 = phi float [ 1.000000e+00, %371 ], [ %658, %769 ]
  %775 = phi float [ 1.000000e+00, %371 ], [ %659, %769 ]
  %776 = phi float [ 1.000000e+00, %371 ], [ %660, %769 ]
  %777 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %19, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %778 = extractvalue %dx.types.CBufRet.i32 %777, 0
  %779 = icmp ne i32 %778, 0
  %780 = fsub fast float 1.000000e+00, %774
  %781 = fsub fast float 1.000000e+00, %775
  %782 = fsub fast float 1.000000e+00, %776
  %783 = select i1 %779, float %780, float 0.000000e+00
  %784 = select i1 %779, float %781, float 0.000000e+00
  %785 = select i1 %779, float %782, float 0.000000e+00
  %786 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 136)  ; CBufferLoadLegacy(handle,regIndex)
  %787 = extractvalue %dx.types.CBufRet.f32 %786, 1
  %788 = fmul fast float %787, %771
  %789 = fmul fast float %787, %772
  %790 = fmul fast float %787, %773
  %791 = call float @dx.op.dot3.f32(i32 55, float %783, float %784, float %785, float 0x3FD3333340000000, float 0x3FE2E147A0000000, float 0x3FBC28F5C0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %792 = fptoui float %42 to i32
  %793 = fptoui float %43 to i32
  %794 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %795 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %794, i32 undef, i32 %792, i32 %793, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %796 = extractvalue %dx.types.ResRet.f32 %795, 0
  %797 = extractvalue %dx.types.ResRet.f32 %795, 1
  %798 = extractvalue %dx.types.ResRet.f32 %795, 2
  %799 = extractvalue %dx.types.ResRet.f32 %795, 3
  %800 = fadd fast float %796, %788
  %801 = fadd fast float %797, %789
  %802 = fadd fast float %798, %790
  %803 = fadd fast float %799, %791
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %794, i32 %792, i32 %793, i32 undef, float %800, float %801, float %802, float %803, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %804 = or i32 %21, %20
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %806, label %830

; <label>:806                                     ; preds = %770
  %807 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %808 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %807, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %809 = extractvalue %dx.types.ResRet.i32 %808, 0
  %810 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4620, i32 8 })  ; AnnotateHandle(res,props)  resource: RWStructuredBuffer<stride=8>
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %810, i32 0, i32 4, i32 %809, i32 undef, i32 undef, i32 undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %811 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %812 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %811, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %813 = extractvalue %dx.types.ResRet.i32 %812, 0
  %814 = icmp eq i32 %813, 0
  br i1 %814, label %830, label %815

; <label>:815                                     ; preds = %806
  br label %816

; <label>:816                                     ; preds = %816, %815
  %817 = phi i32 [ %818, %816 ], [ 0, %815 ]
  %818 = add i32 %817, 1
  %819 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4620, i32 8 })  ; AnnotateHandle(res,props)  resource: RWStructuredBuffer<stride=8>
  %820 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 524, i32 8 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=8>
  %821 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %820, i32 %817, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %822 = extractvalue %dx.types.ResRet.i32 %821, 0
  %823 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %820, i32 %817, i32 4, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %824 = extractvalue %dx.types.ResRet.i32 %823, 0
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %819, i32 %818, i32 0, i32 %822, i32 undef, i32 undef, i32 undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  call void @dx.op.rawBufferStore.i32(i32 140, %dx.types.Handle %819, i32 %818, i32 4, i32 %824, i32 undef, i32 undef, i32 undef, i8 1, i32 4)  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %825 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %826 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %825, i32 0, i32 undef)  ; BufferLoad(srv,index,wot)
  %827 = extractvalue %dx.types.ResRet.i32 %826, 0
  %828 = icmp ult i32 %818, %827
  br i1 %828, label %816, label %829

; <label>:829                                     ; preds = %816
  br label %830

; <label>:830                                     ; preds = %829, %806, %770, %94, %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind
declare void @dx.op.rawBufferStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!29}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{!5, !19, !22, !26}
!5 = !{!6, !8, !9, !10, !12, !14, !15, !16, !17}
!6 = !{i32 0, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 4, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 4, i32 0, !7}
!9 = !{i32 2, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 4, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !11}
!11 = !{i32 0, i32 5}
!12 = !{i32 4, %"class.StructuredBuffer<FVoxelDataPacked>"* undef, !"", i32 0, i32 4, i32 1, i32 12, i32 0, !13}
!13 = !{i32 1, i32 8}
!14 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 2, i32 0, !7}
!15 = !{i32 6, %"class.StructuredBuffer<FVoxelDataPacked>"* undef, !"", i32 0, i32 6, i32 1, i32 12, i32 0, !13}
!16 = !{i32 7, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 7, i32 1, i32 4, i32 0, !7}
!17 = !{i32 8, %"class.StructuredBuffer<FRayMarchingTile>"* undef, !"", i32 0, i32 8, i32 1, i32 12, i32 0, !18}
!18 = !{i32 1, i32 32}
!19 = !{!20, !21}
!20 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!21 = !{i32 1, %"class.RWStructuredBuffer<FVoxelDataPacked>"* undef, !"", i32 0, i32 1, i32 1, i32 12, i1 false, i1 false, i1 false, !13}
!22 = !{!23, !24, !25}
!23 = !{i32 0, %hostlayout._RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 992, null}
!24 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!25 = !{i32 2, %hostlayout.UniformBufferConstants_SparseVoxelUniformBuffer* undef, !"", i32 0, i32 2, i32 1, i32 260, null}
!26 = !{!27, !28}
!27 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!28 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!29 = !{void ()* @RenderSingleScatteringWithPreshadingCS, !"RenderSingleScatteringWithPreshadingCS", null, !4, !30}
!30 = !{i32 0, i64 8208, i32 4, !31, i32 5, !32}
!31 = !{i32 64, i32 1, i32 1}
!32 = !{i32 0}
!33 = distinct !{!33, !"dx.controlflow.hints", i32 2}
