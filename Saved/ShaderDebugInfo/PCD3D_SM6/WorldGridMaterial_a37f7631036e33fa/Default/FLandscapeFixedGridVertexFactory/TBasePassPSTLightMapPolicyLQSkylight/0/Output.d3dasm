;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 3     zw        0     NONE   float     zw
; TEXCOORD                 1   xyzw        1     NONE   float     zw
; TEXCOORD                 2   xyzw        2     NONE   float       
; TEXCOORD                 4   xy          3     NONE   float       
; PRIMITIVE_ID             0   x           4     NONE    uint   x   
; SV_IsFrontFace           0    y          4    FFACE    uint       
; TEXCOORD                 9   xyz         5     NONE   float   xyz 
; VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
; SV_Position              0   xyzw        7      POS   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
; SV_Target                1   xyzw        1   TARGET   float   xyzw
; SV_Target                2   xyzw        2   TARGET   float   xyzw
; SV_Target                3   xyzw        3   TARGET   float   xyzw
; SV_Target                4   xyzw        4   TARGET   float   xyzw
; SV_Target                6   xyzw        6   TARGET   float   xyzw
;
; shader hash: 015742a3bc62b40bec2f0840b3a5cb4e
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; TEXCOORD                 3                 linear       
; TEXCOORD                 4                 linear       
; PRIMITIVE_ID             0        nointerpolation       
; TEXCOORD                 9                 linear       
; VELOCITY_PREV_POS        0                 linear       
; SV_Position              0          noperspective       
; SV_IsFrontFace           0        nointerpolation       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
; SV_Target                1                              
; SV_Target                2                              
; SV_Target                3                              
; SV_Target                4                              
; SV_Target                6                              
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; cbuffer UniformBufferConstants_OpaqueBasePass
; {
;
;   struct hostlayout.UniformBufferConstants_OpaqueBasePass
;   {
;
;       uint OpaqueBasePass_Shared_Forward_NumLocalLights;; Offset:    0
;       uint OpaqueBasePass_Shared_Forward_NumReflectionCaptures;; Offset:    4
;       uint OpaqueBasePass_Shared_Forward_HasDirectionalLight;; Offset:    8
;       uint OpaqueBasePass_Shared_Forward_NumGridCells;; Offset:   12
;       int3 OpaqueBasePass_Shared_Forward_CulledGridSize;; Offset:   16
;       uint OpaqueBasePass_Shared_Forward_MaxCulledLightsPerCell;; Offset:   28
;       uint OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift;; Offset:   32
;       uint PrePadding_OpaqueBasePass_Shared_Forward_36;; Offset:   36
;       uint PrePadding_OpaqueBasePass_Shared_Forward_40;; Offset:   40
;       uint PrePadding_OpaqueBasePass_Shared_Forward_44;; Offset:   44
;       float3 OpaqueBasePass_Shared_Forward_LightGridZParams;; Offset:   48
;       float PrePadding_OpaqueBasePass_Shared_Forward_60;; Offset:   60
;       float3 OpaqueBasePass_Shared_Forward_DirectionalLightDirection;; Offset:   64
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius;; Offset:   76
;       float3 OpaqueBasePass_Shared_Forward_DirectionalLightColor;; Offset:   80
;       float OpaqueBasePass_Shared_Forward_DirectionalLightVolumetricScatteringIntensity;; Offset:   92
;       uint OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask;; Offset:   96
;       uint PrePadding_OpaqueBasePass_Shared_Forward_100;; Offset:  100
;       float2 OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD;; Offset:  104
;       uint OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades;; Offset:  112
;       int OpaqueBasePass_Shared_Forward_DirectionalLightVSM;; Offset:  116
;       int PrePadding_OpaqueBasePass_Shared_Forward_120;; Offset:  120
;       int PrePadding_OpaqueBasePass_Shared_Forward_124;; Offset:  124
;       float4 OpaqueBasePass_Shared_Forward_CascadeEndDepths;; Offset:  128
;       row_major float4x4 OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix[4];; Offset:  144
;       float4 OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax[4];; Offset:  400
;       float4 OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize;; Offset:  464
;       float OpaqueBasePass_Shared_Forward_DirectionalLightDepthBias;; Offset:  480
;       uint OpaqueBasePass_Shared_Forward_DirectionalLightUseStaticShadowing;; Offset:  484
;       uint OpaqueBasePass_Shared_Forward_SimpleLightsEndIndex;; Offset:  488
;       uint OpaqueBasePass_Shared_Forward_ClusteredDeferredSupportedEndIndex;; Offset:  492
;       uint OpaqueBasePass_Shared_Forward_LumenSupportedStartIndex;; Offset:  496
;       uint PrePadding_OpaqueBasePass_Shared_Forward_500;; Offset:  500
;       uint PrePadding_OpaqueBasePass_Shared_Forward_504;; Offset:  504
;       uint PrePadding_OpaqueBasePass_Shared_Forward_508;; Offset:  508
;       float4 OpaqueBasePass_Shared_Forward_DirectionalLightStaticShadowBufferSize;; Offset:  512
;       row_major float4x4 OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToStaticShadow;; Offset:  528
;       uint OpaqueBasePass_Shared_Forward_DirectLightingShowFlag;; Offset:  592
;       float PrePadding_OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_596;; Offset:  596
;       float PrePadding_OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_600;; Offset:  600
;       float PrePadding_OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_604;; Offset:  604
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_ScreenRayLength;; Offset:  608
;       int OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTRayCount;; Offset:  612
;       int OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTSamplesPerRay;; Offset:  616
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTRayLengthScale;; Offset:  620
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTCotMaxRayAngleFromLight;; Offset:  624
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTTexelDitherScale;; Offset:  628
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTExtrapolateSlope;; Offset:  632
;       float OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTMaxSlopeBias;; Offset:  636
;       uint OpaqueBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTAdaptiveRayCount;; Offset:  640
;       uint PrePadding_OpaqueBasePass_Shared_Forward_644;; Offset:  644
;       uint PrePadding_OpaqueBasePass_Shared_Forward_648;; Offset:  648
;       uint PrePadding_OpaqueBasePass_Shared_Forward_652;; Offset:  652
;       uint BindlessResource_OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas;; Offset:  656
;       uint PrePadding_OpaqueBasePass_Shared_Forward_660;; Offset:  660
;       uint BindlessSampler_OpaqueBasePass_Shared_Forward_ShadowmapSampler;; Offset:  664
;       uint PrePadding_OpaqueBasePass_Shared_Forward_668;; Offset:  668
;       uint BindlessResource_OpaqueBasePass_Shared_Forward_DirectionalLightStaticShadowmap;; Offset:  672
;       uint PrePadding_OpaqueBasePass_Shared_Forward_676;; Offset:  676
;       uint BindlessSampler_OpaqueBasePass_Shared_Forward_StaticShadowmapSampler;; Offset:  680
;       uint PrePadding_OpaqueBasePass_Shared_Forward_684;; Offset:  684
;       uint BindlessResource_OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer;; Offset:  688
;       uint PrePadding_OpaqueBasePass_Shared_Forward_692;; Offset:  692
;       uint BindlessResource_OpaqueBasePass_Shared_Forward_NumCulledLightsGrid;; Offset:  696
;       uint PrePadding_OpaqueBasePass_Shared_Forward_700;; Offset:  700
;       uint BindlessResource_OpaqueBasePass_Shared_Forward_CulledLightDataGrid;; Offset:  704
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_708;; Offset:  708
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_712;; Offset:  712
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_716;; Offset:  716
;       uint OpaqueBasePass_Shared_ForwardISR_NumLocalLights;; Offset:  720
;       uint OpaqueBasePass_Shared_ForwardISR_NumReflectionCaptures;; Offset:  724
;       uint OpaqueBasePass_Shared_ForwardISR_HasDirectionalLight;; Offset:  728
;       uint OpaqueBasePass_Shared_ForwardISR_NumGridCells;; Offset:  732
;       int3 OpaqueBasePass_Shared_ForwardISR_CulledGridSize;; Offset:  736
;       uint OpaqueBasePass_Shared_ForwardISR_MaxCulledLightsPerCell;; Offset:  748
;       uint OpaqueBasePass_Shared_ForwardISR_LightGridPixelSizeShift;; Offset:  752
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_756;; Offset:  756
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_760;; Offset:  760
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_764;; Offset:  764
;       float3 OpaqueBasePass_Shared_ForwardISR_LightGridZParams;; Offset:  768
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_780;; Offset:  780
;       float3 OpaqueBasePass_Shared_ForwardISR_DirectionalLightDirection;; Offset:  784
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSourceRadius;; Offset:  796
;       float3 OpaqueBasePass_Shared_ForwardISR_DirectionalLightColor;; Offset:  800
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightVolumetricScatteringIntensity;; Offset:  812
;       uint OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowMapChannelMask;; Offset:  816
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_820;; Offset:  820
;       float2 OpaqueBasePass_Shared_ForwardISR_DirectionalLightDistanceFadeMAD;; Offset:  824
;       uint OpaqueBasePass_Shared_ForwardISR_NumDirectionalLightCascades;; Offset:  832
;       int OpaqueBasePass_Shared_ForwardISR_DirectionalLightVSM;; Offset:  836
;       int PrePadding_OpaqueBasePass_Shared_ForwardISR_840;; Offset:  840
;       int PrePadding_OpaqueBasePass_Shared_ForwardISR_844;; Offset:  844
;       float4 OpaqueBasePass_Shared_ForwardISR_CascadeEndDepths;; Offset:  848
;       row_major float4x4 OpaqueBasePass_Shared_ForwardISR_DirectionalLightTranslatedWorldToShadowMatrix[4];; Offset:  864
;       float4 OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowmapMinMax[4];; Offset: 1120
;       float4 OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlasBufferSize;; Offset: 1184
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightDepthBias;; Offset: 1200
;       uint OpaqueBasePass_Shared_ForwardISR_DirectionalLightUseStaticShadowing;; Offset: 1204
;       uint OpaqueBasePass_Shared_ForwardISR_SimpleLightsEndIndex;; Offset: 1208
;       uint OpaqueBasePass_Shared_ForwardISR_ClusteredDeferredSupportedEndIndex;; Offset: 1212
;       uint OpaqueBasePass_Shared_ForwardISR_LumenSupportedStartIndex;; Offset: 1216
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1220;; Offset: 1220
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1224;; Offset: 1224
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1228;; Offset: 1228
;       float4 OpaqueBasePass_Shared_ForwardISR_DirectionalLightStaticShadowBufferSize;; Offset: 1232
;       row_major float4x4 OpaqueBasePass_Shared_ForwardISR_DirectionalLightTranslatedWorldToStaticShadow;; Offset: 1248
;       uint OpaqueBasePass_Shared_ForwardISR_DirectLightingShowFlag;; Offset: 1312
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_1316;; Offset: 1316
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_1320;; Offset: 1320
;       float PrePadding_OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_1324;; Offset: 1324
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_ScreenRayLength;; Offset: 1328
;       int OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTRayCount;; Offset: 1332
;       int OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTSamplesPerRay;; Offset: 1336
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTRayLengthScale;; Offset: 1340
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTCotMaxRayAngleFromLight;; Offset: 1344
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTTexelDitherScale;; Offset: 1348
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTExtrapolateSlope;; Offset: 1352
;       float OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTMaxSlopeBias;; Offset: 1356
;       uint OpaqueBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTAdaptiveRayCount;; Offset: 1360
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1364;; Offset: 1364
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1368;; Offset: 1368
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1372;; Offset: 1372
;       uint BindlessResource_OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlas;; Offset: 1376
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1380;; Offset: 1380
;       uint BindlessSampler_OpaqueBasePass_Shared_ForwardISR_ShadowmapSampler;; Offset: 1384
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1388;; Offset: 1388
;       uint BindlessResource_OpaqueBasePass_Shared_ForwardISR_DirectionalLightStaticShadowmap;; Offset: 1392
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1396;; Offset: 1396
;       uint BindlessSampler_OpaqueBasePass_Shared_ForwardISR_StaticShadowmapSampler;; Offset: 1400
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1404;; Offset: 1404
;       uint BindlessResource_OpaqueBasePass_Shared_ForwardISR_ForwardLocalLightBuffer;; Offset: 1408
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1412;; Offset: 1412
;       uint BindlessResource_OpaqueBasePass_Shared_ForwardISR_NumCulledLightsGrid;; Offset: 1416
;       uint PrePadding_OpaqueBasePass_Shared_ForwardISR_1420;; Offset: 1420
;       uint BindlessResource_OpaqueBasePass_Shared_ForwardISR_CulledLightDataGrid;; Offset: 1424
;       float PrePadding_OpaqueBasePass_Shared_Reflection_1428;; Offset: 1428
;       float PrePadding_OpaqueBasePass_Shared_Reflection_1432;; Offset: 1432
;       float PrePadding_OpaqueBasePass_Shared_Reflection_1436;; Offset: 1436
;       float4 OpaqueBasePass_Shared_Reflection_SkyLightParameters;; Offset: 1440
;       uint BindlessResource_OpaqueBasePass_Shared_Reflection_SkyLightCubemap;; Offset: 1456
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1460;; Offset: 1460
;       uint BindlessSampler_OpaqueBasePass_Shared_Reflection_SkyLightCubemapSampler;; Offset: 1464
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1468;; Offset: 1468
;       uint BindlessResource_OpaqueBasePass_Shared_Reflection_SkyLightBlendDestinationCubemap;; Offset: 1472
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1476;; Offset: 1476
;       uint BindlessSampler_OpaqueBasePass_Shared_Reflection_SkyLightBlendDestinationCubemapSampler;; Offset: 1480
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1484;; Offset: 1484
;       uint BindlessResource_OpaqueBasePass_Shared_Reflection_ReflectionCubemap;; Offset: 1488
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1492;; Offset: 1492
;       uint BindlessSampler_OpaqueBasePass_Shared_Reflection_ReflectionCubemapSampler;; Offset: 1496
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1500;; Offset: 1500
;       uint BindlessResource_OpaqueBasePass_Shared_Reflection_PreIntegratedGF;; Offset: 1504
;       uint PrePadding_OpaqueBasePass_Shared_Reflection_1508;; Offset: 1508
;       uint BindlessSampler_OpaqueBasePass_Shared_Reflection_PreIntegratedGFSampler;; Offset: 1512
;       float PrePadding_OpaqueBasePass_Shared_PlanarReflection_1516;; Offset: 1516
;       float4 OpaqueBasePass_Shared_PlanarReflection_ReflectionPlane;; Offset: 1520
;       float4 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionOrigin;; Offset: 1536
;       float4 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionXAxis;; Offset: 1552
;       float4 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionYAxis;; Offset: 1568
;       row_major float3x4 OpaqueBasePass_Shared_PlanarReflection_InverseTransposeMirrorMatrix;; Offset: 1584
;       float3 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionParameters;; Offset: 1632
;       float PrePadding_OpaqueBasePass_Shared_PlanarReflection_1644;; Offset: 1644
;       float2 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionParameters2;; Offset: 1648
;       float PrePadding_OpaqueBasePass_Shared_PlanarReflection_1656;; Offset: 1656
;       float PrePadding_OpaqueBasePass_Shared_PlanarReflection_1660;; Offset: 1660
;       row_major float4x4 OpaqueBasePass_Shared_PlanarReflection_ProjectionWithExtraFOV[2];; Offset: 1664
;       float4 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionScreenScaleBias[2];; Offset: 1792
;       float2 OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionScreenBound;; Offset: 1824
;       uint OpaqueBasePass_Shared_PlanarReflection_bIsStereo;; Offset: 1832
;       uint PrePadding_OpaqueBasePass_Shared_PlanarReflection_1836;; Offset: 1836
;       uint BindlessResource_OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionTexture;; Offset: 1840
;       uint PrePadding_OpaqueBasePass_Shared_PlanarReflection_1844;; Offset: 1844
;       uint BindlessSampler_OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionSampler;; Offset: 1848
;       float PrePadding_OpaqueBasePass_Shared_Fog_1852;; Offset: 1852
;       float4 OpaqueBasePass_Shared_Fog_ExponentialFogParameters;; Offset: 1856
;       float4 OpaqueBasePass_Shared_Fog_ExponentialFogParameters2;; Offset: 1872
;       float4 OpaqueBasePass_Shared_Fog_ExponentialFogColorParameter;; Offset: 1888
;       float4 OpaqueBasePass_Shared_Fog_ExponentialFogParameters3;; Offset: 1904
;       float4 OpaqueBasePass_Shared_Fog_SkyAtmosphereAmbientContributionColorScale;; Offset: 1920
;       float4 OpaqueBasePass_Shared_Fog_InscatteringLightDirection;; Offset: 1936
;       float4 OpaqueBasePass_Shared_Fog_DirectionalInscatteringColor;; Offset: 1952
;       float2 OpaqueBasePass_Shared_Fog_SinCosInscatteringColorCubemapRotation;; Offset: 1968
;       float PrePadding_OpaqueBasePass_Shared_Fog_1976;; Offset: 1976
;       float PrePadding_OpaqueBasePass_Shared_Fog_1980;; Offset: 1980
;       float3 OpaqueBasePass_Shared_Fog_FogInscatteringTextureParameters;; Offset: 1984
;       float OpaqueBasePass_Shared_Fog_ApplyVolumetricFog;; Offset: 1996
;       float OpaqueBasePass_Shared_Fog_VolumetricFogStartDistance;; Offset: 2000
;       float OpaqueBasePass_Shared_Fog_VolumetricFogNearFadeInDistanceInv;; Offset: 2004
;       uint BindlessResource_OpaqueBasePass_Shared_Fog_FogInscatteringColorCubemap;; Offset: 2008
;       uint PrePadding_OpaqueBasePass_Shared_Fog_2012;; Offset: 2012
;       uint BindlessSampler_OpaqueBasePass_Shared_Fog_FogInscatteringColorSampler;; Offset: 2016
;       uint PrePadding_OpaqueBasePass_Shared_Fog_2020;; Offset: 2020
;       uint BindlessResource_OpaqueBasePass_Shared_Fog_IntegratedLightScattering;; Offset: 2024
;       uint PrePadding_OpaqueBasePass_Shared_Fog_2028;; Offset: 2028
;       uint BindlessSampler_OpaqueBasePass_Shared_Fog_IntegratedLightScatteringSampler;; Offset: 2032
;       float PrePadding_OpaqueBasePass_Shared_FogISR_2036;; Offset: 2036
;       float PrePadding_OpaqueBasePass_Shared_FogISR_2040;; Offset: 2040
;       float PrePadding_OpaqueBasePass_Shared_FogISR_2044;; Offset: 2044
;       float4 OpaqueBasePass_Shared_FogISR_ExponentialFogParameters;; Offset: 2048
;       float4 OpaqueBasePass_Shared_FogISR_ExponentialFogParameters2;; Offset: 2064
;       float4 OpaqueBasePass_Shared_FogISR_ExponentialFogColorParameter;; Offset: 2080
;       float4 OpaqueBasePass_Shared_FogISR_ExponentialFogParameters3;; Offset: 2096
;       float4 OpaqueBasePass_Shared_FogISR_SkyAtmosphereAmbientContributionColorScale;; Offset: 2112
;       float4 OpaqueBasePass_Shared_FogISR_InscatteringLightDirection;; Offset: 2128
;       float4 OpaqueBasePass_Shared_FogISR_DirectionalInscatteringColor;; Offset: 2144
;       float2 OpaqueBasePass_Shared_FogISR_SinCosInscatteringColorCubemapRotation;; Offset: 2160
;       float PrePadding_OpaqueBasePass_Shared_FogISR_2168;; Offset: 2168
;       float PrePadding_OpaqueBasePass_Shared_FogISR_2172;; Offset: 2172
;       float3 OpaqueBasePass_Shared_FogISR_FogInscatteringTextureParameters;; Offset: 2176
;       float OpaqueBasePass_Shared_FogISR_ApplyVolumetricFog;; Offset: 2188
;       float OpaqueBasePass_Shared_FogISR_VolumetricFogStartDistance;; Offset: 2192
;       float OpaqueBasePass_Shared_FogISR_VolumetricFogNearFadeInDistanceInv;; Offset: 2196
;       uint BindlessResource_OpaqueBasePass_Shared_FogISR_FogInscatteringColorCubemap;; Offset: 2200
;       uint PrePadding_OpaqueBasePass_Shared_FogISR_2204;; Offset: 2204
;       uint BindlessSampler_OpaqueBasePass_Shared_FogISR_FogInscatteringColorSampler;; Offset: 2208
;       uint PrePadding_OpaqueBasePass_Shared_FogISR_2212;; Offset: 2212
;       uint BindlessResource_OpaqueBasePass_Shared_FogISR_IntegratedLightScattering;; Offset: 2216
;       uint PrePadding_OpaqueBasePass_Shared_FogISR_2220;; Offset: 2220
;       uint BindlessSampler_OpaqueBasePass_Shared_FogISR_IntegratedLightScatteringSampler;; Offset: 2224
;       float PrePadding_OpaqueBasePass_Shared_2228;  ; Offset: 2228
;       float PrePadding_OpaqueBasePass_Shared_2232;  ; Offset: 2232
;       float PrePadding_OpaqueBasePass_Shared_2236;  ; Offset: 2236
;       uint OpaqueBasePass_Shared_UseBasePassSkylight;; Offset: 2240
;       float PrePadding_OpaqueBasePass_Strata_2244;  ; Offset: 2244
;       float PrePadding_OpaqueBasePass_Strata_2248;  ; Offset: 2248
;       float PrePadding_OpaqueBasePass_Strata_2252;  ; Offset: 2252
;       uint OpaqueBasePass_Strata_MaxBytesPerPixel;  ; Offset: 2256
;       uint OpaqueBasePass_Strata_bRoughDiffuse;     ; Offset: 2260
;       uint OpaqueBasePass_Strata_PeelLayersAboveDepth;; Offset: 2264
;       uint OpaqueBasePass_Strata_bRoughnessTracking;; Offset: 2268
;       int OpaqueBasePass_Strata_SliceStoringDebugStrataTreeDataWithoutMRT;; Offset: 2272
;       int OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT;; Offset: 2276
;       uint BindlessResource_OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs;; Offset: 2280
;       uint PrePadding_OpaqueBasePass_Strata_2284;   ; Offset: 2284
;       uint BindlessResource_OpaqueBasePass_Strata_OpaqueRoughRefractionTextureUAV;; Offset: 2288
;       float PrePadding_OpaqueBasePass_2292;         ; Offset: 2292
;       float PrePadding_OpaqueBasePass_2296;         ; Offset: 2296
;       float PrePadding_OpaqueBasePass_2300;         ; Offset: 2300
;       int OpaqueBasePass_UseForwardScreenSpaceShadowMask;; Offset: 2304
;       int PrePadding_OpaqueBasePass_2308;           ; Offset: 2308
;       uint BindlessResource_OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture;; Offset: 2312
;       uint PrePadding_OpaqueBasePass_2316;          ; Offset: 2316
;       uint BindlessResource_OpaqueBasePass_IndirectOcclusionTexture;; Offset: 2320
;       uint PrePadding_OpaqueBasePass_2324;          ; Offset: 2324
;       uint BindlessResource_OpaqueBasePass_ResolvedSceneDepthTexture;; Offset: 2328
;       float PrePadding_OpaqueBasePass_2332;         ; Offset: 2332
;       uint BindlessResource_OpaqueBasePass_DBufferATexture;; Offset: 2336
;       uint PrePadding_OpaqueBasePass_2340;          ; Offset: 2340
;       uint BindlessResource_OpaqueBasePass_DBufferBTexture;; Offset: 2344
;       uint PrePadding_OpaqueBasePass_2348;          ; Offset: 2348
;       uint BindlessResource_OpaqueBasePass_DBufferCTexture;; Offset: 2352
;       uint PrePadding_OpaqueBasePass_2356;          ; Offset: 2356
;       uint BindlessResource_OpaqueBasePass_DBufferRenderMask;; Offset: 2360
;       uint PrePadding_OpaqueBasePass_2364;          ; Offset: 2364
;       uint BindlessSampler_OpaqueBasePass_DBufferATextureSampler;; Offset: 2368
;       uint PrePadding_OpaqueBasePass_2372;          ; Offset: 2372
;       uint BindlessSampler_OpaqueBasePass_DBufferBTextureSampler;; Offset: 2376
;       uint PrePadding_OpaqueBasePass_2380;          ; Offset: 2380
;       uint BindlessSampler_OpaqueBasePass_DBufferCTextureSampler;; Offset: 2384
;       uint PrePadding_OpaqueBasePass_2388;          ; Offset: 2388
;       uint PrePadding_OpaqueBasePass_2392;          ; Offset: 2392
;       uint PrePadding_OpaqueBasePass_2396;          ; Offset: 2396
;       uint BindlessResource_OpaqueBasePass_PreIntegratedGFTexture;; Offset: 2400
;       uint PrePadding_OpaqueBasePass_2404;          ; Offset: 2404
;       uint BindlessSampler_OpaqueBasePass_PreIntegratedGFSampler;; Offset: 2408
;       uint PrePadding_OpaqueBasePass_2412;          ; Offset: 2412
;       int OpaqueBasePass_Is24BitUnormDepthStencil;  ; Offset: 2416
;       int PrePadding_OpaqueBasePass_2420;           ; Offset: 2420
;       uint BindlessResource_OpaqueBasePass_EyeAdaptationBuffer;; Offset: 2424
;   
;   } UniformBufferConstants_OpaqueBasePass;          ; Offset:    0 Size:  2428
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct hostlayout.UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       uint LandscapeParameters_VirtualTexturePerPixelHeight;; Offset:   20
;       uint PrePadding_LandscapeParameters_24;       ; Offset:   24
;       uint PrePadding_LandscapeParameters_28;       ; Offset:   28
;       float4 LandscapeParameters_HeightmapTextureSize;; Offset:   32
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   64
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   80
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   96
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:  112
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  128
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  144
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  232
;       uint PrePadding_LandscapeParameters_236;      ; Offset:  236
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  240
;       uint PrePadding_LandscapeParameters_244;      ; Offset:  244
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  248
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   252
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[2];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:   32
;       uint PrePadding_Material_36;                  ; Offset:   36
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:   40
;       uint PrePadding_Material_44;                  ; Offset:   44
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:   48
;       uint PrePadding_Material_52;                  ; Offset:   52
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:   56
;       uint PrePadding_Material_60;                  ; Offset:   60
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:   64
;       uint PrePadding_Material_68;                  ; Offset:   68
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:   72
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:    76
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_LightmapSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_SkyIrradianceEnvironmentMap
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_OpaqueBasePass   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB3            cb3     1
; OpaqueBasePass_DBufferATextureSampler   sampler      NA          NA      S0             s0     1
; OpaqueBasePass_DBufferBTextureSampler   sampler      NA          NA      S1             s1     1
; OpaqueBasePass_DBufferCTextureSampler   sampler      NA          NA      S2             s2     1
; LightmapResourceCluster_LightMapSampler   sampler      NA          NA      S3             s3     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S4             s4     1
; Material_Texture2D_0Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_1Sampler       sampler      NA          NA      S6             s6     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_LightmapSceneData            texture  struct         r/o      T1             t1     1
; View_SkyIrradianceEnvironmentMap   texture  struct         r/o      T2             t2     1
; OpaqueBasePass_DBufferATexture    texture     f32          2d      T3             t3     1
; OpaqueBasePass_DBufferBTexture    texture     f32          2d      T4             t4     1
; OpaqueBasePass_DBufferCTexture    texture     f32          2d      T5             t5     1
; LightmapResourceCluster_LightMapTexture   texture     f32          2d      T6             t6     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d      T7             t7     1
; Material_Texture2D_0              texture     f32          2d      T8             t8     1
; Material_Texture2D_1              texture     f32          2d      T9             t9     1
;
;
; ViewId state:
;
; Number of inputs: 32, outputs: 28
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2, 3, 6, 7, 16, 20, 21, 22, 28, 29, 30, 31 }
;   output 1 depends on inputs: { 0, 1, 2, 3, 6, 7, 16, 28, 29, 30, 31 }
;   output 2 depends on inputs: { 0, 1, 2, 3, 6, 7, 16, 20, 21, 22, 28, 29, 30, 31 }
;   output 4 depends on inputs: { 0, 1, 6, 7, 16, 28, 29 }
;   output 5 depends on inputs: { 0, 1, 6, 7, 16, 28, 29 }
;   output 6 depends on inputs: { 0, 1, 6, 7, 16, 28, 29 }
;   output 7 depends on inputs: { 16 }
;   output 8 depends on inputs: { 16, 28, 29 }
;   output 9 depends on inputs: { 16, 28, 29 }
;   output 10 depends on inputs: { 0, 1, 16, 28, 29, 30, 31 }
;   output 12 depends on inputs: { 0, 1, 16, 28, 29, 30, 31 }
;   output 13 depends on inputs: { 0, 1, 16, 28, 29, 30, 31 }
;   output 14 depends on inputs: { 0, 1, 16, 28, 29, 30, 31 }
;   output 15 depends on inputs: { 0, 1, 2, 3, 6, 7, 16, 28, 29, 30, 31 }
;   output 16 depends on inputs: { 16, 24, 27, 28, 31 }
;   output 17 depends on inputs: { 16, 25, 27, 29, 31 }
;   output 18 depends on inputs: { 16, 26, 27, 30, 31 }
;   output 19 depends on inputs: { 16, 26, 27, 30, 31 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%hostlayout.UniformBufferConstants_OpaqueBasePass = type { i32, i32, i32, i32, <3 x i32>, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float>, float, <3 x float>, float, i32, i32, <2 x float>, i32, i32, i32, i32, <4 x float>, [4 x [4 x <4 x float>]], [4 x <4 x float>], <4 x float>, float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, [4 x <4 x float>], i32, float, float, float, float, i32, i32, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, i32, <3 x i32>, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float>, float, <3 x float>, float, i32, i32, <2 x float>, i32, i32, i32, i32, <4 x float>, [4 x [4 x <4 x float>]], [4 x <4 x float>], <4 x float>, float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, [4 x <4 x float>], i32, float, float, float, float, i32, i32, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, [3 x <4 x float>], <3 x float>, float, <2 x float>, float, float, [2 x [4 x <4 x float>]], [2 x <4 x float>], <2 x float>, i32, i32, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, <3 x float>, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, <3 x float>, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%hostlayout.UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, [4 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [2 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

define void @MainPS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 9, i32 9, i32 0, i8 0 }, i32 9, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 3 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 3 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 3 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 3 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %17 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %18 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %19 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %20 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %21 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %22 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %18, %dx.types.ResourceProperties { i32 13, i32 76 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %23 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %19, %dx.types.ResourceProperties { i32 13, i32 252 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %24 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %20, %dx.types.ResourceProperties { i32 13, i32 2428 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %25 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %21, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %26 = call float @dx.op.loadInput.f32(i32 4, i32 8, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %27 = call float @dx.op.loadInput.f32(i32 4, i32 8, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %28 = call float @dx.op.loadInput.f32(i32 4, i32 8, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %29 = call float @dx.op.loadInput.f32(i32 4, i32 8, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %30 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %31 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %32 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %33 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %34 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %35 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %36 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %37 = call i32 @dx.op.loadInput.i32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %38 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %39 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %40 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %41 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %42 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %43 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %44 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %24, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.i32 %44, 0
  %46 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 48)  ; CBufferLoadLegacy(handle,regIndex)
  %47 = extractvalue %dx.types.CBufRet.f32 %46, 0
  %48 = extractvalue %dx.types.CBufRet.f32 %46, 1
  %49 = extractvalue %dx.types.CBufRet.f32 %46, 2
  %50 = extractvalue %dx.types.CBufRet.f32 %46, 3
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 49)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 0
  %53 = extractvalue %dx.types.CBufRet.f32 %51, 1
  %54 = extractvalue %dx.types.CBufRet.f32 %51, 2
  %55 = extractvalue %dx.types.CBufRet.f32 %51, 3
  %56 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 50)  ; CBufferLoadLegacy(handle,regIndex)
  %57 = extractvalue %dx.types.CBufRet.f32 %56, 0
  %58 = extractvalue %dx.types.CBufRet.f32 %56, 1
  %59 = extractvalue %dx.types.CBufRet.f32 %56, 2
  %60 = extractvalue %dx.types.CBufRet.f32 %56, 3
  %61 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 51)  ; CBufferLoadLegacy(handle,regIndex)
  %62 = extractvalue %dx.types.CBufRet.f32 %61, 0
  %63 = extractvalue %dx.types.CBufRet.f32 %61, 1
  %64 = extractvalue %dx.types.CBufRet.f32 %61, 2
  %65 = extractvalue %dx.types.CBufRet.f32 %61, 3
  %66 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %67 = extractvalue %dx.types.CBufRet.f32 %66, 0
  %68 = extractvalue %dx.types.CBufRet.f32 %66, 1
  %69 = extractvalue %dx.types.CBufRet.f32 %66, 2
  %70 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %71 = extractvalue %dx.types.CBufRet.f32 %70, 0
  %72 = extractvalue %dx.types.CBufRet.f32 %70, 1
  %73 = extractvalue %dx.types.CBufRet.f32 %70, 2
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 125)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 0
  %76 = extractvalue %dx.types.CBufRet.f32 %74, 1
  %77 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %78 = extractvalue %dx.types.CBufRet.f32 %74, 3
  %79 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 128)  ; CBufferLoadLegacy(handle,regIndex)
  %80 = extractvalue %dx.types.CBufRet.f32 %79, 0
  %81 = extractvalue %dx.types.CBufRet.f32 %79, 1
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 129)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 2
  %84 = extractvalue %dx.types.CBufRet.f32 %82, 3
  %85 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.f32 %85, 0
  %87 = extractvalue %dx.types.CBufRet.f32 %85, 1
  %88 = extractvalue %dx.types.CBufRet.f32 %85, 2
  %89 = extractvalue %dx.types.CBufRet.f32 %85, 3
  %90 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %91 = extractvalue %dx.types.CBufRet.f32 %90, 0
  %92 = extractvalue %dx.types.CBufRet.f32 %90, 1
  %93 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 187)  ; CBufferLoadLegacy(handle,regIndex)
  %94 = extractvalue %dx.types.CBufRet.f32 %93, 0
  %95 = extractvalue %dx.types.CBufRet.f32 %93, 1
  %96 = extractvalue %dx.types.CBufRet.f32 %93, 2
  %97 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %98 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %99 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %97, %dx.types.Handle %98, float %40, float %41, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %100 = extractvalue %dx.types.ResRet.f32 %99, 2
  %101 = extractvalue %dx.types.ResRet.f32 %99, 3
  %102 = fmul fast float %100, 2.000000e+00
  %103 = fmul fast float %101, 2.000000e+00
  %104 = fadd fast float %102, -1.000000e+00
  %105 = fadd fast float %103, -1.000000e+00
  %106 = call float @dx.op.dot2.f32(i32 54, float %104, float %105, float %104, float %105)  ; Dot2(ax,ay,bx,by)
  %107 = fsub fast float 1.000000e+00, %106
  %108 = call float @dx.op.binary.f32(i32 35, float %107, float 0.000000e+00)  ; FMax(a,b)
  %109 = call float @dx.op.unary.f32(i32 24, float %108)  ; Sqrt(value)
  %110 = fsub fast float -0.000000e+00, %104
  %111 = call float @dx.op.dot3.f32(i32 55, float %109, float 0.000000e+00, float %110, float %109, float 0.000000e+00, float %110)  ; Dot3(ax,ay,az,bx,by,bz)
  %112 = call float @dx.op.unary.f32(i32 25, float %111)  ; Rsqrt(value)
  %113 = fmul fast float %112, %109
  %114 = fmul fast float %112, %110
  %115 = fmul fast float %114, %105
  %116 = fmul fast float %113, %109
  %117 = fmul fast float %114, %104
  %118 = fsub fast float %116, %117
  %119 = fmul fast float %105, %113
  %120 = fsub fast float -0.000000e+00, %119
  %121 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %122 = extractvalue %dx.types.CBufRet.f32 %121, 0
  %123 = extractvalue %dx.types.CBufRet.f32 %121, 1
  %124 = extractvalue %dx.types.CBufRet.f32 %121, 2
  %125 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %126 = extractvalue %dx.types.CBufRet.f32 %125, 0
  %127 = extractvalue %dx.types.CBufRet.f32 %125, 1
  %128 = extractvalue %dx.types.CBufRet.f32 %125, 2
  %129 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %130 = extractvalue %dx.types.CBufRet.f32 %129, 0
  %131 = extractvalue %dx.types.CBufRet.f32 %129, 1
  %132 = extractvalue %dx.types.CBufRet.f32 %129, 2
  %133 = fmul fast float %122, %113
  %134 = call float @dx.op.tertiary.f32(i32 46, float %114, float %130, float %133)  ; FMad(a,b,c)
  %135 = fmul fast float %123, %113
  %136 = call float @dx.op.tertiary.f32(i32 46, float %114, float %131, float %135)  ; FMad(a,b,c)
  %137 = fmul fast float %124, %113
  %138 = call float @dx.op.tertiary.f32(i32 46, float %114, float %132, float %137)  ; FMad(a,b,c)
  %139 = fmul fast float %115, %122
  %140 = call float @dx.op.tertiary.f32(i32 46, float %118, float %126, float %139)  ; FMad(a,b,c)
  %141 = call float @dx.op.tertiary.f32(i32 46, float %120, float %130, float %140)  ; FMad(a,b,c)
  %142 = fmul fast float %115, %123
  %143 = call float @dx.op.tertiary.f32(i32 46, float %118, float %127, float %142)  ; FMad(a,b,c)
  %144 = call float @dx.op.tertiary.f32(i32 46, float %120, float %131, float %143)  ; FMad(a,b,c)
  %145 = fmul fast float %115, %124
  %146 = call float @dx.op.tertiary.f32(i32 46, float %118, float %128, float %145)  ; FMad(a,b,c)
  %147 = call float @dx.op.tertiary.f32(i32 46, float %120, float %132, float %146)  ; FMad(a,b,c)
  %148 = fmul fast float %122, %104
  %149 = call float @dx.op.tertiary.f32(i32 46, float %105, float %126, float %148)  ; FMad(a,b,c)
  %150 = call float @dx.op.tertiary.f32(i32 46, float %109, float %130, float %149)  ; FMad(a,b,c)
  %151 = fmul fast float %123, %104
  %152 = call float @dx.op.tertiary.f32(i32 46, float %105, float %127, float %151)  ; FMad(a,b,c)
  %153 = call float @dx.op.tertiary.f32(i32 46, float %109, float %131, float %152)  ; FMad(a,b,c)
  %154 = fmul fast float %124, %104
  %155 = call float @dx.op.tertiary.f32(i32 46, float %105, float %128, float %154)  ; FMad(a,b,c)
  %156 = call float @dx.op.tertiary.f32(i32 46, float %109, float %132, float %155)  ; FMad(a,b,c)
  %157 = fsub fast float %26, %80
  %158 = fsub fast float %27, %81
  %159 = fmul fast float %157, %83
  %160 = fmul fast float %158, %84
  %161 = fadd fast float %159, -5.000000e-01
  %162 = fadd fast float %160, -5.000000e-01
  %163 = fmul fast float %29, 2.000000e+00
  %164 = fmul fast float %163, %161
  %165 = fmul fast float %29, -2.000000e+00
  %166 = fmul fast float %165, %162
  %167 = fmul fast float %29, %28
  %168 = fmul fast float %47, %26
  %169 = call float @dx.op.tertiary.f32(i32 46, float %27, float %52, float %168)  ; FMad(a,b,c)
  %170 = call float @dx.op.tertiary.f32(i32 46, float %28, float %57, float %169)  ; FMad(a,b,c)
  %171 = fadd fast float %170, %62
  %172 = fmul fast float %48, %26
  %173 = call float @dx.op.tertiary.f32(i32 46, float %27, float %53, float %172)  ; FMad(a,b,c)
  %174 = call float @dx.op.tertiary.f32(i32 46, float %28, float %58, float %173)  ; FMad(a,b,c)
  %175 = fadd fast float %174, %63
  %176 = fmul fast float %49, %26
  %177 = call float @dx.op.tertiary.f32(i32 46, float %27, float %54, float %176)  ; FMad(a,b,c)
  %178 = call float @dx.op.tertiary.f32(i32 46, float %28, float %59, float %177)  ; FMad(a,b,c)
  %179 = fadd fast float %178, %64
  %180 = fmul fast float %50, %26
  %181 = call float @dx.op.tertiary.f32(i32 46, float %27, float %55, float %180)  ; FMad(a,b,c)
  %182 = call float @dx.op.tertiary.f32(i32 46, float %28, float %60, float %181)  ; FMad(a,b,c)
  %183 = fadd fast float %182, %65
  %184 = fdiv fast float %171, %183
  %185 = fdiv fast float %175, %183
  %186 = fdiv fast float %179, %183
  %187 = fsub fast float %184, %71
  %188 = fsub fast float %185, %72
  %189 = fsub fast float %186, %73
  %190 = fmul fast float %42, 5.000000e-01
  %191 = fmul fast float %43, 5.000000e-01
  %192 = fmul fast float %190, 2.000000e+01
  %193 = fmul fast float %191, 2.000000e+01
  %194 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %195 = extractvalue %dx.types.CBufRet.f32 %194, 0
  %196 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %197 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %198 = call %dx.types.ResRet.f32 @dx.op.sampleBias.f32(i32 61, %dx.types.Handle %196, %dx.types.Handle %197, float %192, float %193, float undef, float undef, i32 0, i32 0, i32 undef, float %195, float undef)  ; SampleBias(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,bias,clamp)
  %199 = extractvalue %dx.types.ResRet.f32 %198, 0
  %200 = extractvalue %dx.types.ResRet.f32 %198, 1
  %201 = fmul fast float %199, 2.000000e+00
  %202 = fmul fast float %200, 2.000000e+00
  %203 = fadd fast float %201, -1.000000e+00
  %204 = fadd fast float %202, -1.000000e+00
  %205 = call float @dx.op.dot2.f32(i32 54, float %203, float %204, float %203, float %204)  ; Dot2(ax,ay,bx,by)
  %206 = fsub fast float 1.000000e+00, %205
  %207 = call float @dx.op.unary.f32(i32 7, float %206)  ; Saturate(value)
  %208 = call float @dx.op.unary.f32(i32 24, float %207)  ; Sqrt(value)
  %209 = fmul fast float %199, 0x3FE3333340000000
  %210 = fadd fast float %209, 0xBFD3333340000000
  %211 = fmul fast float %200, 0x3FE3333340000000
  %212 = fadd fast float %211, 0xBFD3333340000000
  %213 = fmul fast float %210, %89
  %214 = fmul fast float %212, %89
  %215 = fmul fast float %208, %89
  %216 = fadd fast float %213, %86
  %217 = fadd fast float %214, %87
  %218 = fadd fast float %215, %88
  %219 = call float @dx.op.dot3.f32(i32 55, float %216, float %217, float %218, float %216, float %217, float %218)  ; Dot3(ax,ay,az,bx,by,bz)
  %220 = call float @dx.op.unary.f32(i32 25, float %219)  ; Rsqrt(value)
  %221 = fmul fast float %216, %220
  %222 = fmul fast float %217, %220
  %223 = fmul fast float %218, %220
  %224 = fmul fast float %221, %134
  %225 = call float @dx.op.tertiary.f32(i32 46, float %222, float %141, float %224)  ; FMad(a,b,c)
  %226 = call float @dx.op.tertiary.f32(i32 46, float %223, float %150, float %225)  ; FMad(a,b,c)
  %227 = fmul fast float %221, %136
  %228 = call float @dx.op.tertiary.f32(i32 46, float %222, float %144, float %227)  ; FMad(a,b,c)
  %229 = call float @dx.op.tertiary.f32(i32 46, float %223, float %153, float %228)  ; FMad(a,b,c)
  %230 = fmul fast float %221, %138
  %231 = call float @dx.op.tertiary.f32(i32 46, float %222, float %147, float %230)  ; FMad(a,b,c)
  %232 = call float @dx.op.tertiary.f32(i32 46, float %223, float %156, float %231)  ; FMad(a,b,c)
  %233 = call float @dx.op.dot3.f32(i32 55, float %226, float %229, float %232, float %226, float %229, float %232)  ; Dot3(ax,ay,az,bx,by,bz)
  %234 = call float @dx.op.unary.f32(i32 25, float %233)  ; Rsqrt(value)
  %235 = fmul fast float %234, %226
  %236 = fmul fast float %234, %229
  %237 = fmul fast float %234, %232
  %238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %239 = extractvalue %dx.types.CBufRet.f32 %238, 0
  %240 = extractvalue %dx.types.CBufRet.f32 %238, 1
  %241 = extractvalue %dx.types.CBufRet.f32 %238, 2
  %242 = extractvalue %dx.types.CBufRet.f32 %238, 3
  %243 = fmul fast float %240, %239
  %244 = fmul fast float %241, %239
  %245 = fmul fast float %242, %239
  %246 = fmul fast float %42, 2.000000e+01
  %247 = fmul fast float %43, 2.000000e+01
  %248 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %249 = extractvalue %dx.types.CBufRet.f32 %248, 0
  %250 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %251 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %252 = call %dx.types.ResRet.f32 @dx.op.sampleBias.f32(i32 61, %dx.types.Handle %250, %dx.types.Handle %251, float %246, float %247, float undef, float undef, i32 0, i32 0, i32 undef, float %249, float undef)  ; SampleBias(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,bias,clamp)
  %253 = extractvalue %dx.types.ResRet.f32 %252, 0
  %254 = fmul fast float %253, 0x3FE3333340000000
  %255 = fadd fast float %254, 0x3FD99999A0000000
  %256 = fsub fast float 0x3FE3333340000000, %254
  %257 = fmul fast float %190, 1.000000e+01
  %258 = fmul fast float %191, 1.000000e+01
  %259 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %260 = extractvalue %dx.types.CBufRet.f32 %259, 0
  %261 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %262 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %263 = call %dx.types.ResRet.f32 @dx.op.sampleBias.f32(i32 61, %dx.types.Handle %261, %dx.types.Handle %262, float %257, float %258, float undef, float undef, i32 0, i32 0, i32 undef, float %260, float undef)  ; SampleBias(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,bias,clamp)
  %264 = extractvalue %dx.types.ResRet.f32 %263, 1
  %265 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 35)  ; CBufferLoadLegacy(handle,regIndex)
  %266 = extractvalue %dx.types.CBufRet.f32 %265, 3
  %267 = fcmp fast olt float %266, 1.000000e+00
  br i1 %267, label %280, label %268, !dx.controlflow.hints !65

; <label>:268                                     ; preds = %0
  %269 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 71)  ; CBufferLoadLegacy(handle,regIndex)
  %270 = extractvalue %dx.types.CBufRet.f32 %269, 0
  %271 = fmul fast float %270, %167
  %272 = extractvalue %dx.types.CBufRet.f32 %269, 1
  %273 = fadd fast float %271, %272
  %274 = extractvalue %dx.types.CBufRet.f32 %269, 2
  %275 = fmul fast float %274, %167
  %276 = extractvalue %dx.types.CBufRet.f32 %269, 3
  %277 = fsub fast float %275, %276
  %278 = fdiv fast float 1.000000e+00, %277
  %279 = fadd fast float %273, %278
  br label %280

; <label>:280                                     ; preds = %268, %0
  %281 = phi float [ %279, %268 ], [ %29, %0 ]
  %282 = fadd fast float %281, -2.400000e+01
  %283 = fmul fast float %282, 0x3F45D867C0000000
  %284 = call float @dx.op.unary.f32(i32 7, float %283)  ; Saturate(value)
  %285 = fsub fast float 1.000000e+00, %264
  %286 = fmul fast float %284, %285
  %287 = fadd fast float %286, %264
  %288 = fsub fast float %256, %255
  %289 = fmul fast float %287, %288
  %290 = fadd fast float %289, %255
  %291 = call %dx.types.ResRet.f32 @dx.op.sampleBias.f32(i32 61, %dx.types.Handle %261, %dx.types.Handle %262, float %190, float %191, float undef, float undef, i32 0, i32 0, i32 undef, float %260, float undef)  ; SampleBias(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,bias,clamp)
  %292 = extractvalue %dx.types.ResRet.f32 %291, 1
  %293 = fmul fast float %284, %264
  %294 = fsub fast float %264, %293
  %295 = fadd fast float %292, %294
  %296 = fsub fast float 5.000000e-01, %295
  %297 = fmul fast float %296, 5.000000e-01
  %298 = fadd fast float %297, %295
  %299 = fmul fast float %298, 0x3FC75C2920000000
  %300 = fadd fast float %299, 0x3FC2E147A0000000
  %301 = fmul fast float %300, %290
  %302 = fmul fast float %292, 5.000000e-01
  %303 = fmul fast float %264, 0x3FD3333340000000
  %304 = fadd fast float %303, 0x3FE6666660000000
  %305 = fsub fast float 0x3FD3333340000000, %303
  %306 = fmul fast float %284, %305
  %307 = fadd fast float %304, %306
  %308 = fadd fast float %307, %302
  %309 = call float @dx.op.unary.f32(i32 7, float %308)  ; Saturate(value)
  %310 = call float @dx.op.unary.f32(i32 7, float %301)  ; Saturate(value)
  %311 = call float @dx.op.unary.f32(i32 7, float %309)  ; Saturate(value)
  %312 = fmul fast float %311, %92
  %313 = fadd fast float %312, %91
  %314 = mul i32 %37, 41
  %315 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %316 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %315, i32 %314, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %317 = extractvalue %dx.types.ResRet.f32 %316, 0
  %318 = bitcast float %317 to i32
  %319 = and i32 %318, 8
  %320 = icmp ne i32 %319, 0
  %321 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 196)  ; CBufferLoadLegacy(handle,regIndex)
  %322 = extractvalue %dx.types.CBufRet.f32 %321, 3
  %323 = fcmp fast ogt float %322, 0.000000e+00
  %324 = and i1 %323, %320
  br i1 %324, label %325, label %377, !dx.controlflow.hints !66

; <label>:325                                     ; preds = %280
  %326 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %327 = extractvalue %dx.types.CBufRet.f32 %326, 2
  %328 = extractvalue %dx.types.CBufRet.f32 %326, 3
  %329 = fmul fast float %327, %26
  %330 = fmul fast float %328, %27
  %331 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %332 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %17, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %333 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %331, %dx.types.Handle %332, float %329, float %330, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %334 = extractvalue %dx.types.ResRet.f32 %333, 0
  %335 = extractvalue %dx.types.ResRet.f32 %333, 1
  %336 = extractvalue %dx.types.ResRet.f32 %333, 2
  %337 = extractvalue %dx.types.ResRet.f32 %333, 3
  %338 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %339 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %16, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %340 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %338, %dx.types.Handle %339, float %329, float %330, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %341 = extractvalue %dx.types.ResRet.f32 %340, 0
  %342 = extractvalue %dx.types.ResRet.f32 %340, 1
  %343 = extractvalue %dx.types.ResRet.f32 %340, 2
  %344 = extractvalue %dx.types.ResRet.f32 %340, 3
  %345 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %346 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %347 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %345, %dx.types.Handle %346, float %329, float %330, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %348 = extractvalue %dx.types.ResRet.f32 %347, 0
  %349 = extractvalue %dx.types.ResRet.f32 %347, 1
  %350 = extractvalue %dx.types.ResRet.f32 %347, 2
  %351 = extractvalue %dx.types.ResRet.f32 %347, 3
  %352 = fmul fast float %341, 2.000000e+00
  %353 = fmul fast float %342, 2.000000e+00
  %354 = fmul fast float %343, 2.000000e+00
  %355 = fadd fast float %352, 0xBFF0101020000000
  %356 = fadd fast float %353, 0xBFF0101020000000
  %357 = fadd fast float %354, 0xBFF0101020000000
  %358 = fmul fast float %337, %310
  %359 = fadd fast float %358, %334
  %360 = fadd fast float %358, %335
  %361 = fadd fast float %358, %336
  %362 = fmul fast float %344, %235
  %363 = fmul fast float %344, %236
  %364 = fmul fast float %344, %237
  %365 = fadd fast float %355, %362
  %366 = fadd fast float %356, %363
  %367 = fadd fast float %357, %364
  %368 = call float @dx.op.dot3.f32(i32 55, float %365, float %366, float %367, float %365, float %366, float %367)  ; Dot3(ax,ay,az,bx,by,bz)
  %369 = call float @dx.op.unary.f32(i32 25, float %368)  ; Rsqrt(value)
  %370 = fmul fast float %369, %365
  %371 = fmul fast float %369, %366
  %372 = fmul fast float %369, %367
  %373 = fmul fast float %351, %313
  %374 = fadd fast float %373, %350
  %375 = fmul fast float %351, 5.000000e-01
  %376 = fadd fast float %375, %349
  br label %377

; <label>:377                                     ; preds = %325, %280
  %378 = phi float [ %370, %325 ], [ %235, %280 ]
  %379 = phi float [ %371, %325 ], [ %236, %280 ]
  %380 = phi float [ %372, %325 ], [ %237, %280 ]
  %381 = phi float [ %359, %325 ], [ %310, %280 ]
  %382 = phi float [ %360, %325 ], [ %310, %280 ]
  %383 = phi float [ %361, %325 ], [ %310, %280 ]
  %384 = phi float [ %348, %325 ], [ 0.000000e+00, %280 ]
  %385 = phi float [ %376, %325 ], [ 5.000000e-01, %280 ]
  %386 = phi float [ %374, %325 ], [ %313, %280 ]
  %387 = and i32 %318, 256
  %388 = icmp ne i32 %387, 0
  %389 = and i32 %318, 512
  %390 = icmp ne i32 %389, 0
  %391 = select i1 %390, float 1.000000e+00, float 0.000000e+00
  %392 = select i1 %388, float 2.000000e+00, float 0.000000e+00
  %393 = fadd fast float %392, %391
  %394 = fmul fast float %393, 0x3FD5555560000000
  %395 = and i32 %318, 32
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %444, label %397, !dx.controlflow.hints !67

; <label>:397                                     ; preds = %377
  %398 = fdiv fast float %164, %29
  %399 = fdiv fast float %166, %29
  %400 = fsub fast float %398, %75
  %401 = fsub fast float %399, %76
  %402 = fdiv fast float %30, %33
  %403 = fdiv fast float %31, %33
  %404 = fsub fast float %402, %77
  %405 = fsub fast float %403, %78
  %406 = fdiv fast float %167, %29
  %407 = fdiv fast float %32, %33
  %408 = fsub fast float %400, %404
  %409 = fsub fast float %401, %405
  %410 = fsub fast float %406, %407
  %411 = fcmp fast ogt float %408, 0.000000e+00
  %412 = fcmp fast ogt float %409, 0.000000e+00
  %413 = fcmp fast olt float %408, 0.000000e+00
  %414 = fcmp fast olt float %409, 0.000000e+00
  %415 = zext i1 %411 to i32
  %416 = zext i1 %412 to i32
  %417 = zext i1 %413 to i32
  %418 = zext i1 %414 to i32
  %419 = sub nsw i32 %415, %417
  %420 = sub nsw i32 %416, %418
  %421 = sitofp i32 %419 to float
  %422 = sitofp i32 %420 to float
  %423 = call float @dx.op.unary.f32(i32 6, float %408)  ; FAbs(value)
  %424 = call float @dx.op.unary.f32(i32 6, float %409)  ; FAbs(value)
  %425 = call float @dx.op.unary.f32(i32 24, float %423)  ; Sqrt(value)
  %426 = call float @dx.op.unary.f32(i32 24, float %424)  ; Sqrt(value)
  %427 = fmul fast float %425, 0x3FD69508A0000000
  %428 = fmul fast float %427, %421
  %429 = fmul fast float %426, 0x3FD69508A0000000
  %430 = fmul fast float %429, %422
  %431 = fadd fast float %428, 0x3FDFFFE000000000
  %432 = fadd fast float %430, 0x3FDFFFE000000000
  %433 = bitcast float %410 to i32
  %434 = lshr i32 %433, 16
  %435 = uitofp i32 %434 to float
  %436 = fmul fast float %435, 0x3EF0001000000000
  %437 = fadd fast float %436, 0x3EB999B340000000
  %438 = call float @dx.op.unary.f32(i32 7, float %437)  ; Saturate(value)
  %439 = and i32 %433, 65535
  %440 = uitofp i32 %439 to float
  %441 = fmul fast float %440, 0x3EF0001000000000
  %442 = fadd fast float %441, 0x3EB999B340000000
  %443 = call float @dx.op.unary.f32(i32 7, float %442)  ; Saturate(value)
  br label %444

; <label>:444                                     ; preds = %397, %377
  %445 = phi float [ %431, %397 ], [ 0.000000e+00, %377 ]
  %446 = phi float [ %432, %397 ], [ 0.000000e+00, %377 ]
  %447 = phi float [ %438, %397 ], [ 0.000000e+00, %377 ]
  %448 = phi float [ %443, %397 ], [ 0.000000e+00, %377 ]
  %449 = fmul fast float %385, 0x3FB47AE140000000
  %450 = fsub fast float %381, %449
  %451 = fsub fast float %382, %449
  %452 = fsub fast float %383, %449
  %453 = fmul fast float %450, %384
  %454 = fmul fast float %451, %384
  %455 = fmul fast float %452, %384
  %456 = fadd fast float %453, %449
  %457 = fadd fast float %454, %449
  %458 = fadd fast float %455, %449
  %459 = fmul fast float %384, %381
  %460 = fmul fast float %384, %382
  %461 = fmul fast float %384, %383
  %462 = fsub fast float %381, %459
  %463 = fsub fast float %382, %460
  %464 = fsub fast float %383, %461
  %465 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 137)  ; CBufferLoadLegacy(handle,regIndex)
  %466 = extractvalue %dx.types.CBufRet.f32 %465, 3
  %467 = fmul fast float %466, %462
  %468 = fmul fast float %466, %463
  %469 = fmul fast float %466, %464
  %470 = extractvalue %dx.types.CBufRet.f32 %465, 0
  %471 = extractvalue %dx.types.CBufRet.f32 %465, 1
  %472 = extractvalue %dx.types.CBufRet.f32 %465, 2
  %473 = fadd fast float %467, %470
  %474 = fadd fast float %468, %471
  %475 = fadd fast float %469, %472
  %476 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 138)  ; CBufferLoadLegacy(handle,regIndex)
  %477 = extractvalue %dx.types.CBufRet.f32 %476, 3
  %478 = fmul fast float %477, %456
  %479 = fmul fast float %477, %457
  %480 = fmul fast float %477, %458
  %481 = extractvalue %dx.types.CBufRet.f32 %476, 0
  %482 = extractvalue %dx.types.CBufRet.f32 %476, 1
  %483 = extractvalue %dx.types.CBufRet.f32 %476, 2
  %484 = fadd fast float %478, %481
  %485 = fadd fast float %479, %482
  %486 = fadd fast float %480, %483
  %487 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 183)  ; CBufferLoadLegacy(handle,regIndex)
  %488 = extractvalue %dx.types.CBufRet.f32 %487, 3
  %489 = fcmp fast une float %488, 0.000000e+00
  %490 = fmul fast float %484, 0x3FDCCCCCC0000000
  %491 = fmul fast float %485, 0x3FDCCCCCC0000000
  %492 = fmul fast float %486, 0x3FDCCCCCC0000000
  %493 = fadd fast float %490, %473
  %494 = fadd fast float %491, %474
  %495 = fadd fast float %492, %475
  %496 = select i1 %489, float %493, float %473
  %497 = select i1 %489, float %494, float %474
  %498 = select i1 %489, float %495, float %475
  %499 = select i1 %489, float 0.000000e+00, float %484
  %500 = select i1 %489, float 0.000000e+00, float %485
  %501 = select i1 %489, float 0.000000e+00, float %486
  %502 = call float @dx.op.dot3.f32(i32 55, float %499, float %500, float %501, float 0x3FD3333340000000, float 0x3FE2E147A0000000, float 0x3FBC28F5C0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %503 = fmul fast float %502, 0x3F40600000000000
  %504 = fadd fast float %503, 0x3FEFFCB940000000
  %505 = call float @dx.op.binary.f32(i32 35, float 1.000000e+00, float %504)  ; FMax(a,b)
  %506 = fmul fast float %39, 5.000000e-01
  %507 = fadd fast float %506, 5.000000e-01
  %508 = add i32 %314, 20
  %509 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %510 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %508, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %511 = extractvalue %dx.types.ResRet.f32 %510, 3
  %512 = bitcast float %511 to i32
  %513 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %514 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %515 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %513, %dx.types.Handle %514, float %38, float %506, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %516 = extractvalue %dx.types.ResRet.f32 %515, 0
  %517 = extractvalue %dx.types.ResRet.f32 %515, 1
  %518 = extractvalue %dx.types.ResRet.f32 %515, 2
  %519 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %513, %dx.types.Handle %514, float %38, float %507, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %520 = extractvalue %dx.types.ResRet.f32 %519, 0
  %521 = extractvalue %dx.types.ResRet.f32 %519, 1
  %522 = extractvalue %dx.types.ResRet.f32 %519, 2
  %523 = extractvalue %dx.types.ResRet.f32 %519, 3
  %524 = mul i32 %512, 15
  %525 = add i32 %524, 4
  %526 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %527 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %526, i32 %525, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %528 = extractvalue %dx.types.ResRet.f32 %527, 0
  %529 = extractvalue %dx.types.ResRet.f32 %527, 1
  %530 = extractvalue %dx.types.ResRet.f32 %527, 2
  %531 = fmul fast float %528, %516
  %532 = fmul fast float %529, %517
  %533 = fmul fast float %530, %518
  %534 = add i32 %524, 6
  %535 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %526, i32 %534, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %536 = extractvalue %dx.types.ResRet.f32 %535, 0
  %537 = extractvalue %dx.types.ResRet.f32 %535, 1
  %538 = extractvalue %dx.types.ResRet.f32 %535, 2
  %539 = fadd fast float %536, %531
  %540 = fadd fast float %537, %532
  %541 = fadd fast float %538, %533
  %542 = call float @dx.op.dot3.f32(i32 55, float %539, float %540, float %541, float 0x3FD3333340000000, float 0x3FE2E147A0000000, float 0x3FBC28F5C0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %543 = fmul fast float %542, 1.600000e+01
  %544 = fadd fast float %543, -8.000000e+00
  %545 = call float @dx.op.unary.f32(i32 21, float %544)  ; Exp(value)
  %546 = fadd fast float %545, -3.906250e-03
  %547 = add i32 %524, 5
  %548 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %526, i32 %547, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %549 = extractvalue %dx.types.ResRet.f32 %548, 0
  %550 = extractvalue %dx.types.ResRet.f32 %548, 1
  %551 = extractvalue %dx.types.ResRet.f32 %548, 2
  %552 = extractvalue %dx.types.ResRet.f32 %548, 3
  %553 = fmul fast float %549, %520
  %554 = fmul fast float %550, %521
  %555 = fmul fast float %551, %522
  %556 = fmul fast float %552, %523
  %557 = add i32 %524, 7
  %558 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %526, i32 %557, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %559 = extractvalue %dx.types.ResRet.f32 %558, 0
  %560 = extractvalue %dx.types.ResRet.f32 %558, 1
  %561 = extractvalue %dx.types.ResRet.f32 %558, 2
  %562 = extractvalue %dx.types.ResRet.f32 %558, 3
  %563 = fadd fast float %559, %553
  %564 = fadd fast float %560, %554
  %565 = fadd fast float %561, %555
  %566 = fadd fast float %562, %556
  %567 = call float @dx.op.dot4.f32(i32 56, float %563, float %564, float %565, float %566, float %379, float %380, float %378, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %568 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %567)  ; FMax(a,b)
  %569 = fmul fast float %568, %546
  %570 = call float @dx.op.binary.f32(i32 35, float 0x3EE4F8B580000000, float %542)  ; FMax(a,b)
  %571 = fdiv fast float %569, %570
  %572 = fmul fast float %571, %539
  %573 = fmul fast float %571, %540
  %574 = fmul fast float %571, %541
  %575 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 159)  ; CBufferLoadLegacy(handle,regIndex)
  %576 = extractvalue %dx.types.CBufRet.f32 %575, 0
  %577 = extractvalue %dx.types.CBufRet.f32 %575, 1
  %578 = extractvalue %dx.types.CBufRet.f32 %575, 2
  %579 = fmul fast float %572, %576
  %580 = fmul fast float %573, %577
  %581 = fmul fast float %574, %578
  %582 = icmp eq i32 %45, 0
  br i1 %582, label %647, label %583

; <label>:583                                     ; preds = %444
  %584 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %585 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 0, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %586 = extractvalue %dx.types.ResRet.f32 %585, 0
  %587 = extractvalue %dx.types.ResRet.f32 %585, 1
  %588 = extractvalue %dx.types.ResRet.f32 %585, 2
  %589 = extractvalue %dx.types.ResRet.f32 %585, 3
  %590 = call float @dx.op.dot4.f32(i32 56, float %586, float %587, float %588, float %589, float %378, float %379, float %380, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %591 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 1, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %592 = extractvalue %dx.types.ResRet.f32 %591, 0
  %593 = extractvalue %dx.types.ResRet.f32 %591, 1
  %594 = extractvalue %dx.types.ResRet.f32 %591, 2
  %595 = extractvalue %dx.types.ResRet.f32 %591, 3
  %596 = call float @dx.op.dot4.f32(i32 56, float %592, float %593, float %594, float %595, float %378, float %379, float %380, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %597 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 2, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %598 = extractvalue %dx.types.ResRet.f32 %597, 0
  %599 = extractvalue %dx.types.ResRet.f32 %597, 1
  %600 = extractvalue %dx.types.ResRet.f32 %597, 2
  %601 = extractvalue %dx.types.ResRet.f32 %597, 3
  %602 = call float @dx.op.dot4.f32(i32 56, float %598, float %599, float %600, float %601, float %378, float %379, float %380, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %603 = fmul fast float %379, %378
  %604 = fmul fast float %380, %379
  %605 = fmul fast float %380, %380
  %606 = fmul fast float %380, %378
  %607 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 3, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %608 = extractvalue %dx.types.ResRet.f32 %607, 0
  %609 = extractvalue %dx.types.ResRet.f32 %607, 1
  %610 = extractvalue %dx.types.ResRet.f32 %607, 2
  %611 = extractvalue %dx.types.ResRet.f32 %607, 3
  %612 = call float @dx.op.dot4.f32(i32 56, float %608, float %609, float %610, float %611, float %603, float %604, float %605, float %606)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %613 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 4, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %614 = extractvalue %dx.types.ResRet.f32 %613, 0
  %615 = extractvalue %dx.types.ResRet.f32 %613, 1
  %616 = extractvalue %dx.types.ResRet.f32 %613, 2
  %617 = extractvalue %dx.types.ResRet.f32 %613, 3
  %618 = call float @dx.op.dot4.f32(i32 56, float %614, float %615, float %616, float %617, float %603, float %604, float %605, float %606)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %619 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 5, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %620 = extractvalue %dx.types.ResRet.f32 %619, 0
  %621 = extractvalue %dx.types.ResRet.f32 %619, 1
  %622 = extractvalue %dx.types.ResRet.f32 %619, 2
  %623 = extractvalue %dx.types.ResRet.f32 %619, 3
  %624 = call float @dx.op.dot4.f32(i32 56, float %620, float %621, float %622, float %623, float %603, float %604, float %605, float %606)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %625 = fmul fast float %378, %378
  %626 = fmul fast float %379, %379
  %627 = fsub fast float %625, %626
  %628 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %584, i32 6, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %629 = extractvalue %dx.types.ResRet.f32 %628, 0
  %630 = extractvalue %dx.types.ResRet.f32 %628, 1
  %631 = extractvalue %dx.types.ResRet.f32 %628, 2
  %632 = fmul fast float %629, %627
  %633 = fmul fast float %630, %627
  %634 = fmul fast float %631, %627
  %635 = fadd fast float %612, %590
  %636 = fadd fast float %618, %596
  %637 = fadd fast float %624, %602
  %638 = fadd fast float %635, %632
  %639 = fadd fast float %636, %633
  %640 = fadd fast float %637, %634
  %641 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %638)  ; FMax(a,b)
  %642 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %639)  ; FMax(a,b)
  %643 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %640)  ; FMax(a,b)
  %644 = fmul fast float %641, %94
  %645 = fmul fast float %642, %95
  %646 = fmul fast float %643, %96
  br label %647

; <label>:647                                     ; preds = %583, %444
  %648 = phi float [ %644, %583 ], [ 0.000000e+00, %444 ]
  %649 = phi float [ %645, %583 ], [ 0.000000e+00, %444 ]
  %650 = phi float [ %646, %583 ], [ 0.000000e+00, %444 ]
  %651 = fadd fast float %648, %579
  %652 = fadd fast float %649, %580
  %653 = fadd fast float %650, %581
  %654 = call float @dx.op.dot3.f32(i32 55, float %651, float %652, float %653, float 0x3FD3333340000000, float 0x3FE2E147A0000000, float 0x3FBC28F5C0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %655 = fmul fast float %651, %496
  %656 = fmul fast float %652, %497
  %657 = fmul fast float %653, %498
  %658 = fmul fast float %381, 0x3F40600000000000
  %659 = fadd fast float %658, 0x3FEFFCB940000000
  %660 = fmul fast float %382, 0x3F40600000000000
  %661 = fadd fast float %660, 0x3FEFFCB940000000
  %662 = fmul fast float %383, 0x3F40600000000000
  %663 = fadd fast float %662, 0x3FEFFCB940000000
  %664 = call float @dx.op.binary.f32(i32 35, float 1.000000e+00, float %659)  ; FMax(a,b)
  %665 = call float @dx.op.binary.f32(i32 35, float 1.000000e+00, float %661)  ; FMax(a,b)
  %666 = call float @dx.op.binary.f32(i32 35, float 1.000000e+00, float %663)  ; FMax(a,b)
  %667 = fmul fast float %655, %664
  %668 = fmul fast float %656, %665
  %669 = fmul fast float %657, %666
  %670 = fmul fast float %499, 0x3FDCCCCCC0000000
  %671 = fmul fast float %500, 0x3FDCCCCCC0000000
  %672 = fmul fast float %501, 0x3FDCCCCCC0000000
  %673 = fadd fast float %496, %670
  %674 = fadd fast float %497, %671
  %675 = fadd fast float %498, %672
  %676 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 146)  ; CBufferLoadLegacy(handle,regIndex)
  %677 = extractvalue %dx.types.CBufRet.f32 %676, 1
  %678 = fmul fast float %677, %673
  %679 = fmul fast float %677, %674
  %680 = fmul fast float %677, %675
  %681 = call float @dx.op.binary.f32(i32 35, float %243, float 0.000000e+00)  ; FMax(a,b)
  %682 = call float @dx.op.binary.f32(i32 35, float %244, float 0.000000e+00)  ; FMax(a,b)
  %683 = call float @dx.op.binary.f32(i32 35, float %245, float 0.000000e+00)  ; FMax(a,b)
  %684 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 141)  ; CBufferLoadLegacy(handle,regIndex)
  %685 = extractvalue %dx.types.CBufRet.f32 %684, 0
  %686 = fcmp fast ogt float %685, 0.000000e+00
  br i1 %686, label %687, label %762, !dx.controlflow.hints !68

; <label>:687                                     ; preds = %647
  %688 = add i32 %314, 1
  %689 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %688, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %690 = extractvalue %dx.types.ResRet.f32 %689, 0
  %691 = extractvalue %dx.types.ResRet.f32 %689, 1
  %692 = extractvalue %dx.types.ResRet.f32 %689, 2
  %693 = add i32 %314, 18
  %694 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %693, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %695 = extractvalue %dx.types.ResRet.f32 %694, 0
  %696 = extractvalue %dx.types.ResRet.f32 %694, 1
  %697 = extractvalue %dx.types.ResRet.f32 %694, 2
  %698 = add i32 %314, 17
  %699 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %698, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %700 = extractvalue %dx.types.ResRet.f32 %699, 3
  %701 = add i32 %314, 24
  %702 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %701, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %703 = extractvalue %dx.types.ResRet.f32 %702, 3
  %704 = add i32 %314, 25
  %705 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %704, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %706 = extractvalue %dx.types.ResRet.f32 %705, 3
  %707 = add i32 %314, 31
  %708 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %509, i32 %707, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %709 = extractvalue %dx.types.ResRet.f32 %708, 0
  %710 = fsub fast float %67, %690
  %711 = fsub fast float %68, %691
  %712 = fsub fast float %69, %692
  %713 = fmul fast float %710, 2.097152e+06
  %714 = fmul fast float %711, 2.097152e+06
  %715 = fmul fast float %712, 2.097152e+06
  %716 = fadd fast float %713, %187
  %717 = fsub fast float %716, %695
  %718 = fadd fast float %714, %188
  %719 = fsub fast float %718, %696
  %720 = fadd fast float %715, %189
  %721 = fsub fast float %720, %697
  %722 = call float @dx.op.unary.f32(i32 6, float %717)  ; FAbs(value)
  %723 = call float @dx.op.unary.f32(i32 6, float %719)  ; FAbs(value)
  %724 = call float @dx.op.unary.f32(i32 6, float %721)  ; FAbs(value)
  %725 = fadd fast float %700, 1.000000e+00
  %726 = fadd fast float %703, 1.000000e+00
  %727 = fadd fast float %706, 1.000000e+00
  %728 = fcmp fast ogt float %722, %725
  %729 = fcmp fast ogt float %723, %726
  %730 = fcmp fast ogt float %724, %727
  %731 = or i1 %728, %729
  %732 = or i1 %731, %730
  br i1 %732, label %733, label %746

; <label>:733                                     ; preds = %687
  %734 = fadd fast float %188, %187
  %735 = fadd fast float %67, %68
  %736 = fadd fast float %734, %189
  %737 = fadd fast float %735, %69
  %738 = fmul fast float %736, 0x3F52E83A20000000
  %739 = fmul fast float %737, 0x40A2E83A20000000
  %740 = call float @dx.op.unary.f32(i32 22, float %739)  ; Frc(value)
  %741 = fadd fast float %740, %738
  %742 = call float @dx.op.unary.f32(i32 22, float %741)  ; Frc(value)
  %743 = fcmp fast ogt float %742, 5.000000e-01
  %744 = uitofp i1 %743 to float
  %745 = fsub fast float 1.000000e+00, %744
  br label %762

; <label>:746                                     ; preds = %687
  %747 = fcmp fast ogt float %709, 0.000000e+00
  br i1 %747, label %748, label %762

; <label>:748                                     ; preds = %746
  %749 = fsub fast float %184, %34
  %750 = fsub fast float %185, %35
  %751 = fsub fast float %186, %36
  %752 = call float @dx.op.unary.f32(i32 6, float %749)  ; FAbs(value)
  %753 = call float @dx.op.unary.f32(i32 6, float %750)  ; FAbs(value)
  %754 = call float @dx.op.unary.f32(i32 6, float %751)  ; FAbs(value)
  %755 = call float @dx.op.binary.f32(i32 35, float %753, float %754)  ; FMax(a,b)
  %756 = call float @dx.op.binary.f32(i32 35, float %752, float %755)  ; FMax(a,b)
  %757 = fsub fast float %756, %709
  %758 = call float @dx.op.unary.f32(i32 6, float %757)  ; FAbs(value)
  %759 = fmul fast float %758, 2.000000e+01
  %760 = call float @dx.op.unary.f32(i32 7, float %759)  ; Saturate(value)
  %761 = fsub fast float 1.000000e+00, %760
  br label %762

; <label>:762                                     ; preds = %748, %746, %733, %647
  %763 = phi float [ %745, %733 ], [ %761, %748 ], [ %681, %746 ], [ %681, %647 ]
  %764 = phi float [ 1.000000e+00, %733 ], [ 0.000000e+00, %748 ], [ %682, %746 ], [ %682, %647 ]
  %765 = phi float [ %744, %733 ], [ %761, %748 ], [ %683, %746 ], [ %683, %647 ]
  %766 = fadd fast float %678, %667
  %767 = fadd fast float %679, %668
  %768 = fadd fast float %680, %669
  %769 = fadd fast float %766, %763
  %770 = fadd fast float %767, %764
  %771 = fadd fast float %768, %765
  %772 = fmul fast float %26, 7.812500e-03
  %773 = fmul fast float %27, 7.812500e-03
  %774 = call float @dx.op.unary.f32(i32 22, float %772)  ; Frc(value)
  %775 = call float @dx.op.unary.f32(i32 22, float %773)  ; Frc(value)
  %776 = fmul fast float %774, 1.280000e+02
  %777 = fmul fast float %775, 1.280000e+02
  %778 = fadd fast float %776, 0xC05015CCC0000000
  %779 = fadd fast float %777, 0xC0521DCCC0000000
  %780 = fmul fast float %778, %778
  %781 = fmul fast float %779, %779
  %782 = fmul fast float %779, %778
  %783 = call float @dx.op.dot3.f32(i32 55, float %780, float %781, float %782, float 0x4034640000000000, float 0x404E5A0000000000, float 0x40036CCAA0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %784 = call float @dx.op.unary.f32(i32 22, float %783)  ; Frc(value)
  %785 = fadd fast float %784, -5.000000e-01
  %786 = fmul fast float %654, %505
  %787 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %25, i32 136)  ; CBufferLoadLegacy(handle,regIndex)
  %788 = extractvalue %dx.types.CBufRet.f32 %787, 1
  %789 = fmul fast float %786, %788
  %790 = fadd fast float %789, 3.906250e-03
  %791 = call float @dx.op.unary.f32(i32 23, float %790)  ; Log(value)
  %792 = fmul fast float %791, 6.250000e-02
  %793 = fmul fast float %785, 0x3F70101020000000
  %794 = fadd fast float %793, 5.000000e-01
  %795 = fadd fast float %794, %792
  %796 = fmul fast float %378, 5.000000e-01
  %797 = fmul fast float %379, 5.000000e-01
  %798 = fmul fast float %380, 5.000000e-01
  %799 = fadd fast float %796, 5.000000e-01
  %800 = fadd fast float %797, 5.000000e-01
  %801 = fadd fast float %798, 5.000000e-01
  %802 = fmul fast float %788, %769
  %803 = fmul fast float %788, %770
  %804 = fmul fast float %788, %771
  %805 = call float @dx.op.binary.f32(i32 36, float %802, float 3.225600e+04)  ; FMin(a,b)
  %806 = call float @dx.op.binary.f32(i32 36, float %803, float 3.225600e+04)  ; FMin(a,b)
  %807 = call float @dx.op.binary.f32(i32 36, float %804, float 3.225600e+04)  ; FMin(a,b)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %805)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %806)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %807)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %799)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %800)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %801)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %394)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %384)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %385)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %386)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float 0x3FD0505060000000)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %381)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %382)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %383)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %795)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %445)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %446)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %447)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %448)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 1, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleBias.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!31}
!dx.entryPoints = !{!32}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{!5, null, !18, !23}
!5 = !{!6, !8, !9, !10, !12, !13, !14, !15, !16, !17}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !7}
!10 = !{i32 3, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !11}
!11 = !{i32 0, i32 9}
!12 = !{i32 4, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 4, i32 1, i32 2, i32 0, !11}
!13 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 2, i32 0, !11}
!14 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 6, i32 1, i32 2, i32 0, !11}
!15 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 7, i32 1, i32 2, i32 0, !11}
!16 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 8, i32 1, i32 2, i32 0, !11}
!17 = !{i32 9, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 9, i32 1, i32 2, i32 0, !11}
!18 = !{!19, !20, !21, !22}
!19 = !{i32 0, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 0, i32 1, i32 5388, null}
!20 = !{i32 1, %hostlayout.UniformBufferConstants_OpaqueBasePass* undef, !"", i32 0, i32 1, i32 1, i32 2428, null}
!21 = !{i32 2, %hostlayout.UniformBufferConstants_LandscapeParameters* undef, !"", i32 0, i32 2, i32 1, i32 252, null}
!22 = !{i32 3, %UniformBufferConstants_Material* undef, !"", i32 0, i32 3, i32 1, i32 76, null}
!23 = !{!24, !25, !26, !27, !28, !29, !30}
!24 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!25 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!26 = !{i32 2, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!27 = !{i32 3, %struct.SamplerState* undef, !"", i32 0, i32 3, i32 1, i32 0, null}
!28 = !{i32 4, %struct.SamplerState* undef, !"", i32 0, i32 4, i32 1, i32 0, null}
!29 = !{i32 5, %struct.SamplerState* undef, !"", i32 0, i32 5, i32 1, i32 0, null}
!30 = !{i32 6, %struct.SamplerState* undef, !"", i32 0, i32 6, i32 1, i32 0, null}
!31 = !{[34 x i32] [i32 32, i32 28, i32 62583, i32 62583, i32 32775, i32 32775, i32 0, i32 0, i32 32887, i32 32887, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1046519, i32 0, i32 0, i32 0, i32 5, i32 5, i32 5, i32 0, i32 65536, i32 131072, i32 786432, i32 983040, i32 128887, i32 194423, i32 848903, i32 1045511]}
!32 = !{void ()* @MainPS, !"MainPS", !33, !4, !64}
!33 = !{!34, !56, null}
!34 = !{!35, !38, !41, !43, !45, !47, !49, !52, !54, !55}
!35 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !36, i8 2, i32 1, i8 2, i32 0, i8 0, !37}
!36 = !{i32 0}
!37 = !{i32 3, i32 3}
!38 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !39, i8 2, i32 1, i8 4, i32 1, i8 0, !40}
!39 = !{i32 1}
!40 = !{i32 3, i32 12}
!41 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !42, i8 2, i32 1, i8 4, i32 2, i8 0, null}
!42 = !{i32 2}
!43 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !44, i8 2, i32 1, i8 2, i32 0, i8 2, !37}
!44 = !{i32 3}
!45 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !46, i8 2, i32 1, i8 2, i32 3, i8 0, null}
!46 = !{i32 4}
!47 = !{i32 5, !"PRIMITIVE_ID", i8 5, i8 0, !36, i8 1, i32 1, i8 1, i32 4, i8 0, !48}
!48 = !{i32 3, i32 1}
!49 = !{i32 6, !"TEXCOORD", i8 9, i8 0, !50, i8 2, i32 1, i8 3, i32 5, i8 0, !51}
!50 = !{i32 9}
!51 = !{i32 3, i32 7}
!52 = !{i32 7, !"VELOCITY_PREV_POS", i8 9, i8 0, !36, i8 2, i32 1, i8 4, i32 6, i8 0, !53}
!53 = !{i32 3, i32 15}
!54 = !{i32 8, !"SV_Position", i8 9, i8 3, !36, i8 4, i32 1, i8 4, i32 7, i8 0, !53}
!55 = !{i32 9, !"SV_IsFrontFace", i8 5, i8 13, !36, i8 1, i32 1, i8 1, i32 4, i8 1, null}
!56 = !{!57, !58, !59, !60, !61, !62}
!57 = !{i32 0, !"SV_Target", i8 9, i8 16, !36, i8 0, i32 1, i8 4, i32 0, i8 0, !53}
!58 = !{i32 1, !"SV_Target", i8 9, i8 16, !39, i8 0, i32 1, i8 4, i32 1, i8 0, !53}
!59 = !{i32 2, !"SV_Target", i8 9, i8 16, !42, i8 0, i32 1, i8 4, i32 2, i8 0, !53}
!60 = !{i32 3, !"SV_Target", i8 9, i8 16, !44, i8 0, i32 1, i8 4, i32 3, i8 0, !53}
!61 = !{i32 4, !"SV_Target", i8 9, i8 16, !46, i8 0, i32 1, i8 4, i32 4, i8 0, !53}
!62 = !{i32 5, !"SV_Target", i8 9, i8 16, !63, i8 0, i32 1, i8 4, i32 6, i8 0, !53}
!63 = !{i32 6}
!64 = !{i32 0, i64 16, i32 5, !36}
!65 = distinct !{!65, !"dx.controlflow.hints", i32 2}
!66 = distinct !{!66, !"dx.controlflow.hints", i32 2}
!67 = distinct !{!67, !"dx.controlflow.hints", i32 1}
!68 = distinct !{!68, !"dx.controlflow.hints", i32 1}
